{"version":3,"sources":["../src/components/button.tsx","../src/utils/index.ts","../src/utils/toast.ts","../src/utils/validation.ts","../src/utils/dateUtils.ts","../src/utils/numberUtils.ts","../src/utils/stringUtils.ts","../src/utils/arrayUtils.ts","../src/components/button-variants.ts","../src/components/input.tsx","../src/components/label.tsx","../src/components/badge.tsx","../src/components/badge-variants.ts","../src/components/card.tsx","../src/components/table.tsx","../src/utils/utils.ts","../src/components/skeleton.tsx","../src/components/textarea.tsx","../src/components/theme/ThemeProvider.tsx","../src/components/theme/ThemeSwitch.tsx","../src/components/DataTable.tsx","../src/components/ErrorBoundary.tsx","../src/components/Header.tsx","../src/services/AuthProvider.tsx","../src/components/ProtectedRoute.tsx","../src/components/auth/AuthLayout.tsx","../src/components/FilterDropdown.tsx","../src/components/GenericForm.tsx","../src/hooks/useErrorHandler.ts","../src/hooks/useSidebar.ts","../src/hooks/useDataService.ts","../src/hooks/useAuthGuard.ts","../src/hooks/useSupabaseQuery.ts","../src/hooks/useBulkOperations.ts","../src/hooks/useDataTable.ts","../src/hooks/useAdvancedQuery.ts","../src/components/AppHeader.tsx","../src/components/Avatar.tsx","../src/components/DropdownMenu.tsx","../src/components/ExactHeader.tsx","../src/components/LoginPage.tsx","../src/components/SimpleHeader.tsx","../src/validation/url-validators.ts","../src/validation/form-validators.ts","../src/services/BaseService.ts","../src/services/SupabaseService.ts","../src/services/supabase.ts","../src/services/supabase-storage.ts","../src/services/supabase-database.ts","../src/services/supabase-data-provider.ts","../src/stores/storeFactory.ts"],"sourcesContent":["import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"../utils\";\nimport { buttonVariants } from \"./button-variants\";\n\nconst Button = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> &\n    VariantProps<typeof buttonVariants> & {\n      asChild?: boolean;\n    }\n>(({ className, variant, size, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\";\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      ref={ref}\n      {...props}\n    />\n  );\n});\n\nButton.displayName = \"Button\";\n\nexport { Button };\n","import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\n/**\n * Utility function to merge Tailwind CSS classes\n * Combines clsx and tailwind-merge for optimal class handling\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\n/**\n * Confirmation utility for user actions\n */\nexport const confirmAction = (message: string): boolean => {\n  return confirm(message);\n}\n\n/**\n * Helper to get nested values via dot notation\n */\nexport const getNested = (obj: any, path: string): any => {\n  if (!obj || !path) return undefined;\n  if (path.indexOf('.') === -1) return obj[path];\n  return path.split('.').reduce((acc, key) => (acc && acc[key] !== undefined ? acc[key] : undefined), obj);\n};\n\n/**\n * Format date for display\n */\nexport const formatDate = (date: string | Date, format: string = 'yyyy-MM-dd'): string => {\n  if (!date) return 'Not set';\n  const d = new Date(date);\n  if (isNaN(d.getTime())) return 'Invalid date';\n  \n  // Simple date formatting - can be enhanced with date-fns if needed\n  const year = d.getFullYear();\n  const month = String(d.getMonth() + 1).padStart(2, '0');\n  const day = String(d.getDate()).padStart(2, '0');\n  \n  return `${year}-${month}-${day}`;\n};\n\n/**\n * Format datetime for display\n */\nexport const formatDateTime = (datetime: string | Date): string => {\n  if (!datetime) return 'Not scheduled';\n  const d = new Date(datetime);\n  if (isNaN(d.getTime())) return 'Invalid datetime';\n  \n  return d.toISOString().replace('T', ' ').replace('.000Z', '');\n};\n\n/**\n * Generate unique ID\n */\nexport const generateId = (): string => {\n  return `ID_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n};\n\n/**\n * Debounce function\n */\nexport const debounce = <T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): ((...args: Parameters<T>) => void) => {\n  let timeout: ReturnType<typeof setTimeout>;\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), wait);\n  };\n};\n\n/**\n * Throttle function\n */\nexport const throttle = <T extends (...args: any[]) => any>(\n  func: T,\n  limit: number\n): ((...args: Parameters<T>) => void) => {\n  let inThrottle: boolean;\n  return (...args: Parameters<T>) => {\n    if (!inThrottle) {\n      func(...args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n};\n\n// Re-export toast utilities\nexport * from './toast';\n\n/**\n * Safe async wrapper that handles errors gracefully\n */\nexport const safeAsync = async <T>(asyncFn: () => Promise<T>, context: any = {}): Promise<T | Error> => {\n  try {\n    return await asyncFn();\n  } catch (error) {\n    // Return the error instead of throwing it\n    return error instanceof Error ? error : new Error(String(error));\n  }\n};\n\n/**\n * Handle API errors with consistent error handling\n */\nexport const handleApiError = (error: any, context: any = {}): Error => {\n  // Determine error type based on response status\n  let errorMessage = 'An unexpected error occurred';\n  \n  if (error.response) {\n    const status = error.response.status;\n    switch (status) {\n      case 400:\n        errorMessage = 'Invalid request data';\n        break;\n      case 401:\n        errorMessage = 'Authentication required';\n        break;\n      case 403:\n        errorMessage = 'Access denied';\n        break;\n      case 404:\n        errorMessage = 'Resource not found';\n        break;\n      case 500:\n      case 502:\n      case 503:\n        errorMessage = 'Server error occurred';\n        break;\n      default:\n        errorMessage = 'Network error occurred';\n    }\n  } else if (error.request) {\n    errorMessage = 'Network connection failed';\n  } else if (error.message) {\n    errorMessage = error.message;\n  }\n\n  // Return a new Error with the processed message\n  return new Error(errorMessage);\n};\n\n// Re-export validation utilities\nexport * from './validation';\n\n// Consolidated utility functions\nexport * from './dateUtils';\nexport * from './numberUtils';\nexport * from './stringUtils';\nexport * from './arrayUtils';\n","// @ts-ignore\nimport { toast } from 'sonner';\n\n/**\n * Unified toast notification system\n * Combines the best features from both tracc and scheduler_demo\n */\n\n/**\n * Show a validation error toast with formatted error messages\n * @param {string|Array} errors - Error message(s) to display\n */\nexport const showValidationError = (errors: string | string[]) => {\n  if (!errors || (Array.isArray(errors) && errors.length === 0)) {\n    return;\n  }\n  \n  let errorMessage: string;\n  \n  if (Array.isArray(errors)) {\n    // Filter out empty errors and format nicely\n    const validErrors = errors.filter(error => error && error.trim().length > 0);\n    \n    if (validErrors.length === 0) {\n      return;\n    }\n    \n    if (validErrors.length === 1) {\n      errorMessage = validErrors[0];\n    } else {\n      errorMessage = `There are ${validErrors.length} validation errors:\\n\\n• ${validErrors.join('\\n• ')}`;\n    }\n  } else {\n    errorMessage = errors;\n  }\n  \n  toast.error(errorMessage, {\n    duration: 10000, // Validation errors stay longer\n    position: 'top-right',\n    style: {\n      maxWidth: '400px',\n      whiteSpace: 'pre-line'\n    }\n  });\n};\n\n// Standard toast functions\nexport const showSuccess = (message: string) => {\n  toast.success(message);\n};\n\nexport const showError = (message: string) => {\n  toast.error(message);\n};\n\nexport const showWarning = (message: string) => {\n  toast.warning(message);\n};\n\nexport const showInfo = (message: string) => {\n  toast.info(message);\n};\n\n// Advanced toast functions\nexport const showToast = (message: string, options?: any) => toast(message, options);\nexport const dismissAll = () => toast.dismiss();\nexport const dismiss = (id?: string | number) => toast.dismiss(id);\n","/**\n * Validation utilities for shared package\n * Provides basic validation functions that can be extended by applications\n */\n\n/**\n * Basic validation function interface\n */\nexport interface ValidationResult {\n  isValid: boolean;\n  errors: Record<string, string>;\n}\n\n/**\n * Simple validation function that can work with any validation library\n */\nexport const validateData = (data: any, schema: any): ValidationResult => {\n  try {\n    // If schema has a validateSync method (Yup), use it\n    if (schema && typeof schema.validateSync === 'function') {\n      schema.validateSync(data, { abortEarly: false });\n      return { isValid: true, errors: {} };\n    }\n    \n    // If schema is a function, call it\n    if (typeof schema === 'function') {\n      const result = schema(data);\n      return result;\n    }\n    \n    // Default: assume valid if no schema\n    return { isValid: true, errors: {} };\n  } catch (validationError: any) {\n    const errors: Record<string, string> = {};\n    \n    // Handle Yup validation errors\n    if (validationError.inner && Array.isArray(validationError.inner)) {\n      validationError.inner.forEach((error: any) => {\n        errors[error.path] = error.message;\n      });\n    } else if (validationError.message) {\n      errors.general = validationError.message;\n    }\n    \n    return { isValid: false, errors };\n  }\n};\n\n/**\n * Basic schemas placeholder - applications should define their own\n */\nexport const SCHEMAS = {\n  // Applications should extend this with their specific schemas\n};\n\n/**\n * Utility function to validate required fields\n */\nexport const validateRequired = (data: Record<string, any>, requiredFields: string[]): ValidationResult => {\n  const errors: Record<string, string> = {};\n  \n  requiredFields.forEach(field => {\n    if (!data[field] || (typeof data[field] === 'string' && data[field].trim() === '')) {\n      errors[field] = 'This field is required';\n    }\n  });\n  \n  return {\n    isValid: Object.keys(errors).length === 0,\n    errors\n  };\n};\n\n/**\n * Utility function to validate email format\n */\nexport const validateEmail = (email: string): boolean => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\n","import { format, parseISO, isValid, addDays, subDays, startOfDay, endOfDay, differenceInDays, differenceInHours, differenceInMinutes } from 'date-fns';\n\n/**\n * Common date formatting patterns used across all repositories\n */\nexport const DATE_FORMATS = {\n  ISO: 'yyyy-MM-dd',\n  ISO_DATETIME: \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\",\n  DISPLAY: 'dd/MM/yyyy',\n  DISPLAY_DATETIME: 'dd/MM/yyyy HH:mm',\n  TIME: 'HH:mm',\n  MONTH_YEAR: 'MM/yyyy',\n  FULL: 'EEEE, MMMM do, yyyy',\n  UTC_DATE_IT: 'dd/MM/yyyy', // Italian format for UTC dates\n  UTC_DATETIME_IT: 'dd/MM/yyyy HH:mm', // Italian format for UTC datetime\n} as const;\n\n/**\n * Format date using common patterns\n */\nexport const formatDate = (\n  date: Date | string | null | undefined,\n  formatPattern: string = DATE_FORMATS.DISPLAY\n): string => {\n  if (!date) return '';\n  \n  try {\n    const dateObj = typeof date === 'string' ? parseISO(date) : date;\n    if (!isValid(dateObj)) return '';\n    \n    return format(dateObj, formatPattern);\n  } catch (error) {\n    console.warn('Date formatting error:', error);\n    return '';\n  }\n};\n\n/**\n * Format date for display (user-friendly format)\n */\nexport const formatDisplayDate = (date: Date | string | null | undefined): string => {\n  return formatDate(date, DATE_FORMATS.DISPLAY);\n};\n\n/**\n * Format datetime for display\n */\nexport const formatDisplayDateTime = (date: Date | string | null | undefined): string => {\n  return formatDate(date, DATE_FORMATS.DISPLAY_DATETIME);\n};\n\n/**\n * Format time only\n */\nexport const formatTime = (date: Date | string | null | undefined): string => {\n  return formatDate(date, DATE_FORMATS.TIME);\n};\n\n/**\n * Format date for ISO string (database storage)\n */\nexport const formatISODate = (date: Date | string | null | undefined): string => {\n  return formatDate(date, DATE_FORMATS.ISO);\n};\n\n/**\n * Format datetime for ISO string (database storage)\n */\nexport const formatISODateTime = (date: Date | string | null | undefined): string => {\n  if (!date) return '';\n  \n  try {\n    const dateObj = typeof date === 'string' ? parseISO(date) : date;\n    if (!isValid(dateObj)) return '';\n    \n    return dateObj.toISOString();\n  } catch (error) {\n    console.warn('ISO datetime formatting error:', error);\n    return '';\n  }\n};\n\n/**\n * Parse date string safely\n */\nexport const parseDate = (dateString: string | null | undefined): Date | null => {\n  if (!dateString) return null;\n  \n  try {\n    const parsed = parseISO(dateString);\n    return isValid(parsed) ? parsed : null;\n  } catch (error) {\n    console.warn('Date parsing error:', error);\n    return null;\n  }\n};\n\n/**\n * Get current date in ISO format\n */\nexport const getCurrentISODate = (): string => {\n  return formatISODate(new Date());\n};\n\n/**\n * Get current datetime in ISO format\n */\nexport const getCurrentISODateTime = (): string => {\n  return new Date().toISOString();\n};\n\n/**\n * Add days to a date\n */\nexport const addDaysToDate = (date: Date | string, days: number): Date => {\n  const dateObj = typeof date === 'string' ? parseISO(date) : date;\n  return addDays(dateObj, days);\n};\n\n/**\n * Subtract days from a date\n */\nexport const subtractDaysFromDate = (date: Date | string, days: number): Date => {\n  const dateObj = typeof date === 'string' ? parseISO(date) : date;\n  return subDays(dateObj, days);\n};\n\n/**\n * Get start of day\n */\nexport const getStartOfDay = (date: Date | string): Date => {\n  const dateObj = typeof date === 'string' ? parseISO(date) : date;\n  return startOfDay(dateObj);\n};\n\n/**\n * Get end of day\n */\nexport const getEndOfDay = (date: Date | string): Date => {\n  const dateObj = typeof date === 'string' ? parseISO(date) : date;\n  return endOfDay(dateObj);\n};\n\n/**\n * Calculate difference in days between two dates\n */\nexport const getDaysDifference = (date1: Date | string, date2: Date | string): number => {\n  const dateObj1 = typeof date1 === 'string' ? parseISO(date1) : date1;\n  const dateObj2 = typeof date2 === 'string' ? parseISO(date2) : date2;\n  return differenceInDays(dateObj1, dateObj2);\n};\n\n/**\n * Calculate difference in hours between two dates\n */\nexport const getHoursDifference = (date1: Date | string, date2: Date | string): number => {\n  const dateObj1 = typeof date1 === 'string' ? parseISO(date1) : date1;\n  const dateObj2 = typeof date2 === 'string' ? parseISO(date2) : date2;\n  return differenceInHours(dateObj1, dateObj2);\n};\n\n/**\n * Calculate difference in minutes between two dates\n */\nexport const getMinutesDifference = (date1: Date | string, date2: Date | string): number => {\n  const dateObj1 = typeof date1 === 'string' ? parseISO(date1) : date1;\n  const dateObj2 = typeof date2 === 'string' ? parseISO(date2) : date2;\n  return differenceInMinutes(dateObj1, dateObj2);\n};\n\n/**\n * Check if a date is valid\n */\nexport const isValidDate = (date: Date | string | null | undefined): boolean => {\n  if (!date) return false;\n  \n  try {\n    const dateObj = typeof date === 'string' ? parseISO(date) : date;\n    return isValid(dateObj);\n  } catch (error) {\n    return false;\n  }\n};\n\n/**\n * Get relative time string (e.g., \"2 hours ago\", \"in 3 days\")\n */\nexport const getRelativeTime = (date: Date | string): string => {\n  if (!date) return '';\n  \n  try {\n    const dateObj = typeof date === 'string' ? parseISO(date) : date;\n    if (!isValid(dateObj)) return '';\n    \n    const now = new Date();\n    const diffInMinutes = differenceInMinutes(now, dateObj);\n    \n    if (diffInMinutes < 1) return 'just now';\n    if (diffInMinutes < 60) return `${diffInMinutes} minute${diffInMinutes === 1 ? '' : 's'} ago`;\n    \n    const diffInHours = Math.floor(diffInMinutes / 60);\n    if (diffInHours < 24) return `${diffInHours} hour${diffInHours === 1 ? '' : 's'} ago`;\n    \n    const diffInDays = Math.floor(diffInHours / 24);\n    if (diffInDays < 30) return `${diffInDays} day${diffInDays === 1 ? '' : 's'} ago`;\n    \n    const diffInMonths = Math.floor(diffInDays / 30);\n    if (diffInMonths < 12) return `${diffInMonths} month${diffInMonths === 1 ? '' : 's'} ago`;\n    \n    const diffInYears = Math.floor(diffInMonths / 12);\n    return `${diffInYears} year${diffInYears === 1 ? '' : 's'} ago`;\n  } catch (error) {\n    console.warn('Relative time calculation error:', error);\n    return '';\n  }\n};\n\n/**\n * Create date range for queries\n */\nexport const createDateRange = (startDate: string, endDate: string) => ({\n  startDate: formatISODate(startDate),\n  endDate: formatISODate(endDate),\n});\n\n/**\n * Get date range for common periods\n */\nexport const getDateRangePresets = () => {\n  const today = new Date();\n  const yesterday = subDays(today, 1);\n  const lastWeek = subDays(today, 7);\n  const lastMonth = subDays(today, 30);\n  const lastYear = subDays(today, 365);\n  \n  return {\n    today: createDateRange(formatISODate(today), formatISODate(today)),\n    yesterday: createDateRange(formatISODate(yesterday), formatISODate(yesterday)),\n    lastWeek: createDateRange(formatISODate(lastWeek), formatISODate(today)),\n    lastMonth: createDateRange(formatISODate(lastMonth), formatISODate(today)),\n    lastYear: createDateRange(formatISODate(lastYear), formatISODate(today)),\n  };\n};\n\n/**\n * Validate date range\n */\nexport const validateDateRange = (startDate: string, endDate: string): boolean => {\n  const start = parseDate(startDate);\n  const end = parseDate(endDate);\n  \n  if (!start || !end) return false;\n  \n  return start <= end;\n};\n\n/**\n * Format duration in minutes to human readable format\n */\nexport const formatDuration = (minutes: number): string => {\n  if (minutes < 60) {\n    return `${minutes} min`;\n  }\n  \n  const hours = Math.floor(minutes / 60);\n  const remainingMinutes = minutes % 60;\n  \n  if (remainingMinutes === 0) {\n    return `${hours}h`;\n  }\n  \n  return `${hours}h ${remainingMinutes}m`;\n};\n\n/**\n * Convert hours to minutes\n */\nexport const hoursToMinutes = (hours: number): number => {\n  return Math.round(hours * 60);\n};\n\n/**\n * Convert minutes to hours\n */\nexport const minutesToHours = (minutes: number): number => {\n  return minutes / 60;\n};\n\n/**\n * UTC date formatting functions (always UTC+0, no timezone manipulation)\n * Used primarily by tracc application\n */\nexport const formatUtcDate = (isoString: string | null | undefined): string => {\n  if (!isoString) return '';\n  const date = new Date(isoString);\n  return date.toLocaleDateString('it-IT', {\n    timeZone: 'UTC',\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit'\n  });\n};\n\nexport const formatUtcDateTime = (isoString: string | null | undefined): string => {\n  if (!isoString) return '';\n  const date = new Date(isoString);\n  return date.toLocaleString('it-IT', {\n    timeZone: 'UTC',\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\n\n/**\n * Time constants used across applications\n */\nexport const TIME_CONSTANTS = {\n  MINUTES_PER_HOUR: 60,\n  HOURS_PER_DAY: 24,\n  DAYS_PER_WEEK: 7,\n  MILLISECONDS_PER_SECOND: 1000,\n  MILLISECONDS_PER_MINUTE: 60 * 1000,\n  MILLISECONDS_PER_HOUR: 60 * 60 * 1000,\n  MILLISECONDS_PER_DAY: 24 * 60 * 60 * 1000,\n} as const;\n","/**\n * Number formatting utilities consolidated from all repositories\n */\n\n/**\n * Format number as currency\n */\nexport const formatCurrency = (\n  amount: number | string | null | undefined,\n  currency = 'EUR',\n  locale = 'it-IT'\n): string => {\n  if (amount === null || amount === undefined || amount === '') return '';\n  \n  const numAmount = typeof amount === 'string' ? parseFloat(amount) : amount;\n  if (isNaN(numAmount)) return '';\n  \n  try {\n    return new Intl.NumberFormat(locale, {\n      style: 'currency',\n      currency,\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    }).format(numAmount);\n  } catch (error) {\n    console.warn('Currency formatting error:', error);\n    return `${currency} ${numAmount.toFixed(2)}`;\n  }\n};\n\n/**\n * Format number as percentage\n */\nexport const formatPercentage = (\n  value: number | string | null | undefined,\n  decimals = 1,\n  locale = 'it-IT'\n): string => {\n  if (value === null || value === undefined || value === '') return '';\n  \n  const numValue = typeof value === 'string' ? parseFloat(value) : value;\n  if (isNaN(numValue)) return '';\n  \n  try {\n    return new Intl.NumberFormat(locale, {\n      style: 'percent',\n      minimumFractionDigits: decimals,\n      maximumFractionDigits: decimals,\n    }).format(numValue / 100);\n  } catch (error) {\n    console.warn('Percentage formatting error:', error);\n    return `${numValue.toFixed(decimals)}%`;\n  }\n};\n\n/**\n * Format number with thousands separator\n */\nexport const formatNumber = (\n  value: number | string | null | undefined,\n  decimals = 0,\n  locale = 'it-IT'\n): string => {\n  if (value === null || value === undefined || value === '') return '';\n  \n  const numValue = typeof value === 'string' ? parseFloat(value) : value;\n  if (isNaN(numValue)) return '';\n  \n  try {\n    return new Intl.NumberFormat(locale, {\n      minimumFractionDigits: decimals,\n      maximumFractionDigits: decimals,\n    }).format(numValue);\n  } catch (error) {\n    console.warn('Number formatting error:', error);\n    return numValue.toFixed(decimals);\n  }\n};\n\n/**\n * Format number with unit (e.g., kg, m, etc.)\n */\nexport const formatNumberWithUnit = (\n  value: number | string | null | undefined,\n  unit: string,\n  decimals = 2,\n  locale = 'it-IT'\n): string => {\n  if (value === null || value === undefined || value === '') return '';\n  \n  const formattedNumber = formatNumber(value, decimals, locale);\n  return formattedNumber ? `${formattedNumber} ${unit}` : '';\n};\n\n/**\n * Format weight in kg\n */\nexport const formatWeight = (\n  value: number | string | null | undefined,\n  decimals = 2,\n  locale = 'it-IT'\n): string => {\n  return formatNumberWithUnit(value, 'kg', decimals, locale);\n};\n\n/**\n * Format volume in liters\n */\nexport const formatVolume = (\n  value: number | string | null | undefined,\n  decimals = 2,\n  locale = 'it-IT'\n): string => {\n  return formatNumberWithUnit(value, 'L', decimals, locale);\n};\n\n/**\n * Format distance in meters\n */\nexport const formatDistance = (\n  value: number | string | null | undefined,\n  decimals = 2,\n  locale = 'it-IT'\n): string => {\n  return formatNumberWithUnit(value, 'm', decimals, locale);\n};\n\n/**\n * Parse number from string safely\n */\nexport const parseNumber = (value: string | number | null | undefined): number | null => {\n  if (value === null || value === undefined || value === '') return null;\n  \n  const numValue = typeof value === 'string' ? parseFloat(value.replace(/,/g, '.')) : value;\n  return isNaN(numValue) ? null : numValue;\n};\n\n/**\n * Parse integer from string safely\n */\nexport const parseInteger = (value: string | number | null | undefined): number | null => {\n  if (value === null || value === undefined || value === '') return null;\n  \n  const numValue = typeof value === 'string' ? parseInt(value, 10) : Math.floor(value);\n  return isNaN(numValue) ? null : numValue;\n};\n\n/**\n * Round number to specified decimal places\n */\nexport const roundNumber = (value: number, decimals = 2): number => {\n  const factor = Math.pow(10, decimals);\n  return Math.round(value * factor) / factor;\n};\n\n/**\n * Clamp number between min and max values\n */\nexport const clampNumber = (value: number, min: number, max: number): number => {\n  return Math.min(Math.max(value, min), max);\n};\n\n/**\n * Check if value is a valid number\n */\nexport const isValidNumber = (value: any): boolean => {\n  return typeof value === 'number' && !isNaN(value) && isFinite(value);\n};\n\n/**\n * Calculate percentage of value relative to total\n */\nexport const calculatePercentage = (value: number, total: number): number => {\n  if (total === 0) return 0;\n  return (value / total) * 100;\n};\n\n/**\n * Calculate percentage change between two values\n */\nexport const calculatePercentageChange = (oldValue: number, newValue: number): number => {\n  if (oldValue === 0) return newValue === 0 ? 0 : 100;\n  return ((newValue - oldValue) / oldValue) * 100;\n};\n\n/**\n * Sum array of numbers\n */\nexport const sumNumbers = (numbers: (number | null | undefined)[]): number => {\n  return numbers.reduce((sum, num) => {\n    const validNum = parseNumber(num);\n    return sum + (validNum || 0);\n  }, 0);\n};\n\n/**\n * Calculate average of array of numbers\n */\nexport const averageNumbers = (numbers: (number | null | undefined)[]): number => {\n  const validNumbers = numbers.filter(num => parseNumber(num) !== null);\n  if (validNumbers.length === 0) return 0;\n  \n  return sumNumbers(validNumbers) / validNumbers.length;\n};\n\n/**\n * Find minimum value in array\n */\nexport const minNumber = (numbers: (number | null | undefined)[]): number | null => {\n  const validNumbers = numbers.map(parseNumber).filter(num => num !== null) as number[];\n  return validNumbers.length > 0 ? Math.min(...validNumbers) : null;\n};\n\n/**\n * Find maximum value in array\n */\nexport const maxNumber = (numbers: (number | null | undefined)[]): number | null => {\n  const validNumbers = numbers.map(parseNumber).filter(num => num !== null) as number[];\n  return validNumbers.length > 0 ? Math.max(...validNumbers) : null;\n};\n\n/**\n * Generate random number between min and max\n */\nexport const randomNumber = (min: number, max: number): number => {\n  return Math.random() * (max - min) + min;\n};\n\n/**\n * Generate random integer between min and max (inclusive)\n */\nexport const randomInteger = (min: number, max: number): number => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\n/**\n * Convert bytes to human readable format\n */\nexport const formatBytes = (bytes: number, decimals = 2): string => {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n};\n\n/**\n * Format file size\n */\nexport const formatFileSize = (bytes: number): string => {\n  return formatBytes(bytes, 1);\n};\n\n/**\n * Number validation utilities\n */\nexport const numberValidation = {\n  isPositive: (value: number): boolean => value > 0,\n  isNegative: (value: number): boolean => value < 0,\n  isZero: (value: number): boolean => value === 0,\n  isInteger: (value: number): boolean => Number.isInteger(value),\n  isFloat: (value: number): boolean => !Number.isInteger(value),\n  inRange: (value: number, min: number, max: number): boolean => value >= min && value <= max,\n  isEven: (value: number): boolean => value % 2 === 0,\n  isOdd: (value: number): boolean => value % 2 !== 0,\n};\n\n/**\n * Mathematical operations with null safety\n */\nexport const safeMath = {\n  add: (a: number | null, b: number | null): number => (a || 0) + (b || 0),\n  subtract: (a: number | null, b: number | null): number => (a || 0) - (b || 0),\n  multiply: (a: number | null, b: number | null): number => (a || 0) * (b || 0),\n  divide: (a: number | null, b: number | null): number => {\n    if (!b || b === 0) return 0;\n    return (a || 0) / b;\n  },\n  percentage: (value: number | null, total: number | null): number => {\n    if (!total || total === 0) return 0;\n    return ((value || 0) / total) * 100;\n  },\n};\n\n/**\n * Number constants\n */\nexport const NUMBER_CONSTANTS = {\n  MAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER,\n  MIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER,\n  EPSILON: Number.EPSILON,\n  POSITIVE_INFINITY: Number.POSITIVE_INFINITY,\n  NEGATIVE_INFINITY: Number.NEGATIVE_INFINITY,\n} as const;\n","/**\n * String utilities consolidated from all repositories\n */\n\n/**\n * Capitalize first letter of string\n */\nexport const capitalize = (str: string | null | undefined): string => {\n  if (!str) return '';\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n};\n\n/**\n * Capitalize first letter of each word\n */\nexport const capitalizeWords = (str: string | null | undefined): string => {\n  if (!str) return '';\n  return str.replace(/\\w\\S*/g, (txt) => \n    txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n  );\n};\n\n/**\n * Convert string to camelCase\n */\nexport const toCamelCase = (str: string | null | undefined): string => {\n  if (!str) return '';\n  return str\n    .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (word, index) => \n      index === 0 ? word.toLowerCase() : word.toUpperCase()\n    )\n    .replace(/\\s+/g, '');\n};\n\n/**\n * Convert string to kebab-case\n */\nexport const toKebabCase = (str: string | null | undefined): string => {\n  if (!str) return '';\n  return str\n    .replace(/([a-z])([A-Z])/g, '$1-$2')\n    .replace(/[\\s_]+/g, '-')\n    .toLowerCase();\n};\n\n/**\n * Convert string to snake_case\n */\nexport const toSnakeCase = (str: string | null | undefined): string => {\n  if (!str) return '';\n  return str\n    .replace(/([a-z])([A-Z])/g, '$1_$2')\n    .replace(/[\\s-]+/g, '_')\n    .toLowerCase();\n};\n\n/**\n * Convert string to PascalCase\n */\nexport const toPascalCase = (str: string | null | undefined): string => {\n  if (!str) return '';\n  return str\n    .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (word) => word.toUpperCase())\n    .replace(/\\s+/g, '');\n};\n\n/**\n * Truncate string to specified length\n */\nexport const truncate = (\n  str: string | null | undefined, \n  length: number, \n  suffix = '...'\n): string => {\n  if (!str) return '';\n  if (str.length <= length) return str;\n  return str.substring(0, length - suffix.length) + suffix;\n};\n\n/**\n * Truncate string to specified number of words\n */\nexport const truncateWords = (\n  str: string | null | undefined, \n  wordCount: number, \n  suffix = '...'\n): string => {\n  if (!str) return '';\n  const words = str.split(' ');\n  if (words.length <= wordCount) return str;\n  return words.slice(0, wordCount).join(' ') + suffix;\n};\n\n/**\n * Remove extra whitespace and trim\n */\nexport const cleanWhitespace = (str: string | null | undefined): string => {\n  if (!str) return '';\n  return str.replace(/\\s+/g, ' ').trim();\n};\n\n/**\n * Remove all whitespace\n */\nexport const removeWhitespace = (str: string | null | undefined): string => {\n  if (!str) return '';\n  return str.replace(/\\s/g, '');\n};\n\n/**\n * Sanitize string for HTML display\n */\nexport const sanitizeHtml = (str: string | null | undefined): string => {\n  if (!str) return '';\n  const map: Record<string, string> = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '/': '&#x2F;',\n  };\n  return str.replace(/[&<>\"'/]/g, (s) => map[s]);\n};\n\n/**\n * Generate slug from string\n */\nexport const generateSlug = (str: string | null | undefined): string => {\n  if (!str) return '';\n  return str\n    .toLowerCase()\n    .trim()\n    .replace(/[^\\w\\s-]/g, '') // Remove special characters\n    .replace(/[\\s_-]+/g, '-') // Replace spaces and underscores with hyphens\n    .replace(/^-+|-+$/g, ''); // Remove leading/trailing hyphens\n};\n\n/**\n * Extract initials from name\n */\nexport const getInitials = (name: string | null | undefined, maxLength = 2): string => {\n  if (!name) return '';\n  \n  const words = name.trim().split(/\\s+/);\n  const initials = words\n    .map(word => word.charAt(0).toUpperCase())\n    .slice(0, maxLength)\n    .join('');\n  \n  return initials;\n};\n\n/**\n * Check if string is empty or only whitespace\n */\nexport const isEmpty = (str: string | null | undefined): boolean => {\n  return !str || str.trim().length === 0;\n};\n\n/**\n * Check if string is not empty\n */\nexport const isNotEmpty = (str: string | null | undefined): boolean => {\n  return !isEmpty(str);\n};\n\n/**\n * Count words in string\n */\nexport const countWords = (str: string | null | undefined): number => {\n  if (!str) return 0;\n  return str.trim().split(/\\s+/).filter(word => word.length > 0).length;\n};\n\n/**\n * Count characters in string (excluding whitespace)\n */\nexport const countCharacters = (str: string | null | undefined): number => {\n  if (!str) return 0;\n  return str.replace(/\\s/g, '').length;\n};\n\n/**\n * Reverse string\n */\nexport const reverse = (str: string | null | undefined): string => {\n  if (!str) return '';\n  return str.split('').reverse().join('');\n};\n\n/**\n * Check if string is palindrome\n */\nexport const isPalindrome = (str: string | null | undefined): boolean => {\n  if (!str) return false;\n  const cleaned = str.toLowerCase().replace(/[^a-z0-9]/g, '');\n  return cleaned === reverse(cleaned);\n};\n\n/**\n * Replace multiple spaces with single space\n */\nexport const normalizeSpaces = (str: string | null | undefined): string => {\n  if (!str) return '';\n  return str.replace(/\\s+/g, ' ').trim();\n};\n\n/**\n * Mask string (e.g., for passwords, credit cards)\n */\nexport const maskString = (\n  str: string | null | undefined, \n  maskChar = '*', \n  visibleStart = 0, \n  visibleEnd = 0\n): string => {\n  if (!str) return '';\n  if (str.length <= visibleStart + visibleEnd) return str;\n  \n  const start = str.substring(0, visibleStart);\n  const end = str.substring(str.length - visibleEnd);\n  const masked = maskChar.repeat(str.length - visibleStart - visibleEnd);\n  \n  return start + masked + end;\n};\n\n/**\n * Extract domain from email\n */\nexport const extractEmailDomain = (email: string | null | undefined): string => {\n  if (!email) return '';\n  const parts = email.split('@');\n  return parts.length === 2 ? parts[1] : '';\n};\n\n/**\n * Extract username from email\n */\nexport const extractEmailUsername = (email: string | null | undefined): string => {\n  if (!email) return '';\n  const parts = email.split('@');\n  return parts.length >= 1 ? parts[0] : '';\n};\n\n/**\n * Format phone number\n */\nexport const formatPhoneNumber = (phone: string | null | undefined): string => {\n  if (!phone) return '';\n  \n  // Remove all non-digit characters\n  const digits = phone.replace(/\\D/g, '');\n  \n  // Format based on length (assuming Italian format)\n  if (digits.length === 10) {\n    return digits.replace(/(\\d{3})(\\d{3})(\\d{4})/, '$1 $2 $3');\n  } else if (digits.length === 11 && digits.startsWith('39')) {\n    return digits.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{3})/, '+$1 $2 $3 $4');\n  }\n  \n  return phone; // Return original if no format matches\n};\n\n/**\n * Validate email format\n */\nexport const isValidEmail = (email: string | null | undefined): boolean => {\n  if (!email) return false;\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\n\n/**\n * Validate phone number format\n */\nexport const isValidPhoneNumber = (phone: string | null | undefined): boolean => {\n  if (!phone) return false;\n  const phoneRegex = /^[\\+]?[1-9][\\d]{0,15}$/;\n  return phoneRegex.test(phone.replace(/\\s/g, ''));\n};\n\n/**\n * Generate random string\n */\nexport const generateRandomString = (length: number, charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'): string => {\n  let result = '';\n  for (let i = 0; i < length; i++) {\n    result += charset.charAt(Math.floor(Math.random() * charset.length));\n  }\n  return result;\n};\n\n/**\n * Generate UUID v4\n */\nexport const generateUUID = (): string => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n};\n\n/**\n * Compare strings ignoring case and accents\n */\nexport const compareStringsIgnoreCase = (str1: string | null | undefined, str2: string | null | undefined): boolean => {\n  if (!str1 && !str2) return true;\n  if (!str1 || !str2) return false;\n  \n  return str1.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') === \n         str2.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n};\n\n/**\n * Search for substring ignoring case and accents\n */\nexport const searchIgnoreCase = (text: string | null | undefined, search: string | null | undefined): boolean => {\n  if (!text || !search) return false;\n  \n  const normalizedText = text.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  const normalizedSearch = search.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  \n  return normalizedText.includes(normalizedSearch);\n};\n\n/**\n * Highlight search terms in text\n */\nexport const highlightSearchTerms = (text: string, searchTerm: string, highlightClass = 'highlight'): string => {\n  if (!text || !searchTerm) return text;\n  \n  const regex = new RegExp(`(${searchTerm})`, 'gi');\n  return text.replace(regex, `<span class=\"${highlightClass}\">$1</span>`);\n};\n\n/**\n * String templates\n */\nexport const stringTemplates = {\n  interpolate: (template: string, variables: Record<string, any>): string => {\n    return template.replace(/\\{\\{(\\w+)\\}\\}/g, (match, key) => {\n      return variables[key] !== undefined ? String(variables[key]) : match;\n    });\n  },\n  \n  format: (template: string, ...args: any[]): string => {\n    return template.replace(/{(\\d+)}/g, (match, index) => {\n      return args[index] !== undefined ? String(args[index]) : match;\n    });\n  },\n};\n\n/**\n * String constants\n */\nexport const STRING_CONSTANTS = {\n  EMPTY: '',\n  SPACE: ' ',\n  NEWLINE: '\\n',\n  TAB: '\\t',\n  ELLIPSIS: '...',\n  DASH: '-',\n  UNDERSCORE: '_',\n} as const;\n","/**\n * Array utilities consolidated from all repositories\n */\n\n/**\n * Remove duplicates from array\n */\nexport const removeDuplicates = <T>(array: T[]): T[] => {\n  return Array.from(new Set(array));\n};\n\n/**\n * Remove duplicates from array of objects by key\n */\nexport const removeDuplicatesByKey = <T>(array: T[], key: keyof T): T[] => {\n  const seen = new Set();\n  return array.filter(item => {\n    const value = item[key];\n    if (seen.has(value)) {\n      return false;\n    }\n    seen.add(value);\n    return true;\n  });\n};\n\n/**\n * Group array of objects by key\n */\nexport const groupBy = <T>(array: T[], key: keyof T): Record<string, T[]> => {\n  return array.reduce((groups, item) => {\n    const value = String(item[key]);\n    if (!groups[value]) {\n      groups[value] = [];\n    }\n    groups[value].push(item);\n    return groups;\n  }, {} as Record<string, T[]>);\n};\n\n/**\n * Sort array of objects by key\n */\nexport const sortBy = <T>(array: T[], key: keyof T, ascending = true): T[] => {\n  return [...array].sort((a, b) => {\n    const valueA = a[key];\n    const valueB = b[key];\n    \n    if (valueA < valueB) return ascending ? -1 : 1;\n    if (valueA > valueB) return ascending ? 1 : -1;\n    return 0;\n  });\n};\n\n/**\n * Sort array of objects by multiple keys\n */\nexport const sortByMultiple = <T>(\n  array: T[], \n  keys: Array<{ key: keyof T; ascending?: boolean }>\n): T[] => {\n  return [...array].sort((a, b) => {\n    for (const { key, ascending = true } of keys) {\n      const valueA = a[key];\n      const valueB = b[key];\n      \n      if (valueA < valueB) return ascending ? -1 : 1;\n      if (valueA > valueB) return ascending ? 1 : -1;\n    }\n    return 0;\n  });\n};\n\n/**\n * Filter array by multiple conditions\n */\nexport const filterBy = <T>(\n  array: T[], \n  filters: Partial<Record<keyof T, any>>\n): T[] => {\n  return array.filter(item => {\n    return Object.entries(filters).every(([key, value]) => {\n      if (value === null || value === undefined) return true;\n      \n      const itemValue = item[key as keyof T];\n      \n      if (Array.isArray(value)) {\n        return value.includes(itemValue);\n      }\n      \n      if (typeof value === 'string' && typeof itemValue === 'string') {\n        return itemValue.toLowerCase().includes(value.toLowerCase());\n      }\n      \n      return itemValue === value;\n    });\n  });\n};\n\n/**\n * Find item in array by key-value pair\n */\nexport const findBy = <T>(array: T[], key: keyof T, value: any): T | undefined => {\n  return array.find(item => item[key] === value);\n};\n\n/**\n * Find index of item in array by key-value pair\n */\nexport const findIndexBy = <T>(array: T[], key: keyof T, value: any): number => {\n  return array.findIndex(item => item[key] === value);\n};\n\n/**\n * Check if array contains item with specific key-value pair\n */\nexport const containsBy = <T>(array: T[], key: keyof T, value: any): boolean => {\n  return array.some(item => item[key] === value);\n};\n\n/**\n * Get unique values from array of objects by key\n */\nexport const getUniqueValues = <T>(array: T[], key: keyof T): any[] => {\n  return removeDuplicates(array.map(item => item[key]));\n};\n\n/**\n * Chunk array into smaller arrays of specified size\n */\nexport const chunk = <T>(array: T[], size: number): T[][] => {\n  const chunks: T[][] = [];\n  for (let i = 0; i < array.length; i += size) {\n    chunks.push(array.slice(i, i + size));\n  }\n  return chunks;\n};\n\n/**\n * Flatten nested arrays\n */\nexport const flatten = <T>(array: (T | T[])[]): T[] => {\n  return array.reduce<T[]>((flat, item) => {\n    return flat.concat(Array.isArray(item) ? flatten(item) : [item]);\n  }, []);\n};\n\n/**\n * Get intersection of two arrays\n */\nexport const intersection = <T>(array1: T[], array2: T[]): T[] => {\n  return array1.filter(item => array2.includes(item));\n};\n\n/**\n * Get difference between two arrays (items in first array but not in second)\n */\nexport const difference = <T>(array1: T[], array2: T[]): T[] => {\n  return array1.filter(item => !array2.includes(item));\n};\n\n/**\n * Get union of two arrays (all unique items from both arrays)\n */\nexport const union = <T>(array1: T[], array2: T[]): T[] => {\n  return removeDuplicates([...array1, ...array2]);\n};\n\n/**\n * Shuffle array randomly\n */\nexport const shuffle = <T>(array: T[]): T[] => {\n  const shuffled = [...array];\n  for (let i = shuffled.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  return shuffled;\n};\n\n/**\n * Get random item from array\n */\nexport const getRandomItem = <T>(array: T[]): T | undefined => {\n  if (array.length === 0) return undefined;\n  return array[Math.floor(Math.random() * array.length)];\n};\n\n/**\n * Get random items from array\n */\nexport const getRandomItems = <T>(array: T[], count: number): T[] => {\n  const shuffled = shuffle(array);\n  return shuffled.slice(0, Math.min(count, array.length));\n};\n\n/**\n * Move item in array from one index to another\n */\nexport const moveItem = <T>(array: T[], fromIndex: number, toIndex: number): T[] => {\n  const result = [...array];\n  const [removed] = result.splice(fromIndex, 1);\n  result.splice(toIndex, 0, removed);\n  return result;\n};\n\n/**\n * Insert item at specific index\n */\nexport const insertAt = <T>(array: T[], index: number, item: T): T[] => {\n  const result = [...array];\n  result.splice(index, 0, item);\n  return result;\n};\n\n/**\n * Remove item at specific index\n */\nexport const removeAt = <T>(array: T[], index: number): T[] => {\n  const result = [...array];\n  result.splice(index, 1);\n  return result;\n};\n\n/**\n * Update item at specific index\n */\nexport const updateAt = <T>(array: T[], index: number, item: T): T[] => {\n  const result = [...array];\n  result[index] = item;\n  return result;\n};\n\n/**\n * Paginate array\n */\nexport const paginate = <T>(array: T[], page: number, perPage: number): {\n  data: T[];\n  totalPages: number;\n  currentPage: number;\n  totalItems: number;\n  hasNextPage: boolean;\n  hasPreviousPage: boolean;\n} => {\n  const totalItems = array.length;\n  const totalPages = Math.ceil(totalItems / perPage);\n  const startIndex = (page - 1) * perPage;\n  const endIndex = startIndex + perPage;\n  const data = array.slice(startIndex, endIndex);\n  \n  return {\n    data,\n    totalPages,\n    currentPage: page,\n    totalItems,\n    hasNextPage: page < totalPages,\n    hasPreviousPage: page > 1,\n  };\n};\n\n/**\n * Calculate sum of numeric values in array\n */\nexport const sum = (array: number[]): number => {\n  return array.reduce((total, num) => total + num, 0);\n};\n\n/**\n * Calculate sum of numeric property in array of objects\n */\nexport const sumBy = <T>(array: T[], key: keyof T): number => {\n  return array.reduce((total, item) => {\n    const value = item[key];\n    return total + (typeof value === 'number' ? value : 0);\n  }, 0);\n};\n\n/**\n * Calculate average of numeric values in array\n */\nexport const average = (array: number[]): number => {\n  if (array.length === 0) return 0;\n  return sum(array) / array.length;\n};\n\n/**\n * Calculate average of numeric property in array of objects\n */\nexport const averageBy = <T>(array: T[], key: keyof T): number => {\n  if (array.length === 0) return 0;\n  return sumBy(array, key) / array.length;\n};\n\n/**\n * Find minimum value in array\n */\nexport const min = (array: number[]): number | undefined => {\n  if (array.length === 0) return undefined;\n  return Math.min(...array);\n};\n\n/**\n * Find minimum value by property in array of objects\n */\nexport const minBy = <T>(array: T[], key: keyof T): T | undefined => {\n  if (array.length === 0) return undefined;\n  \n  return array.reduce((min, item) => {\n    const value = item[key];\n    const minValue = min[key];\n    return value < minValue ? item : min;\n  });\n};\n\n/**\n * Find maximum value in array\n */\nexport const max = (array: number[]): number | undefined => {\n  if (array.length === 0) return undefined;\n  return Math.max(...array);\n};\n\n/**\n * Find maximum value by property in array of objects\n */\nexport const maxBy = <T>(array: T[], key: keyof T): T | undefined => {\n  if (array.length === 0) return undefined;\n  \n  return array.reduce((max, item) => {\n    const value = item[key];\n    const maxValue = max[key];\n    return value > maxValue ? item : max;\n  });\n};\n\n/**\n * Count occurrences of each value in array\n */\nexport const countOccurrences = <T>(array: T[]): Record<string, number> => {\n  return array.reduce((counts, item) => {\n    const key = String(item);\n    counts[key] = (counts[key] || 0) + 1;\n    return counts;\n  }, {} as Record<string, number>);\n};\n\n/**\n * Count occurrences by property in array of objects\n */\nexport const countBy = <T>(array: T[], key: keyof T): Record<string, number> => {\n  return array.reduce((counts, item) => {\n    const value = String(item[key]);\n    counts[value] = (counts[value] || 0) + 1;\n    return counts;\n  }, {} as Record<string, number>);\n};\n\n/**\n * Check if array is empty\n */\nexport const isEmpty = <T>(array: T[]): boolean => {\n  return array.length === 0;\n};\n\n/**\n * Check if array is not empty\n */\nexport const isNotEmpty = <T>(array: T[]): boolean => {\n  return array.length > 0;\n};\n\n/**\n * Get first item from array\n */\nexport const first = <T>(array: T[]): T | undefined => {\n  return array[0];\n};\n\n/**\n * Get last item from array\n */\nexport const last = <T>(array: T[]): T | undefined => {\n  return array[array.length - 1];\n};\n\n/**\n * Get first n items from array\n */\nexport const take = <T>(array: T[], count: number): T[] => {\n  return array.slice(0, count);\n};\n\n/**\n * Get last n items from array\n */\nexport const takeLast = <T>(array: T[], count: number): T[] => {\n  return array.slice(-count);\n};\n\n/**\n * Skip first n items from array\n */\nexport const skip = <T>(array: T[], count: number): T[] => {\n  return array.slice(count);\n};\n\n/**\n * Skip last n items from array\n */\nexport const skipLast = <T>(array: T[], count: number): T[] => {\n  return array.slice(0, -count);\n};\n\n/**\n * Compact array (remove falsy values)\n */\nexport const compact = <T>(array: (T | null | undefined | false | 0 | '')[]): T[] => {\n  return array.filter(Boolean) as T[];\n};\n\n/**\n * Create array of specified length with default value\n */\nexport const createArray = <T>(length: number, defaultValue?: T): T[] => {\n  return Array(length).fill(defaultValue);\n};\n\n/**\n * Create array of numbers from start to end\n */\nexport const range = (start: number, end: number, step = 1): number[] => {\n  const result: number[] = [];\n  for (let i = start; i < end; i += step) {\n    result.push(i);\n  }\n  return result;\n};\n\n/**\n * Array comparison utilities\n */\nexport const arrayComparison = {\n  isEqual: <T>(array1: T[], array2: T[]): boolean => {\n    if (array1.length !== array2.length) return false;\n    return array1.every((item, index) => item === array2[index]);\n  },\n  \n  isEqualUnordered: <T>(array1: T[], array2: T[]): boolean => {\n    if (array1.length !== array2.length) return false;\n    const sorted1 = [...array1].sort();\n    const sorted2 = [...array2].sort();\n    return arrayComparison.isEqual(sorted1, sorted2);\n  },\n  \n  isSubset: <T>(subset: T[], superset: T[]): boolean => {\n    return subset.every(item => superset.includes(item));\n  },\n  \n  isSuperset: <T>(superset: T[], subset: T[]): boolean => {\n    return arrayComparison.isSubset(subset, superset);\n  },\n};\n","import { type VariantProps, cva } from \"class-variance-authority\";\n\nexport const buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nexport type ButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement> &\n  VariantProps<typeof buttonVariants>;\n","import * as React from \"react\";\n\nimport { cn } from \"../utils\";\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        data-slot=\"input\"\n        className={cn(\n          \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n          \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n          className,\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nInput.displayName = \"Input\";\n\nexport { Input };\n","import * as React from \"react\";\n\nimport { cn } from \"../utils\";\n\nconst Label = React.forwardRef<\n  HTMLLabelElement,\n  React.ComponentProps<\"label\">\n>(({ className, ...props }, ref) => (\n  <label\n    ref={ref}\n    data-slot=\"label\"\n    className={cn(\n      \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n      className\n    )}\n    {...props}\n  />\n));\nLabel.displayName = \"Label\";\n\nexport { Label };\n","import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"../utils\";\nimport { badgeVariants } from \"./badge-variants\";\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\";\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\nexport { Badge };\n","import { type VariantProps, cva } from \"class-variance-authority\";\n\nexport const badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\nexport type BadgeProps = React.HTMLAttributes<HTMLDivElement> &\n  VariantProps<typeof badgeVariants>;\n","import * as React from \"react\";\n\nimport { cn } from \"../utils\";\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n};\n","import * as React from \"react\";\n\nimport { cn } from \"../utils\";\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  );\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableCaption({ className, ...props }: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n};\n","import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","import { cn } from \"../utils/utils\";\n\nfunction Skeleton({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"skeleton\"\n      className={cn(\"bg-accent animate-pulse rounded-md\", className)}\n      {...props}\n    />\n  );\n}\n\nexport { Skeleton };\n","import * as React from \"react\";\n\nimport { cn } from \"../utils/utils\";\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Textarea };\n","import React, { createContext, useContext, useEffect, useMemo, useState } from \"react\";\n\ntype Theme = \"light\" | \"dark\" | \"system\";\ntype Ctx = { theme: Theme; setTheme: (t: Theme) => void };\n\nconst ThemeCtx = createContext<Ctx | null>(null);\n\nfunction applyTheme(t: Theme) {\n  const root = document.documentElement;\n  const systemDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n  const isDark = t === \"dark\" || (t === \"system\" && systemDark);\n  root.classList.toggle(\"dark\", isDark);\n}\n\nexport const ThemeProvider: React.FC<React.PropsWithChildren<{ defaultTheme?: Theme }>> = ({\n  defaultTheme = \"system\",\n  children\n}) => {\n  const [theme, setThemeState] = useState<Theme>(defaultTheme);\n\n  useEffect(() => {\n    const stored = (localStorage.getItem(\"theme\") as Theme) || defaultTheme;\n    setThemeState(stored);\n    applyTheme(stored);\n\n    const mq = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    const onChange = () => {\n      const current = (localStorage.getItem(\"theme\") as Theme) || \"system\";\n      if (current === \"system\") applyTheme(\"system\");\n    };\n    mq.addEventListener?.(\"change\", onChange);\n    return () => mq.removeEventListener?.(\"change\", onChange);\n  }, [defaultTheme]);\n\n  const setTheme = (t: Theme) => {\n    localStorage.setItem(\"theme\", t);\n    setThemeState(t);\n    applyTheme(t);\n  };\n\n  const value = useMemo(() => ({ theme, setTheme }), [theme]);\n  return <ThemeCtx.Provider value={value}>{children}</ThemeCtx.Provider>;\n};\n\nexport const useTheme = () => {\n  const ctx = useContext(ThemeCtx);\n  if (!ctx) throw new Error(\"useTheme must be used within ThemeProvider\");\n  return ctx;\n};\n","import React from \"react\";\nimport { useTheme } from \"./ThemeProvider\";\nimport { cn } from \"../../utils\";\n\nexport const ThemeSwitch: React.FC<{ className?: string }> = ({ className }) => {\n  const { theme, setTheme } = useTheme();\n  return (\n    <div className=\"inline-flex gap-2 items-center\">\n      <select\n        aria-label=\"Theme\"\n        value={theme}\n        onChange={(e) => setTheme(e.target.value as any)}\n        className={cn(\n          \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n          \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n          \"w-36\",\n          className,\n        )}\n      >\n        <option value=\"light\">Light</option>\n        <option value=\"dark\">Dark</option>\n        <option value=\"system\">System</option>\n      </select>\n    </div>\n  );\n};\n","import React, { useState, useMemo } from 'react';\nimport { useReactTable, getCoreRowModel, flexRender, getSortedRowModel, type ColumnDef } from '@tanstack/react-table';\n// Note: These would normally be imported from @santonastaso/crm-ui\n// For now using placeholder interfaces\ninterface TableProps { children: React.ReactNode; className?: string; }\ninterface ButtonProps { children: React.ReactNode; variant?: string; size?: string; onClick?: () => void; disabled?: boolean; className?: string; }\n\nconst Table = ({ children, className, ...props }: TableProps) => (\n  <table className={`w-full border-collapse border border-gray-200 table-auto ${className || ''}`} {...props}>\n    {children}\n  </table>\n);\n\nconst TableHeader = ({ children }: { children: React.ReactNode }) => (\n  <thead className=\"bg-gray-50\">\n    {children}\n  </thead>\n);\n\nconst TableBody = ({ children }: { children: React.ReactNode }) => (\n  <tbody className=\"divide-y divide-gray-200\">\n    {children}\n  </tbody>\n);\n\nconst TableRow = ({ children, onClick, className }: { children: React.ReactNode; onClick?: () => void; className?: string }) => (\n  <tr \n    onClick={onClick} \n    className={`${onClick ? 'cursor-pointer hover:bg-gray-50' : ''} ${className || ''}`}\n  >\n    {children}\n  </tr>\n);\n\nconst TableHead = ({ children }: { children: React.ReactNode }) => (\n  <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b border-gray-200 min-w-0\">\n    {children}\n  </th>\n);\n\nconst TableCell = ({ children, colSpan, className }: { children: React.ReactNode; colSpan?: number; className?: string }) => (\n  <td \n    colSpan={colSpan} \n    className={`px-4 py-3 text-sm text-gray-900 border-b border-gray-200 min-w-0 max-w-xs ${className || ''}`}\n  >\n    <div className=\"truncate\" title={typeof children === 'string' ? children : ''}>\n      {children}\n    </div>\n  </td>\n);\n\nconst Button = ({ children, variant = 'default', size = 'default', onClick, disabled, className }: ButtonProps) => {\n  const baseClasses = 'inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none';\n  \n  const variantClasses = {\n    default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n    destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n    outline: 'border border-input hover:bg-accent hover:text-accent-foreground',\n    secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n    ghost: 'hover:bg-accent hover:text-accent-foreground',\n    link: 'underline-offset-4 hover:underline text-primary'\n  };\n  \n  const sizeClasses = {\n    default: 'h-10 py-2 px-4',\n    sm: 'h-9 px-3 rounded-md',\n    lg: 'h-11 px-8 rounded-md'\n  };\n  \n  return (\n    <button \n      onClick={onClick} \n      disabled={disabled} \n      className={`${baseClasses} ${variantClasses[variant as keyof typeof variantClasses] || variantClasses.default} ${sizeClasses[size as keyof typeof sizeClasses] || sizeClasses.default} ${className || ''}`}\n    >\n      {children}\n    </button>\n  );\n};\nimport { confirmAction, getNested } from '../utils';\nimport { DATA_TABLE_DEFAULTS } from '../constants';\n\ninterface DataTableProps<T> {\n  data: T[];\n  columns: ColumnDef<T>[];\n  onEditRow?: (row: T) => void;\n  onDeleteRow?: (row: T) => void;\n  onRowClick?: (row: T) => void;\n  enableFiltering?: boolean;\n  filterableColumns?: string[];\n  stickyColumns?: string[];\n  onBulkDelete?: (ids: (string | number)[]) => void;\n  onBulkExport?: (ids: (string | number)[]) => void;\n  initialPageSize?: number;\n  pageSizeOptions?: number[];\n  enableGlobalSearch?: boolean;\n  enableColumnVisibility?: boolean;\n  enableRowSelection?: boolean;\n}\n\n/**\n * Unified DataTable Component\n * Provides consistent data table functionality across all applications\n */\nexport function DataTable<T extends Record<string, any>>({\n  data,\n  columns: userColumns,\n  onEditRow,\n  onDeleteRow,\n  onRowClick,\n  enableFiltering = false,\n  filterableColumns = [],\n  stickyColumns = [],\n  onBulkDelete,\n  onBulkExport,\n  initialPageSize = DATA_TABLE_DEFAULTS.PAGE_SIZE,\n  pageSizeOptions = [...DATA_TABLE_DEFAULTS.PAGE_SIZE_OPTIONS],\n  enableGlobalSearch = true,\n  enableColumnVisibility = false,\n  enableRowSelection = false\n}: DataTableProps<T>) {\n  // State management\n  const [filters, setFilters] = useState<Record<string, string>>({});\n  const [page, setPage] = useState(0);\n  const [pageSize, setPageSize] = useState(initialPageSize);\n  const [selectedIds, setSelectedIds] = useState<Set<string | number>>(new Set());\n  const [globalQuery, setGlobalQuery] = useState('');\n  const [sorting, setSorting] = useState<any[]>([]);\n\n  // Build columns with selection and actions\n  const columns = useMemo(() => {\n    const selectionColumn = enableRowSelection ? {\n      id: 'select',\n      header: ({ table }: any) => {\n        const currentPageRows = table.getRowModel().rows.map((row: any) => row.original);\n        const allSelected = currentPageRows.length > 0 && currentPageRows.every((r: any) => selectedIds.has(r.id));\n        \n        return (\n          <div className=\"w-8\">\n            <input\n              type=\"checkbox\"\n              aria-label=\"Select all\"\n              checked={allSelected}\n              onChange={(e) => {\n                const newSet = new Set(selectedIds);\n                if (e.target.checked) {\n                  currentPageRows.forEach((r: any) => newSet.add(r.id));\n                } else {\n                  currentPageRows.forEach((r: any) => newSet.delete(r.id));\n                }\n                setSelectedIds(newSet);\n              }}\n              className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n          </div>\n        );\n      },\n      cell: ({ row }: any) => (\n        <div className=\"flex w-8\">\n          <input\n            type=\"checkbox\"\n            aria-label=\"Select row\"\n            checked={selectedIds.has(row.original.id)}\n            onChange={(e) => {\n              const newSet = new Set(selectedIds);\n              if (e.target.checked) {\n                newSet.add(row.original.id);\n              } else {\n                newSet.delete(row.original.id);\n              }\n              setSelectedIds(newSet);\n            }}\n            className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n          />\n        </div>\n      )\n    } : null;\n\n    const actionColumn = (onEditRow || onDeleteRow) ? {\n      id: 'actions',\n      header: 'Actions',\n      cell: ({ row }: any) => (\n        <div className=\"flex gap-2\">\n          {onEditRow && (\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              onClick={() => onEditRow(row.original)}\n            >\n              Edit\n            </Button>\n          )}\n          {onDeleteRow && (\n            <Button \n              variant=\"destructive\" \n              size=\"sm\" \n              onClick={() => {\n                if (confirmAction('Are you sure you want to delete this item?')) {\n                  onDeleteRow(row.original);\n                }\n              }}\n            >\n              Delete\n            </Button>\n          )}\n        </div>\n      ),\n    } : null;\n\n    return [selectionColumn, ...userColumns, actionColumn].filter(Boolean) as ColumnDef<T>[];\n  }, [userColumns, onEditRow, onDeleteRow, enableRowSelection, selectedIds]);\n\n  // Apply filters and search\n  const filteredData = useMemo(() => {\n    let result = data;\n\n    // Apply column filters\n    if (enableFiltering && Object.keys(filters).length > 0) {\n      result = result.filter(item => {\n        return Object.entries(filters).every(([column, filterValue]) => {\n          if (!filterValue) return true;\n          const value = getNested(item, column);\n          return String(value).toLowerCase().includes(filterValue.toLowerCase());\n        });\n      });\n    }\n\n    // Apply global search\n    if (enableGlobalSearch && globalQuery) {\n      result = result.filter(item => {\n        return Object.values(item).some(value => \n          String(value).toLowerCase().includes(globalQuery.toLowerCase())\n        );\n      });\n    }\n\n    return result;\n  }, [data, filters, globalQuery, enableFiltering, enableGlobalSearch]);\n\n  // Pagination\n  const paginatedData = useMemo(() => {\n    const start = page * pageSize;\n    const end = start + pageSize;\n    return filteredData.slice(start, end);\n  }, [filteredData, page, pageSize]);\n\n  const totalPages = Math.ceil(filteredData.length / pageSize);\n\n  const table = useReactTable({\n    data: paginatedData,\n    columns,\n    state: { sorting },\n    onSortingChange: setSorting,\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n  });\n\n  const handleFilterChange = (column: string, value: string) => {\n    setFilters(prev => ({ ...prev, [column]: value }));\n    setPage(0); // Reset to first page when filtering\n  };\n\n  const clearFilters = () => {\n    setFilters({});\n    setGlobalQuery('');\n    setPage(0);\n  };\n\n  return (\n    <div className=\"w-full space-y-4\">\n      {/* Search Only - Remove individual column filters */}\n      {enableGlobalSearch && (\n        <div className=\"flex items-center gap-4\">\n          <div className=\"flex-1\">\n            <input\n              type=\"text\"\n              placeholder=\"Search all columns...\"\n              value={globalQuery}\n              onChange={(e) => {\n                setGlobalQuery(e.target.value);\n                setPage(0);\n              }}\n              className=\"w-full px-3 py-2 border border-input rounded-md bg-background text-foreground placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring\"\n            />\n          </div>\n          {globalQuery && (\n            <Button variant=\"outline\" onClick={clearFilters}>\n              Clear Search\n            </Button>\n          )}\n        </div>\n      )}\n\n      {/* Table with horizontal scrolling */}\n      <div className=\"rounded-md border border-gray-200 overflow-hidden shadow-sm\">\n        <div className=\"overflow-x-auto\">\n          <Table className=\"min-w-full\">\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => (\n                  <TableHead key={header.id}>\n                    {header.isPlaceholder ? null : (\n                      <div\n                        className={header.column.getCanSort() ? 'cursor-pointer select-none flex items-center gap-2' : ''}\n                        onClick={header.column.getToggleSortingHandler()}\n                      >\n                        {flexRender(header.column.columnDef.header, header.getContext())}\n                        {{\n                          asc: ' 🔼',\n                          desc: ' 🔽',\n                        }[header.column.getIsSorted() as string] ?? null}\n                      </div>\n                    )}\n                  </TableHead>\n                ))}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow\n                  key={row.id}\n                  onClick={() => onRowClick && onRowClick(row.original)}\n                  className={onRowClick ? 'cursor-pointer hover:bg-muted/50' : ''}\n                >\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell key={cell.id}>\n                      {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell colSpan={columns.length} className=\"h-24 text-center\">\n                  No results found.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n          </Table>\n        </div>\n      </div>\n\n      {/* Pagination */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"text-sm text-muted-foreground\">\n          Showing {page * pageSize + 1} to {Math.min((page + 1) * pageSize, filteredData.length)} of {filteredData.length} results\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => setPage(Math.max(0, page - 1))}\n            disabled={page === 0}\n          >\n            Previous\n          </Button>\n          \n          <span className=\"text-sm\">\n            Page {page + 1} of {totalPages}\n          </span>\n          \n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => setPage(Math.min(totalPages - 1, page + 1))}\n            disabled={page >= totalPages - 1}\n          >\n            Next\n          </Button>\n        </div>\n      </div>\n\n      {/* Bulk Actions */}\n      {selectedIds.size > 0 && (onBulkDelete || onBulkExport) && (\n        <div className=\"flex items-center justify-between p-4 bg-muted rounded-md\">\n          <span className=\"text-sm text-muted-foreground\">\n            {selectedIds.size} items selected\n          </span>\n          <div className=\"flex gap-2\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => setSelectedIds(new Set())}\n            >\n              Clear Selection\n            </Button>\n            {onBulkExport && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => onBulkExport(Array.from(selectedIds))}\n              >\n                Export Selected\n              </Button>\n            )}\n            {onBulkDelete && (\n              <Button\n                variant=\"destructive\"\n                size=\"sm\"\n                onClick={() => {\n                  if (confirmAction(`Delete ${selectedIds.size} selected items?`)) {\n                    onBulkDelete(Array.from(selectedIds));\n                    setSelectedIds(new Set());\n                  }\n                }}\n              >\n                Delete Selected\n              </Button>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\n// import { Button } from '@santonastaso/crm-ui';\nimport { generateId } from '../utils';\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error: Error | null;\n  errorInfo: React.ErrorInfo | null;\n  errorId: string | null;\n  retryCount: number;\n}\n\ninterface ErrorBoundaryProps {\n  children: React.ReactNode;\n  fallback?: (error: Error, errorInfo: React.ErrorInfo, actions: {\n    retry: () => void;\n    reset: () => void;\n    retryCount: number;\n    maxRetries: number;\n  }) => React.ReactNode;\n  onError?: (error: Error, errorInfo: React.ErrorInfo) => void;\n  maxRetries?: number;\n}\n\n/**\n * Unified Error Boundary Component\n * Provides comprehensive error handling for React components across all applications\n */\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null,\n      errorId: null,\n      retryCount: 0\n    };\n  }\n\n  static getDerivedStateFromError(error: Error): Partial<ErrorBoundaryState> {\n    return {\n      hasError: true,\n      error,\n      errorId: generateId()\n    };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    this.setState({\n      errorInfo,\n      errorId: this.state.errorId || generateId()\n    });\n\n    // Call custom error handler if provided\n    if (this.props.onError) {\n      this.props.onError(error, errorInfo);\n    }\n\n    // Log to console in development\n    if (process.env.NODE_ENV === 'development') {\n      console.error('ErrorBoundary caught an error:', error, errorInfo);\n    }\n  }\n\n  handleRetry = () => {\n    const maxRetries = this.props.maxRetries || 3;\n    \n    if (this.state.retryCount < maxRetries) {\n      this.setState({\n        hasError: false,\n        error: null,\n        errorInfo: null,\n        errorId: null,\n        retryCount: this.state.retryCount + 1\n      });\n    }\n  };\n\n  handleReset = () => {\n    this.setState({\n      hasError: false,\n      error: null,\n      errorInfo: null,\n      errorId: null,\n      retryCount: 0\n    });\n  };\n\n  handleReportIssue = () => {\n    const subject = encodeURIComponent(`App Error Report - ${this.state.errorId}`);\n    const body = encodeURIComponent(`\nError Report Details:\n- Error ID: ${this.state.errorId}\n- Error: ${this.state.error?.message || 'Unknown error'}\n- URL: ${window.location.href}\n- User Agent: ${navigator.userAgent}\n- Timestamp: ${new Date().toISOString()}\n\nPlease describe what you were doing when this error occurred:\n    `);\n    \n    window.open(`mailto:support@company.com?subject=${subject}&body=${body}`);\n  };\n\n  render() {\n    if (this.state.hasError) {\n      // Custom error UI\n      if (this.props.fallback) {\n        return this.props.fallback(this.state.error!, this.state.errorInfo!, {\n          retry: this.handleRetry,\n          reset: this.handleReset,\n          retryCount: this.state.retryCount,\n          maxRetries: this.props.maxRetries || 3\n        });\n      }\n\n      // Default error UI\n      return (\n        <div className=\"min-h-screen flex items-center justify-center bg-background\">\n          <div className=\"max-w-md w-full bg-card shadow-lg rounded-lg p-6 border\">\n            <div className=\"flex items-center mb-4\">\n              <div className=\"flex-shrink-0\">\n                <div className=\"h-8 w-8 text-destructive text-2xl\">🚨</div>\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-lg font-medium text-foreground\">\n                  Something went wrong\n                </h3>\n              </div>\n            </div>\n\n            <div className=\"mb-4\">\n              <p className=\"text-sm text-muted-foreground\">\n                We're sorry, but something unexpected happened. Our team has been notified and is working to fix this issue.\n              </p>\n              \n              {this.state.errorId && (\n                <p className=\"text-xs text-muted-foreground mt-2\">\n                  Error ID: <code className=\"bg-muted px-1 rounded\">{this.state.errorId}</code>\n                </p>\n              )}\n            </div>\n\n            <div className=\"flex space-x-3 mb-4\">\n              {this.state.retryCount < (this.props.maxRetries || 3) && (\n                <button\n                  onClick={this.handleRetry}\n                  className=\"flex-1 bg-blue-600 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  Try Again ({this.state.retryCount + 1}/{(this.props.maxRetries || 3) + 1})\n                </button>\n              )}\n              \n              <button\n                onClick={this.handleReset}\n                className=\"flex-1 bg-gray-600 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500\"\n              >\n                Reset\n              </button>\n            </div>\n\n            <button\n              onClick={this.handleReportIssue}\n              className=\"w-full bg-gray-100 text-gray-900 px-4 py-2 rounded-md text-sm font-medium hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-500 border border-gray-300\"\n            >\n              📧 Report Issue\n            </button>\n\n            {process.env.NODE_ENV === 'development' && this.state.error && (\n              <details className=\"mt-4\">\n                <summary className=\"text-sm text-muted-foreground cursor-pointer hover:text-foreground\">\n                  Technical Details (Development)\n                </summary>\n                <div className=\"mt-2 p-3 bg-muted rounded text-xs font-mono text-foreground overflow-auto max-h-40\">\n                  <div className=\"mb-2\">\n                    <strong>Error:</strong> {this.state.error.message}\n                  </div>\n                  {this.state.errorInfo?.componentStack && (\n                    <div className=\"mb-2\">\n                      <strong>Component Stack:</strong>\n                      <pre className=\"whitespace-pre-wrap text-xs\">\n                        {this.state.errorInfo.componentStack}\n                      </pre>\n                    </div>\n                  )}\n                  {this.state.error.stack && (\n                    <div>\n                      <strong>Stack Trace:</strong>\n                      <pre className=\"whitespace-pre-wrap text-xs\">\n                        {this.state.error.stack}\n                      </pre>\n                    </div>\n                  )}\n                </div>\n              </details>\n            )}\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\n/**\n * Higher-order component for error boundary\n */\nexport const withErrorBoundary = <P extends object>(\n  WrappedComponent: React.ComponentType<P>,\n  options: Omit<ErrorBoundaryProps, 'children'> = {}\n) => {\n  return function WithErrorBoundaryComponent(props: P) {\n    return (\n      <ErrorBoundary {...options}>\n        <WrappedComponent {...props} />\n      </ErrorBoundary>\n    );\n  };\n};\n\n/**\n * Hook for error boundary functionality\n */\nexport const useErrorBoundary = () => {\n  const [error, setError] = React.useState<Error | null>(null);\n\n  const resetError = React.useCallback(() => {\n    setError(null);\n  }, []);\n\n  const captureError = React.useCallback((error: Error) => {\n    setError(error);\n  }, []);\n\n  React.useEffect(() => {\n    if (error) {\n      throw error;\n    }\n  }, [error]);\n\n  return { captureError, resetError };\n};\n","import React from 'react';\n\ninterface HeaderProps {\n  user?: {\n    email?: string;\n  } | null;\n  onSignOut: () => void;\n  onToggleSidebar: () => void;\n  ThemeSwitch: React.ComponentType;\n  Button: React.ComponentType<any>;\n  MenuIcon: React.ComponentType<any>;\n  LogOutIcon: React.ComponentType<any>;\n}\n\nexport function Header({ user, onSignOut, onToggleSidebar, ThemeSwitch, Button, MenuIcon, LogOutIcon }: HeaderProps) {\n  return (\n    <header className=\"bg-secondary shadow-sm border-b border-border\">\n      <div className=\"flex items-center justify-between px-4 py-2\">\n        <div className=\"flex items-center\">\n          <button\n            onClick={onToggleSidebar}\n            className=\"p-2 rounded-md text-muted-foreground hover:text-foreground hover:bg-accent focus:outline-none focus:ring-2 focus:ring-inset focus:ring-ring\"\n          >\n            <MenuIcon className=\"h-6 w-6\" />\n          </button>\n        </div>\n\n        <div className=\"flex items-center space-x-4\">\n          <ThemeSwitch />\n          <span className=\"text-sm text-muted-foreground\">\n            {user?.email?.split('@')[0] || 'User'}\n          </span>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={onSignOut}\n            className=\"flex items-center gap-2\"\n          >\n            <LogOutIcon className=\"h-4 w-4\" />\n            Logout\n          </Button>\n        </div>\n      </div>\n    </header>\n  );\n}\n","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { SupabaseClient, User, Session } from '@supabase/supabase-js';\n\n/**\n * Authentication context type\n */\nexport interface AuthContextType {\n  user: User | null;\n  session: Session | null;\n  loading: boolean;\n  error: string | null;\n  signIn: (email: string, password: string) => Promise<{ error?: string }>;\n  signUp: (email: string, password: string, metadata?: any) => Promise<{ error?: string }>;\n  signOut: () => Promise<void>;\n  resetPassword: (email: string) => Promise<{ error?: string }>;\n}\n\n/**\n * Authentication context\n */\nconst AuthContext = createContext<AuthContextType | null>(null);\n\n/**\n * Props for AuthProvider\n */\nexport interface AuthProviderProps {\n  children: ReactNode;\n  supabaseClient: SupabaseClient;\n  onAuthStateChange?: (user: User | null, session: Session | null) => void;\n}\n\n/**\n * Unified AuthProvider component\n * Works with any Supabase client and provides consistent auth interface\n */\nexport const AuthProvider: React.FC<AuthProviderProps> = ({\n  children,\n  supabaseClient,\n  onAuthStateChange\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [session, setSession] = useState<Session | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Initialize authentication state\n  useEffect(() => {\n    const getInitialSession = async () => {\n      try {\n        const { data: { session: initialSession }, error } = await supabaseClient.auth.getSession();\n        \n        if (error) {\n          setError('Failed to initialize authentication');\n        } else {\n          setSession(initialSession);\n          setUser(initialSession?.user ?? null);\n          onAuthStateChange?.(initialSession?.user ?? null, initialSession);\n        }\n      } catch (err) {\n        setError('Authentication initialization failed');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getInitialSession();\n\n    // Listen for auth changes\n    const { data: { subscription } } = supabaseClient.auth.onAuthStateChange(\n      async (event, session) => {\n        setSession(session);\n        setUser(session?.user ?? null);\n        setError(null);\n        onAuthStateChange?.(session?.user ?? null, session);\n        \n        if (event === 'SIGNED_OUT') {\n          setLoading(false);\n        }\n      }\n    );\n\n    return () => subscription.unsubscribe();\n  }, [supabaseClient, onAuthStateChange]);\n\n  /**\n   * Sign in with email and password\n   */\n  const signIn = async (email: string, password: string) => {\n    try {\n      setError(null);\n      const { error } = await supabaseClient.auth.signInWithPassword({\n        email,\n        password,\n      });\n\n      if (error) {\n        setError(error.message);\n        return { error: error.message };\n      }\n\n      return {};\n    } catch (err: any) {\n      const errorMessage = 'Sign in failed';\n      setError(errorMessage);\n      return { error: errorMessage };\n    }\n  };\n\n  /**\n   * Sign up with email and password\n   */\n  const signUp = async (email: string, password: string, metadata?: any) => {\n    try {\n      setError(null);\n      const { error } = await supabaseClient.auth.signUp({\n        email,\n        password,\n        options: {\n          data: metadata\n        }\n      });\n\n      if (error) {\n        setError(error.message);\n        return { error: error.message };\n      }\n\n      return {};\n    } catch (err: any) {\n      const errorMessage = 'Sign up failed';\n      setError(errorMessage);\n      return { error: errorMessage };\n    }\n  };\n\n  /**\n   * Sign out\n   */\n  const signOut = async () => {\n    try {\n      setError(null);\n      await supabaseClient.auth.signOut();\n    } catch (err: any) {\n      setError('Sign out failed');\n    }\n  };\n\n  /**\n   * Reset password\n   */\n  const resetPassword = async (email: string) => {\n    try {\n      setError(null);\n      const { error } = await supabaseClient.auth.resetPasswordForEmail(email);\n\n      if (error) {\n        setError(error.message);\n        return { error: error.message };\n      }\n\n      return {};\n    } catch (err: any) {\n      const errorMessage = 'Password reset failed';\n      setError(errorMessage);\n      return { error: errorMessage };\n    }\n  };\n\n  const value: AuthContextType = {\n    user,\n    session,\n    loading,\n    error,\n    signIn,\n    signUp,\n    signOut,\n    resetPassword,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\n/**\n * Hook to use authentication context\n */\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n","import React from 'react';\nimport { useAuth } from '../services/AuthProvider';\n\nexport interface ProtectedRouteProps {\n  children: React.ReactNode;\n  /** Custom loading component */\n  loadingComponent?: React.ReactNode;\n  /** Custom unauthorized component */\n  unauthorizedComponent?: React.ReactNode;\n  /** Redirect URL when unauthorized */\n  redirectTo?: string;\n  /** Custom authorization check function */\n  authorize?: (user: any, session: any) => boolean;\n  /** Required roles for access */\n  requiredRoles?: string[];\n  /** Required permissions for access */\n  requiredPermissions?: string[];\n}\n\n/**\n * ProtectedRoute component that wraps content requiring authentication\n * \n * @example\n * ```tsx\n * <ProtectedRoute>\n *   <Dashboard />\n * </ProtectedRoute>\n * \n * // With custom authorization\n * <ProtectedRoute \n *   authorize={(user) => user?.role === 'admin'}\n *   unauthorizedComponent={<div>Admin access required</div>}\n * >\n *   <AdminPanel />\n * </ProtectedRoute>\n * \n * // With required roles\n * <ProtectedRoute requiredRoles={['admin', 'moderator']}>\n *   <ModeratorPanel />\n * </ProtectedRoute>\n * ```\n */\nexport const ProtectedRoute: React.FC<ProtectedRouteProps> = ({\n  children,\n  loadingComponent,\n  unauthorizedComponent,\n  redirectTo,\n  authorize,\n  requiredRoles = [],\n  requiredPermissions = [],\n}) => {\n  const { user, session, loading } = useAuth();\n\n  // Show loading state\n  if (loading) {\n    return loadingComponent ? (\n      <>{loadingComponent}</>\n    ) : (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n      </div>\n    );\n  }\n\n  // Check if user is authenticated\n  if (!user || !session) {\n    if (redirectTo) {\n      window.location.href = redirectTo;\n      return null;\n    }\n    \n    return unauthorizedComponent ? (\n      <>{unauthorizedComponent}</>\n    ) : (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center space-y-4\">\n          <h2 className=\"text-2xl font-semibold\">Authentication Required</h2>\n          <p className=\"text-muted-foreground\">Please sign in to access this content.</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Custom authorization check\n  if (authorize && !authorize(user, session)) {\n    return unauthorizedComponent ? (\n      <>{unauthorizedComponent}</>\n    ) : (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center space-y-4\">\n          <h2 className=\"text-2xl font-semibold\">Access Denied</h2>\n          <p className=\"text-muted-foreground\">You don't have permission to access this content.</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Role-based authorization\n  if (requiredRoles.length > 0) {\n    const userRoles = user.user_metadata?.roles || user.app_metadata?.roles || [];\n    const hasRequiredRole = requiredRoles.some(role => \n      Array.isArray(userRoles) ? userRoles.includes(role) : userRoles === role\n    );\n    \n    if (!hasRequiredRole) {\n      return unauthorizedComponent ? (\n        <>{unauthorizedComponent}</>\n      ) : (\n        <div className=\"flex items-center justify-center min-h-screen\">\n          <div className=\"text-center space-y-4\">\n            <h2 className=\"text-2xl font-semibold\">Insufficient Permissions</h2>\n            <p className=\"text-muted-foreground\">\n              You need one of the following roles: {requiredRoles.join(', ')}\n            </p>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  // Permission-based authorization\n  if (requiredPermissions.length > 0) {\n    const userPermissions = user.user_metadata?.permissions || user.app_metadata?.permissions || [];\n    const hasRequiredPermission = requiredPermissions.some(permission => \n      Array.isArray(userPermissions) ? userPermissions.includes(permission) : userPermissions === permission\n    );\n    \n    if (!hasRequiredPermission) {\n      return unauthorizedComponent ? (\n        <>{unauthorizedComponent}</>\n      ) : (\n        <div className=\"flex items-center justify-center min-h-screen\">\n          <div className=\"text-center space-y-4\">\n            <h2 className=\"text-2xl font-semibold\">Insufficient Permissions</h2>\n            <p className=\"text-muted-foreground\">\n              You need one of the following permissions: {requiredPermissions.join(', ')}\n            </p>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  // User is authenticated and authorized\n  return <>{children}</>;\n};\n","import React from 'react';\n\nexport interface AuthLayoutProps {\n  children: React.ReactNode;\n  /** Application title */\n  title: string;\n  /** Logo URL for the application */\n  logo?: string;\n  /** Background image or color for the left panel */\n  backgroundImage?: string;\n  /** Custom background color for the left panel */\n  backgroundColor?: string;\n  /** Subtitle or description text */\n  subtitle?: string;\n  /** Show notifications */\n  showNotifications?: boolean;\n  /** Custom notification component */\n  notificationComponent?: React.ReactNode;\n}\n\n/**\n * Shared layout for authentication pages (login, signup, forgot password, etc.)\n * Provides consistent branding and layout across all auth flows\n */\nexport const AuthLayout: React.FC<AuthLayoutProps> = ({\n  children,\n  title,\n  logo,\n  backgroundImage,\n  backgroundColor = '#18181b', // zinc-900\n  subtitle,\n  showNotifications = true,\n  notificationComponent,\n}) => {\n  return (\n    <div className=\"min-h-screen flex\">\n      <div className=\"container relative grid flex-col items-center justify-center sm:max-w-none lg:grid-cols-2 lg:px-0\">\n        {/* Left Panel - Brand/Logo Section */}\n        <div \n          className=\"relative hidden h-full flex-col bg-muted p-10 text-white dark:border-r lg:flex\"\n          style={{\n            backgroundImage: backgroundImage ? `url(${backgroundImage})` : undefined,\n            backgroundColor: backgroundImage ? undefined : backgroundColor,\n          }}\n        >\n          {!backgroundImage && <div className=\"absolute inset-0 bg-zinc-900\" />}\n          <div className=\"relative z-20 flex items-center text-lg font-medium\">\n            {logo && <img className=\"h-6 mr-2\" src={logo} alt={title} />}\n            {title}\n          </div>\n          {subtitle && (\n            <div className=\"relative z-20 mt-auto\">\n              <p className=\"text-lg\">{subtitle}</p>\n            </div>\n          )}\n        </div>\n\n        {/* Right Panel - Content */}\n        <div className=\"lg:p-8\">\n          <div className=\"mx-auto flex w-full flex-col justify-center space-y-6 sm:w-[350px]\">\n            {/* Mobile Logo/Title */}\n            <div className=\"flex flex-col space-y-2 text-center lg:hidden\">\n              {logo && <img className=\"h-8 mx-auto\" src={logo} alt={title} />}\n              <h1 className=\"text-xl font-semibold\">{title}</h1>\n            </div>\n\n            {/* Content */}\n            {children}\n          </div>\n        </div>\n      </div>\n\n      {/* Notifications */}\n      {showNotifications && (\n        notificationComponent || (\n          <div id=\"auth-notifications\" className=\"fixed top-4 right-4 z-50\" />\n        )\n      )}\n    </div>\n  );\n};\n","import React, { useMemo, useState, useEffect, useRef } from 'react';\n\n// Filter Dropdown Component\nconst FilterDropdown = ({ column, options, onFilterChange, isOpen, onToggle, activeFilter }: any) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [position, setPosition] = useState({ top: 0, left: 0 });\n  const [selectedValues, setSelectedValues] = useState(new Set());\n  const [isSelectAll, setIsSelectAll] = useState(true);\n  const dropdownRef = useRef(null);\n  \n  const filteredOptions = useMemo(() => {\n    if (!searchTerm) return options;\n    const filtered = options.filter(option => \n      option && option.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    return filtered;\n  }, [options, searchTerm, column]);\n\n  // Initialize selected values when dropdown opens\n  useEffect(() => {\n    if (isOpen) {\n      if (activeFilter && Array.isArray(activeFilter)) {\n        setSelectedValues(new Set(activeFilter));\n        setIsSelectAll(activeFilter.length === options.length);\n      } else if (activeFilter) {\n        setSelectedValues(new Set([activeFilter]));\n        setIsSelectAll(false);\n      } else {\n        setSelectedValues(new Set(options));\n        setIsSelectAll(true);\n      }\n    }\n  }, [isOpen, activeFilter, options]);\n\n  const handleOptionToggle = (option) => {\n    const newSelectedValues = new Set(selectedValues);\n    if (newSelectedValues.has(option)) {\n      newSelectedValues.delete(option);\n    } else {\n      newSelectedValues.add(option);\n    }\n    setSelectedValues(newSelectedValues);\n    setIsSelectAll(newSelectedValues.size === filteredOptions.length);\n  };\n\n  const handleSelectAll = () => {\n    if (isSelectAll) {\n      setSelectedValues(new Set());\n      setIsSelectAll(false);\n    } else {\n      setSelectedValues(new Set(filteredOptions));\n      setIsSelectAll(true);\n    }\n  };\n\n  const handleClearFilter = () => {\n    setSelectedValues(new Set());\n    setIsSelectAll(false);\n  };\n\n  const handleApplyFilter = () => {\n    const selectedArray = Array.from(selectedValues);\n    onFilterChange(column, selectedArray.length === 0 ? '' : selectedArray);\n    setSearchTerm('');\n    onToggle();\n  };\n\n  const handleCancel = () => {\n    setSearchTerm('');\n    onToggle();\n  };\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        handleCancel();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]);\n\n  // Reset search term when dropdown closes\n  useEffect(() => {\n    if (!isOpen) {\n      setSearchTerm('');\n      setSelectedValues(new Set());\n      setIsSelectAll(true);\n    }\n  }, [isOpen]);\n\n  // Calculate position when dropdown opens\n  useEffect(() => {\n    if (isOpen && dropdownRef.current) {\n      const button = dropdownRef.current.querySelector('button');\n      if (button) {\n        const rect = button.getBoundingClientRect();\n        const viewportWidth = window.innerWidth;\n        const dropdownWidth = 192; // w-48 = 12rem = 192px\n        \n        // Position below the button\n        let leftPosition = 0; // Relative to the button\n        \n        // If the dropdown would go off the right edge, position it to the left of the button\n        if (rect.left + dropdownWidth > viewportWidth) {\n          leftPosition = -dropdownWidth + rect.width;\n        }\n        \n        setPosition({\n          top: rect.height + 5, // Position below the button with small gap\n          left: leftPosition,\n        });\n      }\n    }\n  }, [isOpen]);\n\n  return (\n    <div className=\"relative\" ref={dropdownRef}>\n      <button\n        onClick={onToggle}\n        className={`inline-flex items-center justify-center w-4 h-4 transition-colors ${\n          activeFilter ? 'text-blue-600 hover:text-blue-700' : 'text-gray-500 hover:text-gray-700'\n        }`}\n        title={activeFilter ? `Filtro attivo: ${activeFilter}` : 'Filtra'}\n      >\n        <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"/>\n        </svg>\n      </button>\n      \n      {isOpen && (\n        <div \n          className=\"absolute bg-white border border-gray-300 rounded-md shadow-lg z-[99999] w-48\" \n          style={{\n            top: position.top,\n            left: position.left\n          }}\n          onClick={(e) => e.stopPropagation()}\n        >\n          {/* Filter by values section */}\n          <div className=\"p-2\">\n            <div className=\"flex items-center justify-between mb-1\">\n              <button\n                onClick={handleSelectAll}\n                className=\"text-blue-600 text-xs font-medium hover:underline\"\n              >\n                {isSelectAll ? 'Select all' : `Select all ${filteredOptions.length}`}\n              </button>\n              <button\n                onClick={handleClearFilter}\n                className=\"text-blue-600 text-xs font-medium hover:underline\"\n              >\n                Clear\n              </button>\n            </div>\n            \n            <div className=\"text-xs text-gray-600 mb-1\">\n              Displaying {filteredOptions.length}\n            </div>\n            \n            {/* Search input */}\n            <div className=\"relative mb-1\">\n              <input\n                type=\"text\"\n                placeholder=\"Search values...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full px-2 py-1 text-xs border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500\"\n              />\n              <div className=\"absolute right-2 top-1/2 transform -translate-y-1/2\">\n                <svg width=\"10\" height=\"10\" viewBox=\"0 0 24 24\" fill=\"currentColor\" className=\"text-gray-400\">\n                  <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n                </svg>\n              </div>\n            </div>\n            \n            {/* Options list with checkboxes - Fixed height scrollable container */}\n            <div className=\"h-16 overflow-y-auto border border-gray-200 rounded\">\n              {filteredOptions.map((option, index) => (\n                <label\n                  key={`${option}-${index}`}\n                  className=\"flex items-center px-2 py-1 hover:bg-gray-50 cursor-pointer\"\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedValues.has(option)}\n                    onChange={() => handleOptionToggle(option)}\n                    className=\"mr-2 h-3 w-3 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                  />\n                  <span className=\"text-xs truncate flex-1\">{option || '(Blanks)'}</span>\n                </label>\n              ))}\n              {filteredOptions.length === 0 && searchTerm && (\n                <div className=\"px-2 py-2 text-xs text-gray-500 text-center\">\n                  No results found\n                </div>\n              )}\n            </div>\n          </div>\n          \n          {/* Action buttons */}\n          <div className=\"border-t border-gray-200 p-2 flex justify-end space-x-1\">\n            <button\n              onClick={handleCancel}\n              className=\"px-2 py-1 text-xs text-gray-700 hover:bg-gray-100 rounded\"\n            >\n              Cancel\n            </button>\n            <button\n              onClick={handleApplyFilter}\n              className=\"px-2 py-1 text-xs bg-blue-600 text-white hover:bg-blue-700 rounded\"\n            >\n              OK\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FilterDropdown;\n\n","import React, { useEffect, useMemo } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useErrorHandler } from '../hooks';\nimport { showValidationError } from '../utils';\nimport { Input } from './input';\nimport { Label } from './label';\nimport { Button } from './button';\n// Using native HTML select instead of complex Select component\n\n/**\n * Generic Form Component\n * Eliminates duplication across MachineForm, PhasesForm, BacklogForm, and OffTimeForm\n * Uses configuration-driven approach for form fields and validation\n */\n\n/**\n * Field configuration object structure:\n * {\n *   name: string,           // Field name\n *   label: string,          // Display label\n *   type: string,           // Field type (text, number, select, textarea, etc.)\n *   required: boolean,       // Whether field is required\n *   placeholder?: string,    // Placeholder text\n *   options?: Array,         // For select fields\n *   rows?: number,          // For textarea fields\n *   disabled?: boolean,      // Whether field is disabled\n *   readOnly?: boolean,     // Whether field is read-only\n *   className?: string,     // Additional CSS classes\n *   validation?: Object,    // Custom validation rules\n *   conditional?: Function, // Function to determine if field should be shown\n * }\n */\n\n/**\n * Section configuration object structure:\n * {\n *   title: string,          // Section title\n *   fields: Array,          // Array of field configurations\n *   gridCols?: string,      // CSS grid columns (default: \"grid-cols-2 md:grid-cols-4 lg:grid-cols-8\")\n * }\n */\n\nfunction GenericForm({ \n  config, \n  initialData = {}, \n  onSubmit, \n  onSuccess, \n  isEditMode = false,\n  isLoading = false,\n  customActions = null,\n  customFieldRenderers = {},\n  className = \"p-1 bg-card rounded-lg shadow-sm border\"\n}) {\n  const { handleAsync } = useErrorHandler('GenericForm');\n  \n  // Create initial form data from config and provided data\n  const initialFormData = useMemo(() => {\n    const formData = {};\n    \n    config.sections.forEach(section => {\n      section.fields.forEach(field => {\n        if (field.name in initialData) {\n          formData[field.name] = initialData[field.name];\n        } else if (field.defaultValue !== undefined) {\n          formData[field.name] = field.defaultValue;\n        } else {\n          formData[field.name] = '';\n        }\n      });\n    });\n    \n    return formData;\n  }, [config, initialData]);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { isSubmitting, errors },\n    watch,\n    setValue,\n    getValues,\n    reset,\n    clearErrors\n  } = useForm({\n    defaultValues: initialFormData,\n    mode: 'onChange' // Enable real-time validation\n  });\n\n  // Handle form submission with validation\n  const handleFormSubmit = async (data) => {\n    // Submit the form - React Hook Form validation is handled automatically\n    await handleAsync(\n      async () => {\n        await onSubmit(data);\n        if (onSuccess) onSuccess();\n        reset(initialFormData);\n      },\n      { \n        context: isEditMode ? config.editContext : config.addContext, \n        fallbackMessage: isEditMode ? config.editErrorMessage : config.addErrorMessage\n      }\n    );\n  };\n\n  // Render a single field based on its configuration\n  const renderField = (field) => {\n    const fieldValue = watch(field.name);\n    \n    // Check conditional rendering\n    if (field.conditional && !field.conditional(fieldValue, watch, getValues)) {\n      return null;\n    }\n\n    // Check for custom field renderer first\n    if (customFieldRenderers[field.type]) {\n      return customFieldRenderers[field.type](field, {\n        watch,\n        setValue,\n        getValues,\n        register,\n        isSubmitting,\n        fieldValue\n      });\n    }\n\n    const baseInputProps = {\n      id: field.name,\n      placeholder: field.placeholder,\n      disabled: field.disabled || isSubmitting,\n      className: field.className || '',\n      ...register(field.name, field.validation || {})\n    };\n\n    switch (field.type) {\n      case 'select':\n        return (\n          <div>\n            <select\n              {...register(field.name, field.validation)}\n              disabled={field.disabled || isSubmitting}\n              className={`flex h-9 w-full rounded-md border bg-transparent px-3 py-1 text-sm shadow-sm transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring ${errors[field.name] ? 'border-red-500' : 'border-input'}`}\n            >\n              <option value=\"\">{field.placeholder || `Seleziona ${field.label.toLowerCase()}`}</option>\n              {field.options?.map(option => (\n                <option key={option.value} value={option.value}>\n                  {option.label}\n                </option>\n              ))}\n            </select>\n            {errors[field.name] && (\n              <p className=\"text-sm text-destructive mt-1\">{errors[field.name].message}</p>\n            )}\n          </div>\n        );\n\n      case 'textarea':\n        return (\n          <div>\n            <textarea\n              {...baseInputProps}\n              rows={field.rows || 3}\n              className={`w-full px-3 py-2 border border-input rounded-md bg-background text-foreground placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:border-transparent ${field.className || ''} ${errors[field.name] ? 'border-destructive' : ''}`}\n            />\n            {errors[field.name] && (\n              <p className=\"text-sm text-destructive mt-1\">{errors[field.name].message}</p>\n            )}\n          </div>\n        );\n\n      case 'checkbox':\n        return (\n          <div className=\"flex flex-wrap gap-2\">\n            {field.options?.map(option => (\n              <div key={option.value} className=\"flex items-center space-x-2\">\n                <input \n                  type=\"checkbox\" \n                  id={`${field.name}_${option.value}`}\n                  value={option.value} \n                  checked={fieldValue?.includes(option.value) || false}\n                  onChange={(e) => {\n                    const currentValues = getValues(field.name) || [];\n                    if (e.target.checked) {\n                      setValue(field.name, [...currentValues, option.value].sort(), { shouldValidate: true });\n                    } else {\n                      setValue(field.name, currentValues.filter(v => v !== option.value), { shouldValidate: true });\n                    }\n                  }}\n                  className=\"h-4 w-4 text-primary border-gray-300 rounded focus:ring-primary\"\n                />\n                <Label htmlFor={`${field.name}_${option.value}`} className=\"text-[10px] font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                  {option.label}\n                </Label>\n              </div>\n            ))}\n          </div>\n        );\n\n      case 'datetime-local':\n        return (\n          <div>\n            <Input type=\"datetime-local\" {...baseInputProps} className={`${baseInputProps.className} ${errors[field.name] ? 'border-red-500' : ''}`} />\n            {errors[field.name] && (\n              <p className=\"text-sm text-destructive mt-1\">{errors[field.name].message}</p>\n            )}\n          </div>\n        );\n\n      case 'date':\n        return (\n          <div>\n            <Input type=\"date\" {...baseInputProps} className={`${baseInputProps.className} ${errors[field.name] ? 'border-red-500' : ''}`} />\n            {errors[field.name] && (\n              <p className=\"text-sm text-destructive mt-1\">{errors[field.name].message}</p>\n            )}\n          </div>\n        );\n\n      case 'time':\n        return (\n          <div>\n            <Input type=\"time\" {...baseInputProps} className={`${baseInputProps.className} ${errors[field.name] ? 'border-red-500' : ''}`} />\n            {errors[field.name] && (\n              <p className=\"text-sm text-destructive mt-1\">{errors[field.name].message}</p>\n            )}\n          </div>\n        );\n\n      case 'number':\n        return (\n          <div>\n            <Input type=\"number\" {...baseInputProps} className={`${baseInputProps.className} ${errors[field.name] ? 'border-red-500' : ''}`} />\n            {errors[field.name] && (\n              <p className=\"text-sm text-destructive mt-1\">{errors[field.name].message}</p>\n            )}\n          </div>\n        );\n\n      case 'text':\n      default:\n        return (\n          <div>\n            <Input type=\"text\" {...baseInputProps} className={`${baseInputProps.className} ${errors[field.name] ? 'border-red-500' : ''}`} />\n            {errors[field.name] && (\n              <p className=\"text-sm text-destructive mt-1\">{errors[field.name].message}</p>\n            )}\n          </div>\n        );\n    }\n  };\n\n  // Render a section of fields - Simplified Tracc Style\n  const renderSection = (section) => {\n    const visibleFields = section.fields.filter(field => \n      !field.conditional || field.conditional(watch(field.name), watch, getValues)\n    );\n\n    if (visibleFields.length === 0) return null;\n\n    return (\n      <div key={section.title} className=\"space-y-4\">\n        <h2 className=\"text-lg font-semibold text-foreground\">\n          {section.title}\n        </h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {visibleFields.map(field => (\n            <div key={field.name} className=\"space-y-2\">\n              <Label htmlFor={field.name} className=\"text-sm font-medium text-foreground\">\n                {field.label} {field.required && <span className=\"text-destructive\">*</span>}\n              </Label>\n              {renderField(field)}\n              {field.helpText && (\n                <p className=\"text-xs text-muted-foreground\">{field.helpText}</p>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  // Render custom sections (like calculation results)\n  const renderCustomSection = (sectionKey) => {\n    if (customFieldRenderers[sectionKey]) {\n      return customFieldRenderers[sectionKey]();\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"bg-card rounded-lg border border-border shadow-sm p-6\">\n      <form onSubmit={handleSubmit(handleFormSubmit)} noValidate className=\"space-y-6\">\n        {config.sections.map(renderSection)}\n        \n        {/* Render custom sections */}\n        {config.customFields && Object.keys(config.customFields).map(sectionKey => \n          <div key={sectionKey}>{renderCustomSection(sectionKey)}</div>\n        )}\n        \n        {customActions && (\n          <div className=\"space-y-4\">\n            {customActions}\n          </div>\n        )}\n\n        <div className=\"flex justify-end pt-6 border-t border-border\">\n          <Button \n            type=\"submit\" \n            disabled={isLoading || isSubmitting}\n          >\n            {isLoading || isSubmitting\n              ? (isEditMode ? config.editLoadingText : config.addLoadingText)\n              : (isEditMode ? config.editButtonText : config.addButtonText)\n            }\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default GenericForm;\n","import { useState, useCallback, useRef } from 'react';\n// Note: These would normally be imported from @santonastaso/shared-utils\n// For now using placeholder functions\nconst showError = (message: string) => console.error(message);\nconst showWarning = (message: string) => console.warn(message);\nconst showInfo = (message: string) => console.info(message);\nconst showSuccess = (message: string) => console.log(message);\nimport { ERROR_TYPES, type ErrorType } from '../constants';\n\ninterface ErrorHandlerOptions {\n  logErrors?: boolean;\n  showUserMessages?: boolean;\n  maxRetries?: number;\n  retryDelay?: number;\n  onError?: (error: any, context: string) => void;\n  onRetry?: (error: any, attempt: number, delay: number) => void;\n  onFallback?: (error: any) => void;\n}\n\ninterface AsyncErrorOptions extends ErrorHandlerOptions {\n  context?: string;\n  fallbackMessage?: string;\n  retry?: boolean;\n}\n\n/**\n * Unified Error Handling Hook\n * Provides comprehensive error handling capabilities for React components\n */\nexport const useErrorHandler = (options: ErrorHandlerOptions = {}) => {\n  const {\n    logErrors = true,\n    showUserMessages = true,\n    maxRetries = 3,\n    retryDelay = 1000,\n    onError = null,\n    onRetry = null,\n    onFallback = null\n  } = options;\n\n  const [errors, setErrors] = useState<any[]>([]);\n  const [isRetrying, setIsRetrying] = useState(false);\n  const retryCountRef = useRef(0);\n\n  /**\n   * Handle error with comprehensive error management\n   */\n  const handleError = useCallback(async (error: any, context = '', customOptions: any = {}) => {\n    // Create normalized error object\n    const normalizedError = {\n      id: `ERR_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      message: error.message || 'An unexpected error occurred',\n      type: error.type || ERROR_TYPES.SERVER_ERROR,\n      severity: error.severity || 'medium',\n      context,\n      timestamp: new Date().toISOString(),\n      userMessage: error.userMessage || error.message || 'An unexpected error occurred'\n    };\n\n    // Add to errors state\n    setErrors(prev => [...prev, normalizedError]);\n\n    // Log error if enabled\n    if (logErrors) {\n      console.error(`[${context}] Error:`, error);\n    }\n\n    // Show user message if enabled\n    if (showUserMessages) {\n      const message = normalizedError.userMessage;\n      \n      switch (normalizedError.severity) {\n        case 'low':\n          showWarning(message);\n          break;\n        case 'medium':\n          showError(message);\n          break;\n        case 'high':\n        case 'critical':\n          showError(message);\n          break;\n        default:\n          showError(message);\n      }\n    }\n\n    // Call custom error handler if provided\n    if (onError) {\n      await onError(normalizedError, context);\n    }\n\n    return normalizedError;\n  }, [logErrors, showUserMessages, onError]);\n\n  /**\n   * Handle async operations with automatic retry\n   */\n  const handleAsync = useCallback(async (\n    asyncOperation: () => Promise<any>, \n    options: AsyncErrorOptions = {}\n  ) => {\n    const {\n      context = '',\n      fallbackMessage = 'Operation failed',\n      retry = false,\n      maxRetries: customMaxRetries = maxRetries\n    } = options;\n\n    try {\n      if (retry) {\n        return await retryOperation(asyncOperation, customMaxRetries);\n      }\n      return await asyncOperation();\n    } catch (error) {\n      const handledError = await handleError(error, context, { fallbackMessage });\n      throw handledError;\n    }\n  }, [maxRetries, handleError]);\n\n  /**\n   * Retry operation with exponential backoff\n   */\n  const retryOperation = useCallback(async (\n    operation: () => Promise<any>,\n    maxAttempts: number\n  ) => {\n    let lastError: any;\n    \n    for (let attempt = 1; attempt <= maxAttempts; attempt++) {\n      try {\n        setIsRetrying(attempt > 1);\n        retryCountRef.current = attempt - 1;\n        \n        const result = await operation();\n        setIsRetrying(false);\n        retryCountRef.current = 0;\n        return result;\n      } catch (error) {\n        lastError = error;\n        \n        if (attempt < maxAttempts) {\n          const delay = retryDelay * Math.pow(2, attempt - 1); // Exponential backoff\n          \n          if (onRetry) {\n            await onRetry(error, attempt, delay);\n          }\n          \n          if (showUserMessages) {\n            showInfo(`Retrying... (${attempt}/${maxAttempts})`);\n          }\n          \n          await new Promise(resolve => setTimeout(resolve, delay));\n        }\n      }\n    }\n    \n    setIsRetrying(false);\n    retryCountRef.current = 0;\n    throw lastError;\n  }, [retryDelay, onRetry, showUserMessages]);\n\n  /**\n   * Handle specific error types\n   */\n  const handleValidationError = useCallback((message: string, details: any = {}) => {\n    const error = {\n      message,\n      type: ERROR_TYPES.VALIDATION_ERROR,\n      severity: 'medium',\n      details,\n      userMessage: message\n    };\n    return handleError(error, 'validation');\n  }, [handleError]);\n\n  const handleNetworkError = useCallback((message = 'Network connection failed') => {\n    const error = {\n      message,\n      type: ERROR_TYPES.NETWORK_ERROR,\n      severity: 'high',\n      userMessage: message\n    };\n    return handleError(error, 'network');\n  }, [handleError]);\n\n  const handleAuthError = useCallback((message = 'Authentication failed') => {\n    const error = {\n      message,\n      type: ERROR_TYPES.AUTHENTICATION_ERROR,\n      severity: 'high',\n      userMessage: message\n    };\n    return handleError(error, 'authentication');\n  }, [handleError]);\n\n  /**\n   * Clear all errors\n   */\n  const clearErrors = useCallback(() => {\n    setErrors([]);\n  }, []);\n\n  /**\n   * Clear specific error by ID\n   */\n  const clearError = useCallback((errorId: string) => {\n    setErrors(prev => prev.filter(error => error.id !== errorId));\n  }, []);\n\n  /**\n   * Get errors by type\n   */\n  const getErrorsByType = useCallback((type: ErrorType) => {\n    return errors.filter(error => error.type === type);\n  }, [errors]);\n\n  /**\n   * Check if there are any critical errors\n   */\n  const hasCriticalErrors = useCallback(() => {\n    return errors.some(error => error.severity === 'critical');\n  }, [errors]);\n\n  return {\n    // Error handling functions\n    handleError,\n    handleAsync,\n    handleValidationError,\n    handleNetworkError,\n    handleAuthError,\n    \n    // Error management\n    clearErrors,\n    clearError,\n    getErrorsByType,\n    hasCriticalErrors,\n    \n    // State\n    errors,\n    isRetrying,\n    retryCount: retryCountRef.current,\n    \n    // Utilities\n    retryOperation\n  };\n};\n\n/**\n * Hook for handling form validation errors\n */\nexport const useValidationErrorHandler = () => {\n  const { handleValidationError, clearErrors } = useErrorHandler({\n    showUserMessages: false // Don't show toast for validation errors\n  });\n\n  const handleFieldError = useCallback((field: string, message: string) => {\n    return handleValidationError(`Field '${field}': ${message}`, { field });\n  }, [handleValidationError]);\n\n  const handleRequiredFieldError = useCallback((field: string) => {\n    return handleValidationError(`Field '${field}' is required`, { field, type: 'required' });\n  }, [handleValidationError]);\n\n  return {\n    handleFieldError,\n    handleRequiredFieldError,\n    clearErrors\n  };\n};\n","// @ts-ignore\nimport { create } from 'zustand';\n\ninterface SidebarState {\n  isOpen: boolean;\n  toggle: () => void;\n  open: () => void;\n  close: () => void;\n}\n\nexport const useSidebar = create<SidebarState>((set: any) => ({\n  isOpen: true,\n  toggle: () => set((state: any) => ({ isOpen: !state.isOpen })),\n  open: () => set({ isOpen: true }),\n  close: () => set({ isOpen: false }),\n}));\n","import { useQuery, useMutation, useQueryClient, UseQueryOptions, UseMutationOptions } from '@tanstack/react-query';\nimport { BaseService, QueryOptions, PaginationOptions } from '../services/BaseService';\n\n/**\n * Hook for data service operations with React Query\n */\nexport function useDataService<T = any>(service: BaseService, resourceName: string) {\n  const queryClient = useQueryClient();\n\n  // Get all records\n  const useGetAll = (\n    options: QueryOptions = {},\n    queryOptions?: Omit<UseQueryOptions<T[], Error>, 'queryKey' | 'queryFn'>\n  ) => {\n    return useQuery({\n      queryKey: [resourceName, 'list', options],\n      queryFn: () => service.getAll(options),\n      ...queryOptions,\n    });\n  };\n\n  // Get paginated records\n  const useGetPaginated = (\n    options: QueryOptions & PaginationOptions = {},\n    queryOptions?: Omit<UseQueryOptions<any, Error>, 'queryKey' | 'queryFn'>\n  ) => {\n    return useQuery({\n      queryKey: [resourceName, 'paginated', options],\n      queryFn: () => service.getPaginated(options),\n      ...queryOptions,\n    });\n  };\n\n  // Get record by ID\n  const useGetById = (\n    id: string | number | null,\n    select = '*',\n    queryOptions?: Omit<UseQueryOptions<T, Error>, 'queryKey' | 'queryFn'>\n  ) => {\n    return useQuery({\n      queryKey: [resourceName, 'detail', id, select],\n      queryFn: () => service.getById(id!, select),\n      enabled: id !== null && id !== undefined,\n      ...queryOptions,\n    });\n  };\n\n  // Search records\n  const useSearch = (\n    searchTerm: string,\n    searchFields: string[] = ['name'],\n    options: QueryOptions = {},\n    queryOptions?: Omit<UseQueryOptions<T[], Error>, 'queryKey' | 'queryFn'>\n  ) => {\n    return useQuery({\n      queryKey: [resourceName, 'search', searchTerm, searchFields, options],\n      queryFn: () => service.search(searchTerm, searchFields, options),\n      enabled: searchTerm.length > 0,\n      ...queryOptions,\n    });\n  };\n\n  // Count records\n  const useCount = (\n    filters?: Record<string, any>,\n    queryOptions?: Omit<UseQueryOptions<number, Error>, 'queryKey' | 'queryFn'>\n  ) => {\n    return useQuery({\n      queryKey: [resourceName, 'count', filters],\n      queryFn: () => service.count(filters),\n      ...queryOptions,\n    });\n  };\n\n  // Create mutation\n  const useCreate = () => {\n    return useMutation({\n      mutationFn: (data: Record<string, any>) => service.create(data),\n      onSuccess: () => {\n        queryClient.invalidateQueries({ queryKey: [resourceName] });\n      },\n    });\n  };\n\n  // Update mutation\n  const useUpdate = () => {\n    return useMutation({\n      mutationFn: ({ id, data }: { id: string | number; data: Record<string, any> }) => \n        service.update(id, data),\n      onSuccess: (data, variables) => {\n        queryClient.setQueryData([resourceName, 'detail', variables.id], data);\n        queryClient.invalidateQueries({ queryKey: [resourceName, 'list'] });\n        queryClient.invalidateQueries({ queryKey: [resourceName, 'paginated'] });\n      },\n    });\n  };\n\n  // Delete mutation\n  const useDelete = () => {\n    return useMutation({\n      mutationFn: (id: string | number) => service.delete(id),\n      onSuccess: (_, variables) => {\n        queryClient.removeQueries({ queryKey: [resourceName, 'detail', variables] });\n        queryClient.invalidateQueries({ queryKey: [resourceName, 'list'] });\n        queryClient.invalidateQueries({ queryKey: [resourceName, 'paginated'] });\n      },\n    });\n  };\n\n  // Bulk delete mutation\n  const useBulkDelete = () => {\n    return useMutation({\n      mutationFn: (ids: (string | number)[]) => service.bulkDelete(ids),\n      onSuccess: (_, variables) => {\n        variables.forEach(id => {\n          queryClient.removeQueries({ queryKey: [resourceName, 'detail', id] });\n        });\n        queryClient.invalidateQueries({ queryKey: [resourceName, 'list'] });\n        queryClient.invalidateQueries({ queryKey: [resourceName, 'paginated'] });\n      },\n    });\n  };\n\n  return {\n    // Queries\n    useGetAll,\n    useGetPaginated,\n    useGetById,\n    useSearch,\n    useCount,\n    \n    // Mutations\n    useCreate,\n    useUpdate,\n    useDelete,\n    useBulkDelete,\n    \n    // Utilities\n    invalidateAll: () => queryClient.invalidateQueries({ queryKey: [resourceName] }),\n    invalidateList: () => {\n      queryClient.invalidateQueries({ queryKey: [resourceName, 'list'] });\n      queryClient.invalidateQueries({ queryKey: [resourceName, 'paginated'] });\n    },\n    invalidateDetail: (id: string | number) => \n      queryClient.invalidateQueries({ queryKey: [resourceName, 'detail', id] }),\n  };\n}","import { useEffect } from 'react';\nimport { useAuth } from '../services/AuthProvider';\n\nexport interface UseAuthGuardOptions {\n  /** Redirect URL when unauthorized */\n  redirectTo?: string;\n  /** Custom authorization check function */\n  authorize?: (user: any, session: any) => boolean;\n  /** Required roles for access */\n  requiredRoles?: string[];\n  /** Required permissions for access */\n  requiredPermissions?: string[];\n  /** Callback when authorization fails */\n  onUnauthorized?: () => void;\n}\n\n/**\n * Hook for protecting components with authentication and authorization\n * \n * @example\n * ```tsx\n * function AdminPanel() {\n *   const { isAuthorized, loading } = useAuthGuard({\n *     requiredRoles: ['admin'],\n *     redirectTo: '/login'\n *   });\n * \n *   if (loading) return <div>Loading...</div>;\n *   if (!isAuthorized) return null; // Will redirect\n * \n *   return <div>Admin content</div>;\n * }\n * ```\n */\nexport const useAuthGuard = (options: UseAuthGuardOptions = {}) => {\n  const {\n    redirectTo,\n    authorize,\n    requiredRoles = [],\n    requiredPermissions = [],\n    onUnauthorized,\n  } = options;\n\n  const { user, session, loading } = useAuth();\n\n  const isAuthenticated = !loading && !!user && !!session;\n  \n  const isAuthorized = (() => {\n    if (loading || !user || !session) return false;\n\n    // Custom authorization check\n    if (authorize && !authorize(user, session)) {\n      return false;\n    }\n\n    // Role-based authorization\n    if (requiredRoles.length > 0) {\n      const userRoles = user.user_metadata?.roles || user.app_metadata?.roles || [];\n      const hasRequiredRole = requiredRoles.some(role => \n        Array.isArray(userRoles) ? userRoles.includes(role) : userRoles === role\n      );\n      if (!hasRequiredRole) return false;\n    }\n\n    // Permission-based authorization\n    if (requiredPermissions.length > 0) {\n      const userPermissions = user.user_metadata?.permissions || user.app_metadata?.permissions || [];\n      const hasRequiredPermission = requiredPermissions.some(permission => \n        Array.isArray(userPermissions) ? userPermissions.includes(permission) : userPermissions === permission\n      );\n      if (!hasRequiredPermission) return false;\n    }\n\n    return true;\n  })();\n\n  useEffect(() => {\n    if (!loading && !isAuthorized) {\n      if (onUnauthorized) {\n        onUnauthorized();\n      } else if (redirectTo) {\n        window.location.href = redirectTo;\n      }\n    }\n  }, [loading, isAuthorized, redirectTo, onUnauthorized]);\n\n  return {\n    user,\n    session,\n    loading,\n    isAuthenticated,\n    isAuthorized,\n  };\n};\n","import { useQuery, useMutation, useQueryClient, UseQueryOptions, UseMutationOptions } from '@tanstack/react-query';\nimport { SupabaseService, QueryOptions, PaginationOptions } from '../services/SupabaseService';\n\n/**\n * Query key factory for consistent cache management\n */\nexport const createQueryKeys = (tableName: string) => ({\n  all: [tableName] as const,\n  lists: () => [tableName, 'list'] as const,\n  list: (filters?: Record<string, any>) => [tableName, 'list', filters] as const,\n  details: () => [tableName, 'detail'] as const,\n  detail: (id: string | number) => [tableName, 'detail', id] as const,\n  search: (term: string, fields?: string[]) => [tableName, 'search', term, fields] as const,\n  count: (filters?: Record<string, any>) => [tableName, 'count', filters] as const,\n  paginated: (options?: QueryOptions & PaginationOptions) => [tableName, 'paginated', options] as const,\n});\n\n/**\n * Hook factory for creating standardized Supabase query hooks\n */\nexport function createSupabaseHooks<T = any>(service: SupabaseService) {\n  const tableName = service.getTableName();\n  const queryKeys = createQueryKeys(tableName);\n\n  /**\n   * Hook to fetch all records\n   */\n  const useList = (\n    options?: QueryOptions,\n    queryOptions?: Omit<UseQueryOptions<T[], Error>, 'queryKey' | 'queryFn'>\n  ) => {\n    return useQuery({\n      queryKey: queryKeys.list(options?.filters),\n      queryFn: () => service.getAll(options),\n      staleTime: 5 * 60 * 1000, // 5 minutes\n      ...queryOptions,\n    });\n  };\n\n  /**\n   * Hook to fetch paginated records\n   */\n  const usePaginatedList = (\n    options?: QueryOptions & PaginationOptions,\n    queryOptions?: Omit<UseQueryOptions<{\n      data: T[];\n      total: number;\n      page: number;\n      perPage: number;\n      totalPages: number;\n    }, Error>, 'queryKey' | 'queryFn'>\n  ) => {\n    return useQuery({\n      queryKey: queryKeys.paginated(options),\n      queryFn: () => service.getPaginated(options),\n      staleTime: 5 * 60 * 1000, // 5 minutes\n      keepPreviousData: true, // Keep previous data while loading new page\n      ...queryOptions,\n    });\n  };\n\n  /**\n   * Hook to fetch a single record by ID\n   */\n  const useDetail = (\n    id: string | number | undefined,\n    select?: string,\n    queryOptions?: Omit<UseQueryOptions<T, Error>, 'queryKey' | 'queryFn'>\n  ) => {\n    return useQuery({\n      queryKey: queryKeys.detail(id!),\n      queryFn: () => service.getById(id!, select),\n      enabled: !!id,\n      staleTime: 5 * 60 * 1000, // 5 minutes\n      ...queryOptions,\n    });\n  };\n\n  /**\n   * Hook to search records\n   */\n  const useSearch = (\n    searchTerm: string,\n    searchFields?: string[],\n    options?: QueryOptions,\n    queryOptions?: Omit<UseQueryOptions<T[], Error>, 'queryKey' | 'queryFn'>\n  ) => {\n    return useQuery({\n      queryKey: queryKeys.search(searchTerm, searchFields),\n      queryFn: () => service.search(searchTerm, searchFields, options),\n      enabled: searchTerm.length > 0,\n      staleTime: 2 * 60 * 1000, // 2 minutes for search results\n      ...queryOptions,\n    });\n  };\n\n  /**\n   * Hook to count records\n   */\n  const useCount = (\n    filters?: Record<string, any>,\n    queryOptions?: Omit<UseQueryOptions<number, Error>, 'queryKey' | 'queryFn'>\n  ) => {\n    return useQuery({\n      queryKey: queryKeys.count(filters),\n      queryFn: () => service.count(filters),\n      staleTime: 5 * 60 * 1000, // 5 minutes\n      ...queryOptions,\n    });\n  };\n\n  /**\n   * Hook to create a record\n   */\n  const useCreate = (\n    mutationOptions?: UseMutationOptions<T, Error, Record<string, any>>\n  ) => {\n    const queryClient = useQueryClient();\n\n    return useMutation({\n      mutationFn: (data: Record<string, any>) => service.create(data),\n      onSuccess: (data, variables) => {\n        // Invalidate and refetch list queries\n        queryClient.invalidateQueries({ queryKey: queryKeys.lists() });\n        queryClient.invalidateQueries({ queryKey: queryKeys.count() });\n        \n        // Add the new item to the cache\n        queryClient.setQueryData(queryKeys.detail(data.id), data);\n        \n        // Call custom onSuccess if provided\n        mutationOptions?.onSuccess?.(data, variables, undefined);\n      },\n      ...mutationOptions,\n    });\n  };\n\n  /**\n   * Hook to create multiple records\n   */\n  const useCreateMany = (\n    mutationOptions?: UseMutationOptions<T[], Error, Record<string, any>[]>\n  ) => {\n    const queryClient = useQueryClient();\n\n    return useMutation({\n      mutationFn: (data: Record<string, any>[]) => service.createMany(data),\n      onSuccess: (data, variables) => {\n        // Invalidate and refetch list queries\n        queryClient.invalidateQueries({ queryKey: queryKeys.lists() });\n        queryClient.invalidateQueries({ queryKey: queryKeys.count() });\n        \n        // Add the new items to the cache\n        data.forEach(item => {\n          queryClient.setQueryData(queryKeys.detail(item.id), item);\n        });\n        \n        // Call custom onSuccess if provided\n        mutationOptions?.onSuccess?.(data, variables, undefined);\n      },\n      ...mutationOptions,\n    });\n  };\n\n  /**\n   * Hook to update a record\n   */\n  const useUpdate = (\n    mutationOptions?: UseMutationOptions<T, Error, { id: string | number; data: Record<string, any> }>\n  ) => {\n    const queryClient = useQueryClient();\n\n    return useMutation({\n      mutationFn: ({ id, data }: { id: string | number; data: Record<string, any> }) => \n        service.update(id, data),\n      onSuccess: (data, variables) => {\n        // Update the item in the cache\n        queryClient.setQueryData(queryKeys.detail(variables.id), data);\n        \n        // Invalidate list queries to ensure consistency\n        queryClient.invalidateQueries({ queryKey: queryKeys.lists() });\n        \n        // Call custom onSuccess if provided\n        mutationOptions?.onSuccess?.(data, variables, undefined);\n      },\n      ...mutationOptions,\n    });\n  };\n\n  /**\n   * Hook to update multiple records\n   */\n  const useUpdateMany = (\n    mutationOptions?: UseMutationOptions<T[], Error, { id: string | number; data: Record<string, any> }[]>\n  ) => {\n    const queryClient = useQueryClient();\n\n    return useMutation({\n      mutationFn: (updates: { id: string | number; data: Record<string, any> }[]) => \n        service.updateMany(updates),\n      onSuccess: (data, variables) => {\n        // Update items in the cache\n        data.forEach((item, index) => {\n          queryClient.setQueryData(queryKeys.detail(variables[index].id), item);\n        });\n        \n        // Invalidate list queries to ensure consistency\n        queryClient.invalidateQueries({ queryKey: queryKeys.lists() });\n        \n        // Call custom onSuccess if provided\n        mutationOptions?.onSuccess?.(data, variables, undefined);\n      },\n      ...mutationOptions,\n    });\n  };\n\n  /**\n   * Hook to upsert a record\n   */\n  const useUpsert = (\n    mutationOptions?: UseMutationOptions<T, Error, { data: Record<string, any>; onConflict?: string }>\n  ) => {\n    const queryClient = useQueryClient();\n\n    return useMutation({\n      mutationFn: ({ data, onConflict }: { data: Record<string, any>; onConflict?: string }) => \n        service.upsert(data, onConflict),\n      onSuccess: (data, variables) => {\n        // Update the item in the cache\n        queryClient.setQueryData(queryKeys.detail(data.id), data);\n        \n        // Invalidate list queries to ensure consistency\n        queryClient.invalidateQueries({ queryKey: queryKeys.lists() });\n        queryClient.invalidateQueries({ queryKey: queryKeys.count() });\n        \n        // Call custom onSuccess if provided\n        mutationOptions?.onSuccess?.(data, variables, undefined);\n      },\n      ...mutationOptions,\n    });\n  };\n\n  /**\n   * Hook to delete a record\n   */\n  const useDelete = (\n    mutationOptions?: UseMutationOptions<void, Error, string | number>\n  ) => {\n    const queryClient = useQueryClient();\n\n    return useMutation({\n      mutationFn: (id: string | number) => service.delete(id),\n      onSuccess: (data, id) => {\n        // Remove the item from the cache\n        queryClient.removeQueries({ queryKey: queryKeys.detail(id) });\n        \n        // Invalidate list queries to ensure consistency\n        queryClient.invalidateQueries({ queryKey: queryKeys.lists() });\n        queryClient.invalidateQueries({ queryKey: queryKeys.count() });\n        \n        // Call custom onSuccess if provided\n        mutationOptions?.onSuccess?.(data, id, undefined);\n      },\n      ...mutationOptions,\n    });\n  };\n\n  /**\n   * Hook to bulk delete records\n   */\n  const useBulkDelete = (\n    mutationOptions?: UseMutationOptions<void, Error, (string | number)[]>\n  ) => {\n    const queryClient = useQueryClient();\n\n    return useMutation({\n      mutationFn: (ids: (string | number)[]) => service.bulkDelete(ids),\n      onSuccess: (data, ids) => {\n        // Remove items from the cache\n        ids.forEach(id => {\n          queryClient.removeQueries({ queryKey: queryKeys.detail(id) });\n        });\n        \n        // Invalidate list queries to ensure consistency\n        queryClient.invalidateQueries({ queryKey: queryKeys.lists() });\n        queryClient.invalidateQueries({ queryKey: queryKeys.count() });\n        \n        // Call custom onSuccess if provided\n        mutationOptions?.onSuccess?.(data, ids, undefined);\n      },\n      ...mutationOptions,\n    });\n  };\n\n  /**\n   * Hook for optimistic updates\n   */\n  const useOptimisticUpdate = () => {\n    const queryClient = useQueryClient();\n\n    const optimisticUpdate = (\n      id: string | number,\n      updater: (old: T | undefined) => T\n    ) => {\n      queryClient.setQueryData(queryKeys.detail(id), updater);\n    };\n\n    const rollbackOptimisticUpdate = (id: string | number) => {\n      queryClient.invalidateQueries({ queryKey: queryKeys.detail(id) });\n    };\n\n    return { optimisticUpdate, rollbackOptimisticUpdate };\n  };\n\n  /**\n   * Hook to invalidate all queries for this service\n   */\n  const useInvalidateAll = () => {\n    const queryClient = useQueryClient();\n\n    const invalidateAll = () => {\n      queryClient.invalidateQueries({ queryKey: queryKeys.all });\n    };\n\n    const invalidateLists = () => {\n      queryClient.invalidateQueries({ queryKey: queryKeys.lists() });\n    };\n\n    const invalidateDetail = (id: string | number) => {\n      queryClient.invalidateQueries({ queryKey: queryKeys.detail(id) });\n    };\n\n    return { invalidateAll, invalidateLists, invalidateDetail };\n  };\n\n  /**\n   * Hook to prefetch data\n   */\n  const usePrefetch = () => {\n    const queryClient = useQueryClient();\n\n    const prefetchList = (options?: QueryOptions) => {\n      return queryClient.prefetchQuery({\n        queryKey: queryKeys.list(options?.filters),\n        queryFn: () => service.getAll(options),\n        staleTime: 5 * 60 * 1000,\n      });\n    };\n\n    const prefetchDetail = (id: string | number, select?: string) => {\n      return queryClient.prefetchQuery({\n        queryKey: queryKeys.detail(id),\n        queryFn: () => service.getById(id, select),\n        staleTime: 5 * 60 * 1000,\n      });\n    };\n\n    return { prefetchList, prefetchDetail };\n  };\n\n  return {\n    // Query hooks\n    useList,\n    usePaginatedList,\n    useDetail,\n    useSearch,\n    useCount,\n    \n    // Mutation hooks\n    useCreate,\n    useCreateMany,\n    useUpdate,\n    useUpdateMany,\n    useUpsert,\n    useDelete,\n    useBulkDelete,\n    \n    // Utility hooks\n    useOptimisticUpdate,\n    useInvalidateAll,\n    usePrefetch,\n    \n    // Query keys for manual cache management\n    queryKeys,\n  };\n}\n\n/**\n * Factory function to create a complete set of hooks for a Supabase service\n */\nexport function createServiceHooks<T = any>(service: SupabaseService) {\n  return createSupabaseHooks<T>(service);\n}\n\n/**\n * Generic error handler for React Query\n */\nexport const defaultQueryErrorHandler = (error: Error) => {\n  console.error('Query error:', error);\n  // You can integrate with your toast/notification system here\n};\n\n/**\n * Default React Query configuration for Supabase services\n */\nexport const defaultQueryConfig = {\n  queries: {\n    staleTime: 5 * 60 * 1000, // 5 minutes\n    cacheTime: 10 * 60 * 1000, // 10 minutes\n    retry: (failureCount: number, error: any) => {\n      // Don't retry on 4xx errors (client errors)\n      if (error?.status >= 400 && error?.status < 500) {\n        return false;\n      }\n      // Retry up to 3 times for other errors\n      return failureCount < 3;\n    },\n    refetchOnWindowFocus: false,\n    refetchOnReconnect: true,\n  },\n  mutations: {\n    retry: (failureCount: number, error: any) => {\n      // Don't retry on 4xx errors (client errors)\n      if (error?.status >= 400 && error?.status < 500) {\n        return false;\n      }\n      // Retry once for other errors\n      return failureCount < 1;\n    },\n  },\n};\n","import { useCallback, useMemo } from 'react';\nimport { useQueryClient } from '@tanstack/react-query';\n\n/**\n * Advanced bulk operations hook for React Query\n * Provides optimistic updates and error handling for bulk operations\n */\nexport interface BulkOperationOptions<T = any> {\n  onSuccess?: (results: T[]) => void;\n  onError?: (error: Error) => void;\n  onSettled?: () => void;\n  optimisticUpdate?: boolean;\n  invalidateQueries?: string[][];\n}\n\nexport interface BulkExportOptions {\n  format?: 'csv' | 'json' | 'xlsx';\n  filename?: string;\n  columns?: string[];\n  includeHeaders?: boolean;\n}\n\nexport function useBulkOperations<T = any>(resource: string) {\n  const queryClient = useQueryClient();\n\n  const bulkUpdate = useCallback(\n    async (\n      items: Array<{ id: string | number; data: Partial<T> }>,\n      mutationFn: (item: { id: string | number; data: Partial<T> }) => Promise<T>,\n      options: BulkOperationOptions<T> = {}\n    ) => {\n      const { onSuccess, onError, onSettled, optimisticUpdate = true, invalidateQueries = [] } = options;\n\n      try {\n        // Optimistic update\n        if (optimisticUpdate) {\n          queryClient.setQueryData([resource], (oldData: T[] | undefined) => {\n            if (!oldData) return oldData;\n            return oldData.map((item: any) => {\n              const update = items.find(u => u.id === item.id);\n              return update ? { ...item, ...update.data } : item;\n            });\n          });\n        }\n\n        // Execute bulk operations\n        const results = await Promise.all(items.map(mutationFn));\n\n        // Invalidate related queries\n        invalidateQueries.forEach(queryKey => {\n          queryClient.invalidateQueries({ queryKey });\n        });\n\n        onSuccess?.(results);\n        return results;\n      } catch (error) {\n        // Revert optimistic update on error\n        if (optimisticUpdate) {\n          queryClient.invalidateQueries({ queryKey: [resource] });\n        }\n        onError?.(error as Error);\n        throw error;\n      } finally {\n        onSettled?.();\n      }\n    },\n    [queryClient, resource]\n  );\n\n  const bulkDelete = useCallback(\n    async (\n      ids: Array<string | number>,\n      mutationFn: (id: string | number) => Promise<void>,\n      options: BulkOperationOptions = {}\n    ) => {\n      const { onSuccess, onError, onSettled, optimisticUpdate = true, invalidateQueries = [] } = options;\n\n      try {\n        // Optimistic update\n        if (optimisticUpdate) {\n          queryClient.setQueryData([resource], (oldData: T[] | undefined) => {\n            if (!oldData) return oldData;\n            return oldData.filter((item: any) => !ids.includes(item.id));\n          });\n        }\n\n        // Execute bulk deletions\n        await Promise.all(ids.map(mutationFn));\n\n        // Invalidate related queries\n        invalidateQueries.forEach(queryKey => {\n          queryClient.invalidateQueries({ queryKey });\n        });\n\n        onSuccess?.(ids as any);\n        return ids;\n      } catch (error) {\n        // Revert optimistic update on error\n        if (optimisticUpdate) {\n          queryClient.invalidateQueries({ queryKey: [resource] });\n        }\n        onError?.(error as Error);\n        throw error;\n      } finally {\n        onSettled?.();\n      }\n    },\n    [queryClient, resource]\n  );\n\n  const bulkExport = useCallback(\n    (data: T[], options: BulkExportOptions = {}) => {\n      const {\n        format = 'csv',\n        filename = `${resource}-export`,\n        columns,\n        includeHeaders = true\n      } = options;\n\n      if (!data || data.length === 0) {\n        throw new Error('No data to export');\n      }\n\n      switch (format) {\n        case 'csv':\n          return exportToCSV(data, { filename, columns, includeHeaders });\n        case 'json':\n          return exportToJSON(data, { filename });\n        default:\n          throw new Error(`Unsupported export format: ${format}`);\n      }\n    },\n    [resource]\n  );\n\n  return useMemo(\n    () => ({\n      bulkUpdate,\n      bulkDelete,\n      bulkExport,\n    }),\n    [bulkUpdate, bulkDelete, bulkExport]\n  );\n}\n\n// Helper functions for export\nfunction exportToCSV<T>(\n  data: T[],\n  options: { filename: string; columns?: string[]; includeHeaders: boolean }\n) {\n  const { filename, columns, includeHeaders } = options;\n  \n  if (data.length === 0) return;\n\n  const firstItem = data[0] as any;\n  const headers = columns || Object.keys(firstItem);\n  \n  let csvContent = '';\n  \n  // Add headers\n  if (includeHeaders) {\n    csvContent += headers.join(',') + '\\n';\n  }\n  \n  // Add data rows\n  data.forEach((item: any) => {\n    const row = headers.map(header => {\n      const value = item[header];\n      // Escape commas and quotes in CSV\n      if (typeof value === 'string' && (value.includes(',') || value.includes('\"'))) {\n        return `\"${value.replace(/\"/g, '\"\"')}\"`;\n      }\n      return value ?? '';\n    });\n    csvContent += row.join(',') + '\\n';\n  });\n\n  // Download file\n  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n  const link = document.createElement('a');\n  const url = URL.createObjectURL(blob);\n  link.setAttribute('href', url);\n  link.setAttribute('download', `${filename}.csv`);\n  link.style.visibility = 'hidden';\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n\nfunction exportToJSON<T>(data: T[], options: { filename: string }) {\n  const { filename } = options;\n  \n  const jsonContent = JSON.stringify(data, null, 2);\n  const blob = new Blob([jsonContent], { type: 'application/json;charset=utf-8;' });\n  const link = document.createElement('a');\n  const url = URL.createObjectURL(blob);\n  link.setAttribute('href', url);\n  link.setAttribute('download', `${filename}.json`);\n  link.style.visibility = 'hidden';\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n\n/**\n * Hook for managing saved queries and filters\n */\nexport interface SavedQuery {\n  id: string;\n  label: string;\n  filter?: Record<string, any>;\n  sort?: { field: string; order: 'ASC' | 'DESC' };\n  columns?: string[];\n  perPage?: number;\n}\n\nexport function useSavedQueries(resource: string) {\n  const storageKey = `${resource}.savedQueries`;\n\n  const getSavedQueries = useCallback((): SavedQuery[] => {\n    try {\n      const saved = localStorage.getItem(storageKey);\n      return saved ? JSON.parse(saved) : [];\n    } catch {\n      return [];\n    }\n  }, [storageKey]);\n\n  const saveQuery = useCallback((query: Omit<SavedQuery, 'id'>) => {\n    const queries = getSavedQueries();\n    const newQuery: SavedQuery = {\n      ...query,\n      id: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\n    };\n    const updated = [...queries, newQuery];\n    localStorage.setItem(storageKey, JSON.stringify(updated));\n    return newQuery;\n  }, [getSavedQueries, storageKey]);\n\n  const deleteQuery = useCallback((id: string) => {\n    const queries = getSavedQueries();\n    const updated = queries.filter(q => q.id !== id);\n    localStorage.setItem(storageKey, JSON.stringify(updated));\n  }, [getSavedQueries, storageKey]);\n\n  const updateQuery = useCallback((id: string, updates: Partial<SavedQuery>) => {\n    const queries = getSavedQueries();\n    const updated = queries.map(q => q.id === id ? { ...q, ...updates } : q);\n    localStorage.setItem(storageKey, JSON.stringify(updated));\n  }, [getSavedQueries, storageKey]);\n\n  return useMemo(\n    () => ({\n      queries: getSavedQueries(),\n      saveQuery,\n      deleteQuery,\n      updateQuery,\n    }),\n    [getSavedQueries, saveQuery, deleteQuery, updateQuery]\n  );\n}\n","import { useState, useCallback, useMemo } from 'react';\n\n/**\n * Advanced data table state management hook\n * Provides column management, sorting, filtering, and pagination\n */\nexport interface DataTableColumn {\n  id: string;\n  label: string;\n  sortable?: boolean;\n  filterable?: boolean;\n  hidden?: boolean;\n  width?: number;\n  align?: 'left' | 'center' | 'right';\n}\n\nexport interface DataTableSort {\n  field: string;\n  order: 'ASC' | 'DESC';\n}\n\nexport interface DataTableFilter {\n  field: string;\n  operator: 'equals' | 'contains' | 'startsWith' | 'endsWith' | 'gt' | 'lt' | 'gte' | 'lte';\n  value: any;\n}\n\nexport interface DataTablePagination {\n  page: number;\n  perPage: number;\n  total?: number;\n}\n\nexport interface DataTableState {\n  columns: DataTableColumn[];\n  sort?: DataTableSort;\n  filters: DataTableFilter[];\n  pagination: DataTablePagination;\n  selectedIds: (string | number)[];\n  hiddenColumns: string[];\n  columnOrder: string[];\n}\n\nexport interface UseDataTableOptions {\n  defaultColumns: DataTableColumn[];\n  defaultSort?: DataTableSort;\n  defaultPerPage?: number;\n  storageKey?: string;\n  persistState?: boolean;\n}\n\nexport function useDataTable(options: UseDataTableOptions) {\n  const {\n    defaultColumns,\n    defaultSort,\n    defaultPerPage = 25,\n    storageKey,\n    persistState = true\n  } = options;\n\n  // Load initial state from localStorage if available\n  const getInitialState = useCallback((): DataTableState => {\n    if (persistState && storageKey) {\n      try {\n        const saved = localStorage.getItem(`dataTable.${storageKey}`);\n        if (saved) {\n          const parsed = JSON.parse(saved);\n          return {\n            columns: defaultColumns,\n            sort: parsed.sort || defaultSort,\n            filters: parsed.filters || [],\n            pagination: {\n              page: 1,\n              perPage: parsed.pagination?.perPage || defaultPerPage,\n              total: 0\n            },\n            selectedIds: [],\n            hiddenColumns: parsed.hiddenColumns || [],\n            columnOrder: parsed.columnOrder || defaultColumns.map(c => c.id)\n          };\n        }\n      } catch {\n        // Fall back to default state if parsing fails\n      }\n    }\n\n    return {\n      columns: defaultColumns,\n      sort: defaultSort,\n      filters: [],\n      pagination: { page: 1, perPage: defaultPerPage, total: 0 },\n      selectedIds: [],\n      hiddenColumns: [],\n      columnOrder: defaultColumns.map(c => c.id)\n    };\n  }, [defaultColumns, defaultSort, defaultPerPage, persistState, storageKey]);\n\n  const [state, setState] = useState<DataTableState>(getInitialState);\n\n  // Persist state to localStorage\n  const persistStateToStorage = useCallback((newState: DataTableState) => {\n    if (persistState && storageKey) {\n      try {\n        const toSave = {\n          sort: newState.sort,\n          filters: newState.filters,\n          pagination: { perPage: newState.pagination.perPage },\n          hiddenColumns: newState.hiddenColumns,\n          columnOrder: newState.columnOrder\n        };\n        localStorage.setItem(`dataTable.${storageKey}`, JSON.stringify(toSave));\n      } catch {\n        // Ignore storage errors\n      }\n    }\n  }, [persistState, storageKey]);\n\n  // Column management\n  const showColumn = useCallback((columnId: string) => {\n    setState(prev => {\n      const newState = {\n        ...prev,\n        hiddenColumns: prev.hiddenColumns.filter(id => id !== columnId)\n      };\n      persistStateToStorage(newState);\n      return newState;\n    });\n  }, [persistStateToStorage]);\n\n  const hideColumn = useCallback((columnId: string) => {\n    setState(prev => {\n      const newState = {\n        ...prev,\n        hiddenColumns: [...prev.hiddenColumns, columnId]\n      };\n      persistStateToStorage(newState);\n      return newState;\n    });\n  }, [persistStateToStorage]);\n\n  const reorderColumns = useCallback((newOrder: string[]) => {\n    setState(prev => {\n      const newState = {\n        ...prev,\n        columnOrder: newOrder\n      };\n      persistStateToStorage(newState);\n      return newState;\n    });\n  }, [persistStateToStorage]);\n\n  const resetColumns = useCallback(() => {\n    setState(prev => {\n      const newState = {\n        ...prev,\n        hiddenColumns: [],\n        columnOrder: defaultColumns.map(c => c.id)\n      };\n      persistStateToStorage(newState);\n      return newState;\n    });\n  }, [defaultColumns, persistStateToStorage]);\n\n  // Sorting\n  const setSort = useCallback((field: string, order?: 'ASC' | 'DESC') => {\n    setState(prev => {\n      const currentSort = prev.sort;\n      let newOrder: 'ASC' | 'DESC' = 'ASC';\n      \n      if (order) {\n        newOrder = order;\n      } else if (currentSort?.field === field) {\n        newOrder = currentSort.order === 'ASC' ? 'DESC' : 'ASC';\n      }\n\n      const newState = {\n        ...prev,\n        sort: { field, order: newOrder },\n        pagination: { ...prev.pagination, page: 1 } // Reset to first page\n      };\n      persistStateToStorage(newState);\n      return newState;\n    });\n  }, [persistStateToStorage]);\n\n  const clearSort = useCallback(() => {\n    setState(prev => {\n      const newState = {\n        ...prev,\n        sort: undefined\n      };\n      persistStateToStorage(newState);\n      return newState;\n    });\n  }, [persistStateToStorage]);\n\n  // Filtering\n  const addFilter = useCallback((filter: DataTableFilter) => {\n    setState(prev => {\n      const newState = {\n        ...prev,\n        filters: [...prev.filters.filter(f => f.field !== filter.field), filter],\n        pagination: { ...prev.pagination, page: 1 } // Reset to first page\n      };\n      persistStateToStorage(newState);\n      return newState;\n    });\n  }, [persistStateToStorage]);\n\n  const removeFilter = useCallback((field: string) => {\n    setState(prev => {\n      const newState = {\n        ...prev,\n        filters: prev.filters.filter(f => f.field !== field),\n        pagination: { ...prev.pagination, page: 1 } // Reset to first page\n      };\n      persistStateToStorage(newState);\n      return newState;\n    });\n  }, [persistStateToStorage]);\n\n  const clearFilters = useCallback(() => {\n    setState(prev => {\n      const newState = {\n        ...prev,\n        filters: [],\n        pagination: { ...prev.pagination, page: 1 } // Reset to first page\n      };\n      persistStateToStorage(newState);\n      return newState;\n    });\n  }, [persistStateToStorage]);\n\n  // Pagination\n  const setPage = useCallback((page: number) => {\n    setState(prev => ({\n      ...prev,\n      pagination: { ...prev.pagination, page }\n    }));\n  }, []);\n\n  const setPerPage = useCallback((perPage: number) => {\n    setState(prev => {\n      const newState = {\n        ...prev,\n        pagination: { ...prev.pagination, perPage, page: 1 }\n      };\n      persistStateToStorage(newState);\n      return newState;\n    });\n  }, [persistStateToStorage]);\n\n  const setTotal = useCallback((total: number) => {\n    setState(prev => ({\n      ...prev,\n      pagination: { ...prev.pagination, total }\n    }));\n  }, []);\n\n  // Selection\n  const selectItem = useCallback((id: string | number) => {\n    setState(prev => ({\n      ...prev,\n      selectedIds: [...prev.selectedIds, id]\n    }));\n  }, []);\n\n  const deselectItem = useCallback((id: string | number) => {\n    setState(prev => ({\n      ...prev,\n      selectedIds: prev.selectedIds.filter(selectedId => selectedId !== id)\n    }));\n  }, []);\n\n  const toggleItem = useCallback((id: string | number) => {\n    setState(prev => ({\n      ...prev,\n      selectedIds: prev.selectedIds.includes(id)\n        ? prev.selectedIds.filter(selectedId => selectedId !== id)\n        : [...prev.selectedIds, id]\n    }));\n  }, []);\n\n  const selectAll = useCallback((ids: (string | number)[]) => {\n    setState(prev => ({\n      ...prev,\n      selectedIds: ids\n    }));\n  }, []);\n\n  const clearSelection = useCallback(() => {\n    setState(prev => ({\n      ...prev,\n      selectedIds: []\n    }));\n  }, []);\n\n  // Computed values\n  const visibleColumns = useMemo(() => {\n    return state.columnOrder\n      .map(id => state.columns.find(col => col.id === id))\n      .filter((col): col is DataTableColumn => \n        col !== undefined && !state.hiddenColumns.includes(col.id)\n      );\n  }, [state.columns, state.columnOrder, state.hiddenColumns]);\n\n  const hasFilters = useMemo(() => state.filters.length > 0, [state.filters]);\n  const hasSelection = useMemo(() => state.selectedIds.length > 0, [state.selectedIds]);\n\n  // Reset all state\n  const reset = useCallback(() => {\n    const newState = getInitialState();\n    setState(newState);\n    persistStateToStorage(newState);\n  }, [getInitialState, persistStateToStorage]);\n\n  return {\n    // State\n    state,\n    visibleColumns,\n    hasFilters,\n    hasSelection,\n\n    // Column management\n    showColumn,\n    hideColumn,\n    reorderColumns,\n    resetColumns,\n\n    // Sorting\n    setSort,\n    clearSort,\n\n    // Filtering\n    addFilter,\n    removeFilter,\n    clearFilters,\n\n    // Pagination\n    setPage,\n    setPerPage,\n    setTotal,\n\n    // Selection\n    selectItem,\n    deselectItem,\n    toggleItem,\n    selectAll,\n    clearSelection,\n\n    // Utilities\n    reset\n  };\n}\n\n/**\n * Hook for managing column visibility and ordering\n */\nexport function useColumnManager(columns: DataTableColumn[], storageKey?: string) {\n  const [hiddenColumns, setHiddenColumns] = useState<string[]>(() => {\n    if (storageKey) {\n      try {\n        const saved = localStorage.getItem(`columnManager.${storageKey}`);\n        return saved ? JSON.parse(saved) : [];\n      } catch {\n        return [];\n      }\n    }\n    return [];\n  });\n\n  const [columnOrder, setColumnOrder] = useState<string[]>(() => {\n    if (storageKey) {\n      try {\n        const saved = localStorage.getItem(`columnOrder.${storageKey}`);\n        return saved ? JSON.parse(saved) : columns.map(c => c.id);\n      } catch {\n        return columns.map(c => c.id);\n      }\n    }\n    return columns.map(c => c.id);\n  });\n\n  const persistState = useCallback(() => {\n    if (storageKey) {\n      try {\n        localStorage.setItem(`columnManager.${storageKey}`, JSON.stringify(hiddenColumns));\n        localStorage.setItem(`columnOrder.${storageKey}`, JSON.stringify(columnOrder));\n      } catch {\n        // Ignore storage errors\n      }\n    }\n  }, [storageKey, hiddenColumns, columnOrder]);\n\n  const toggleColumn = useCallback((columnId: string) => {\n    setHiddenColumns(prev => {\n      const newHidden = prev.includes(columnId)\n        ? prev.filter(id => id !== columnId)\n        : [...prev, columnId];\n      \n      // Persist after state update\n      setTimeout(() => persistState(), 0);\n      return newHidden;\n    });\n  }, [persistState]);\n\n  const reorderColumns = useCallback((newOrder: string[]) => {\n    setColumnOrder(newOrder);\n    setTimeout(() => persistState(), 0);\n  }, [persistState]);\n\n  const resetColumns = useCallback(() => {\n    setHiddenColumns([]);\n    setColumnOrder(columns.map(c => c.id));\n    setTimeout(() => persistState(), 0);\n  }, [columns, persistState]);\n\n  const visibleColumns = useMemo(() => {\n    return columnOrder\n      .map(id => columns.find(col => col.id === id))\n      .filter((col): col is DataTableColumn => \n        col !== undefined && !hiddenColumns.includes(col.id)\n      );\n  }, [columns, columnOrder, hiddenColumns]);\n\n  return {\n    hiddenColumns,\n    columnOrder,\n    visibleColumns,\n    toggleColumn,\n    reorderColumns,\n    resetColumns\n  };\n}\n","import { useQuery, useMutation, useQueryClient, UseQueryOptions, UseMutationOptions } from '@tanstack/react-query';\nimport { useCallback, useMemo } from 'react';\n\n/**\n * Advanced React Query patterns with optimistic updates, error handling, and caching strategies\n */\n\nexport interface OptimisticUpdateOptions<TData, TVariables> {\n  updateFn: (oldData: TData | undefined, variables: TVariables) => TData | undefined;\n  rollbackOnError?: boolean;\n}\n\nexport interface AdvancedQueryOptions<TData, TError, TQueryKey> extends UseQueryOptions<TData, TError, TData, TQueryKey> {\n  optimisticUpdate?: OptimisticUpdateOptions<TData, any>;\n  invalidateOnWindowFocus?: boolean;\n  backgroundRefetch?: boolean;\n  retryOnNetworkError?: boolean;\n}\n\nexport interface AdvancedMutationOptions<TData, TError, TVariables> extends UseMutationOptions<TData, TError, TVariables> {\n  optimisticUpdate?: OptimisticUpdateOptions<any, TVariables>;\n  invalidateQueries?: string[][];\n  updateQueries?: Array<{\n    queryKey: string[];\n    updateFn: (oldData: any, newData: TData, variables: TVariables) => any;\n  }>;\n}\n\n/**\n * Enhanced useQuery with advanced caching and error handling\n */\nexport function useAdvancedQuery<TData, TError = Error, TQueryKey extends readonly unknown[] = readonly string[]>(\n  queryKey: TQueryKey,\n  queryFn: () => Promise<TData>,\n  options: AdvancedQueryOptions<TData, TError, TQueryKey> = {}\n) {\n  const {\n    invalidateOnWindowFocus = false,\n    backgroundRefetch = true,\n    retryOnNetworkError = true,\n    ...queryOptions\n  } = options;\n\n  return useQuery({\n    queryKey,\n    queryFn,\n    staleTime: 5 * 60 * 1000, // 5 minutes default\n    gcTime: 10 * 60 * 1000, // 10 minutes default (was cacheTime)\n    refetchOnWindowFocus: invalidateOnWindowFocus,\n    refetchInBackground: backgroundRefetch,\n    retry: (failureCount, error: any) => {\n      // Don't retry on 4xx errors (client errors)\n      if (error?.status >= 400 && error?.status < 500) {\n        return false;\n      }\n      \n      // Retry network errors if enabled\n      if (retryOnNetworkError && (error?.code === 'NETWORK_ERROR' || !navigator.onLine)) {\n        return failureCount < 3;\n      }\n      \n      // Default retry logic\n      return failureCount < 3;\n    },\n    retryDelay: (attemptIndex) => Math.min(1000 * 2 ** attemptIndex, 30000),\n    ...queryOptions,\n  });\n}\n\n/**\n * Enhanced useMutation with optimistic updates and advanced error handling\n */\nexport function useAdvancedMutation<TData, TError = Error, TVariables = void>(\n  mutationFn: (variables: TVariables) => Promise<TData>,\n  options: AdvancedMutationOptions<TData, TError, TVariables> = {}\n) {\n  const queryClient = useQueryClient();\n  const {\n    optimisticUpdate,\n    invalidateQueries = [],\n    updateQueries = [],\n    onSuccess,\n    onError,\n    onSettled,\n    ...mutationOptions\n  } = options;\n\n  return useMutation({\n    mutationFn,\n    onMutate: async (variables) => {\n      // Apply optimistic update if configured\n      if (optimisticUpdate) {\n        const { updateFn } = optimisticUpdate;\n        \n        // Cancel outgoing refetches\n        await queryClient.cancelQueries();\n        \n        // Snapshot previous values\n        const previousData = queryClient.getQueryData(invalidateQueries[0] || []);\n        \n        // Optimistically update\n        if (invalidateQueries[0]) {\n          queryClient.setQueryData(invalidateQueries[0], (oldData) => \n            updateFn(oldData, variables)\n          );\n        }\n        \n        return { previousData };\n      }\n    },\n    onSuccess: (data, variables, context) => {\n      // Update specific queries\n      updateQueries.forEach(({ queryKey, updateFn }) => {\n        queryClient.setQueryData(queryKey, (oldData) => \n          updateFn(oldData, data, variables)\n        );\n      });\n      \n      // Invalidate queries\n      invalidateQueries.forEach(queryKey => {\n        queryClient.invalidateQueries({ queryKey });\n      });\n      \n      onSuccess?.(data, variables, context);\n    },\n    onError: (error, variables, context) => {\n      // Rollback optimistic update on error\n      if (optimisticUpdate?.rollbackOnError !== false && context?.previousData && invalidateQueries[0]) {\n        queryClient.setQueryData(invalidateQueries[0], context.previousData);\n      }\n      \n      onError?.(error, variables, context);\n    },\n    onSettled: (data, error, variables, context) => {\n      // Always refetch after mutation settles to ensure consistency\n      invalidateQueries.forEach(queryKey => {\n        queryClient.invalidateQueries({ queryKey });\n      });\n      \n      onSettled?.(data, error, variables, context);\n    },\n    ...mutationOptions,\n  });\n}\n\n/**\n * Hook for managing infinite queries with advanced features\n */\nexport function useAdvancedInfiniteQuery<TData, TError = Error>(\n  queryKey: readonly unknown[],\n  queryFn: ({ pageParam }: { pageParam: unknown }) => Promise<TData>,\n  options: {\n    getNextPageParam?: (lastPage: TData, allPages: TData[]) => unknown;\n    getPreviousPageParam?: (firstPage: TData, allPages: TData[]) => unknown;\n    initialPageParam?: unknown;\n    maxPages?: number;\n    staleTime?: number;\n    gcTime?: number;\n  } = {}\n) {\n  const {\n    getNextPageParam = () => undefined,\n    getPreviousPageParam = () => undefined,\n    initialPageParam = 1,\n    maxPages = 10,\n    staleTime = 5 * 60 * 1000,\n    gcTime = 10 * 60 * 1000,\n  } = options;\n\n  return useQuery({\n    queryKey,\n    queryFn: () => queryFn({ pageParam: initialPageParam }),\n    staleTime,\n    gcTime,\n    // Note: useInfiniteQuery would be used here in a real implementation\n    // This is a simplified version for demonstration\n  });\n}\n\n/**\n * Hook for managing dependent queries\n */\nexport function useDependentQueries<T1, T2>(\n  firstQuery: {\n    queryKey: readonly unknown[];\n    queryFn: () => Promise<T1>;\n    options?: UseQueryOptions<T1>;\n  },\n  secondQuery: {\n    queryKey: (data: T1) => readonly unknown[];\n    queryFn: (data: T1) => Promise<T2>;\n    options?: UseQueryOptions<T2>;\n  }\n) {\n  const first = useQuery({\n    queryKey: firstQuery.queryKey,\n    queryFn: firstQuery.queryFn,\n    ...firstQuery.options,\n  });\n\n  const second = useQuery({\n    queryKey: first.data ? secondQuery.queryKey(first.data) : ['dependent-disabled'],\n    queryFn: () => first.data ? secondQuery.queryFn(first.data) : Promise.reject('No data'),\n    enabled: !!first.data && !first.isError,\n    ...secondQuery.options,\n  });\n\n  return {\n    first,\n    second,\n    isLoading: first.isLoading || (first.data && second.isLoading),\n    isError: first.isError || second.isError,\n    error: first.error || second.error,\n    data: second.data,\n  };\n}\n\n/**\n * Hook for managing query synchronization across components\n */\nexport function useQuerySync<TData>(\n  queryKey: readonly unknown[],\n  onDataChange?: (data: TData | undefined) => void\n) {\n  const queryClient = useQueryClient();\n\n  const data = queryClient.getQueryData<TData>(queryKey);\n\n  const setData = useCallback((updater: TData | ((prev: TData | undefined) => TData)) => {\n    queryClient.setQueryData(queryKey, updater);\n  }, [queryClient, queryKey]);\n\n  const invalidate = useCallback(() => {\n    queryClient.invalidateQueries({ queryKey });\n  }, [queryClient, queryKey]);\n\n  const refetch = useCallback(() => {\n    return queryClient.refetchQueries({ queryKey });\n  }, [queryClient, queryKey]);\n\n  // Call onDataChange when data changes\n  useMemo(() => {\n    onDataChange?.(data);\n  }, [data, onDataChange]);\n\n  return {\n    data,\n    setData,\n    invalidate,\n    refetch,\n  };\n}\n\n/**\n * Hook for managing background sync and offline support\n */\nexport function useOfflineSync<TData>(\n  queryKey: readonly unknown[],\n  queryFn: () => Promise<TData>,\n  options: {\n    syncInterval?: number;\n    retryOnReconnect?: boolean;\n    persistToStorage?: boolean;\n    storageKey?: string;\n  } = {}\n) {\n  const {\n    syncInterval = 30000, // 30 seconds\n    retryOnReconnect = true,\n    persistToStorage = false,\n    storageKey\n  } = options;\n\n  const queryClient = useQueryClient();\n\n  // Load from storage on mount\n  useMemo(() => {\n    if (persistToStorage && storageKey) {\n      try {\n        const stored = localStorage.getItem(storageKey);\n        if (stored) {\n          const data = JSON.parse(stored);\n          queryClient.setQueryData(queryKey, data);\n        }\n      } catch {\n        // Ignore storage errors\n      }\n    }\n  }, [queryClient, queryKey, persistToStorage, storageKey]);\n\n  const query = useQuery({\n    queryKey,\n    queryFn,\n    staleTime: syncInterval,\n    refetchInterval: navigator.onLine ? syncInterval : false,\n    refetchIntervalInBackground: true,\n    retry: (failureCount, error: any) => {\n      // Don't retry if offline\n      if (!navigator.onLine) return false;\n      return failureCount < 3;\n    },\n  });\n\n  // Persist to storage when data changes\n  useMemo(() => {\n    if (persistToStorage && storageKey && query.data) {\n      try {\n        localStorage.setItem(storageKey, JSON.stringify(query.data));\n      } catch {\n        // Ignore storage errors\n      }\n    }\n  }, [query.data, persistToStorage, storageKey]);\n\n  // Refetch when coming back online\n  useMemo(() => {\n    if (retryOnReconnect) {\n      const handleOnline = () => {\n        queryClient.refetchQueries({ queryKey });\n      };\n\n      window.addEventListener('online', handleOnline);\n      return () => window.removeEventListener('online', handleOnline);\n    }\n  }, [queryClient, queryKey, retryOnReconnect]);\n\n  return query;\n}\n","import React, { useState, useCallback } from 'react';\nimport { LogOut, Settings, User, RotateCw, LoaderCircle, Menu } from 'lucide-react';\nimport { ThemeSwitch } from './theme/ThemeSwitch';\nimport { Button } from './button';\nimport { Avatar, AvatarFallback, AvatarImage } from './Avatar';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from './DropdownMenu';\n\n// Simple Link Component that uses anchor tags for maximum compatibility\nconst SafeLink = ({ to, children, className }: { to: string; children: React.ReactNode; className?: string }) => {\n  return (\n    <a href={to} className={className}>\n      {children}\n    </a>\n  );\n};\n\nexport interface AppHeaderProps {\n  // Branding\n  title: string;\n  logo?: {\n    light: string;\n    dark: string;\n  };\n  \n  // Navigation\n  navigationItems?: Array<{\n    label: string;\n    to: string;\n    isActive?: boolean;\n  }>;\n  \n  // User info\n  user?: {\n    name: string;\n    email?: string;\n    avatar?: string;\n  };\n  \n  // Actions\n  onLogout?: () => void;\n  onRefresh?: () => void;\n  onSettings?: () => void;\n  onUsers?: () => void;\n  onToggleSidebar?: () => void;\n  \n  // Loading state\n  isLoading?: boolean;\n  \n  // Custom menu items\n  customMenuItems?: React.ReactNode;\n}\n\nexport const AppHeader: React.FC<AppHeaderProps> = ({\n  title,\n  logo,\n  navigationItems = [],\n  user,\n  onLogout,\n  onRefresh,\n  onSettings,\n  onUsers,\n  onToggleSidebar,\n  isLoading = false,\n  customMenuItems,\n}) => {\n  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n\n  const handleUserMenuToggle = useCallback(() => {\n    setIsUserMenuOpen(prev => !prev);\n  }, []);\n\n  const handleUserMenuClose = useCallback(() => {\n    setIsUserMenuOpen(false);\n  }, []);\n\n  return (\n    <header className=\"bg-secondary border-b\">\n      <div className=\"px-4\">\n        <div className=\"flex justify-between items-center h-16\">\n          {/* Logo, Title, and Sidebar Toggle */}\n          <div className=\"flex items-center gap-2\">\n            {onToggleSidebar && (\n              <button\n                onClick={onToggleSidebar}\n                className=\"p-2 rounded-md text-muted-foreground hover:text-foreground hover:bg-accent focus:outline-none focus:ring-2 focus:ring-inset focus:ring-ring\"\n              >\n                <Menu className=\"h-5 w-5\" />\n              </button>\n            )}\n            <SafeLink\n              to=\"/\"\n              className=\"flex items-center gap-2 text-secondary-foreground no-underline hover:opacity-80 transition-opacity\"\n            >\n              {logo && (\n                <>\n                  <img\n                    className=\"[.light_&]:hidden h-6\"\n                    src={logo.dark}\n                    alt={title}\n                  />\n                  <img\n                    className=\"[.dark_&]:hidden h-6\"\n                    src={logo.light}\n                    alt={title}\n                  />\n                </>\n              )}\n              <h1 className=\"text-xl font-semibold\">{title}</h1>\n            </SafeLink>\n          </div>\n\n          {/* Navigation */}\n          {navigationItems.length > 0 && (\n            <nav className=\"hidden md:flex\">\n              {navigationItems.map((item) => (\n                <SafeLink\n                  key={item.to}\n                  to={item.to}\n                  className={`px-6 py-3 text-sm font-medium transition-colors border-b-2 ${\n                    item.isActive\n                      ? \"text-secondary-foreground border-secondary-foreground\"\n                      : \"text-secondary-foreground/70 border-transparent hover:text-secondary-foreground/80\"\n                  }`}\n                >\n                  {item.label}\n                </SafeLink>\n              ))}\n            </nav>\n          )}\n\n          {/* Right side actions */}\n          <div className=\"flex items-center gap-2\">\n            <ThemeSwitch />\n            \n            {onRefresh && (\n              <Button\n                onClick={onRefresh}\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"hidden sm:inline-flex\"\n              >\n                {isLoading ? (\n                  <LoaderCircle className=\"h-4 w-4 animate-spin\" />\n                ) : (\n                  <RotateCw className=\"h-4 w-4\" />\n                )}\n              </Button>\n            )}\n\n            {user && (\n              <DropdownMenu open={isUserMenuOpen} onOpenChange={setIsUserMenuOpen}>\n                <DropdownMenuTrigger asChild>\n                  <Button\n                    variant=\"ghost\"\n                    className=\"relative h-8 w-8 rounded-full\"\n                  >\n                    <Avatar className=\"h-8 w-8\">\n                      <AvatarImage src={user.avatar} role=\"presentation\" />\n                      <AvatarFallback>\n                        {user.name?.charAt(0)?.toUpperCase() || 'U'}\n                      </AvatarFallback>\n                    </Avatar>\n                  </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent className=\"w-56\" align=\"end\" forceMount>\n                  <DropdownMenuLabel className=\"font-normal\">\n                    <div className=\"flex flex-col space-y-1\">\n                      <p className=\"text-sm font-medium leading-none\">\n                        {user.name}\n                      </p>\n                      {user.email && (\n                        <p className=\"text-xs text-muted-foreground\">\n                          {user.email}\n                        </p>\n                      )}\n                    </div>\n                  </DropdownMenuLabel>\n                  <DropdownMenuSeparator />\n                  \n                  {onSettings && (\n                    <DropdownMenuItem onClick={onSettings} className=\"cursor-pointer\">\n                      <Settings className=\"mr-2 h-4 w-4\" />\n                      My info\n                    </DropdownMenuItem>\n                  )}\n                  \n                  {onUsers && (\n                    <DropdownMenuItem onClick={onUsers} className=\"cursor-pointer\">\n                      <User className=\"mr-2 h-4 w-4\" />\n                      Users\n                    </DropdownMenuItem>\n                  )}\n                  \n                  {customMenuItems}\n                  \n                  {(onSettings || onUsers || customMenuItems) && <DropdownMenuSeparator />}\n                  \n                  {onLogout && (\n                    <DropdownMenuItem onClick={onLogout} className=\"cursor-pointer\">\n                      <LogOut className=\"mr-2 h-4 w-4\" />\n                      Log out\n                    </DropdownMenuItem>\n                  )}\n                </DropdownMenuContent>\n              </DropdownMenu>\n            )}\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default AppHeader;\n","import * as React from \"react\";\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\";\nimport { cn } from \"../utils\";\n\nfunction Avatar({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Root>) {\n  return (\n    <AvatarPrimitive.Root\n      data-slot=\"avatar\"\n      className={cn(\n        \"relative flex size-8 shrink-0 overflow-hidden rounded-full\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AvatarImage({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Image>) {\n  return (\n    <AvatarPrimitive.Image\n      data-slot=\"avatar-image\"\n      className={cn(\"aspect-square size-full\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction AvatarFallback({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Fallback>) {\n  return (\n    <AvatarPrimitive.Fallback\n      data-slot=\"avatar-fallback\"\n      className={cn(\n        \"bg-primary text-primary-foreground flex size-full items-center justify-center rounded-full font-medium\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Avatar, AvatarImage, AvatarFallback };\n","import * as React from \"react\";\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\";\nimport { CheckIcon, ChevronRightIcon, CircleIcon } from \"lucide-react\";\nimport { cn } from \"../utils\";\n\nfunction DropdownMenu({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Root>) {\n  return <DropdownMenuPrimitive.Root data-slot=\"dropdown-menu\" {...props} />;\n}\n\nfunction DropdownMenuPortal({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Portal>) {\n  return (\n    <DropdownMenuPrimitive.Portal data-slot=\"dropdown-menu-portal\" {...props} />\n  );\n}\n\nfunction DropdownMenuTrigger({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Trigger>) {\n  return (\n    <DropdownMenuPrimitive.Trigger\n      data-slot=\"dropdown-menu-trigger\"\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuContent({\n  className,\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Content>) {\n  return (\n    <DropdownMenuPrimitive.Portal>\n      <DropdownMenuPrimitive.Content\n        data-slot=\"dropdown-menu-content\"\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 max-h-(--radix-dropdown-menu-content-available-height) min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border p-1 shadow-md\",\n          className,\n        )}\n        {...props}\n      />\n    </DropdownMenuPrimitive.Portal>\n  );\n}\n\nfunction DropdownMenuGroup({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Group>) {\n  return (\n    <DropdownMenuPrimitive.Group data-slot=\"dropdown-menu-group\" {...props} />\n  );\n}\n\nfunction DropdownMenuItem({\n  className,\n  inset,\n  variant = \"default\",\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Item> & {\n  inset?: boolean;\n  variant?: \"default\" | \"destructive\";\n}) {\n  return (\n    <DropdownMenuPrimitive.Item\n      data-slot=\"dropdown-menu-item\"\n      data-inset={inset}\n      data-variant={variant}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/20 data-[variant=destructive]:focus:text-destructive data-[variant=destructive]:*:[svg]:!text-destructive [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuCheckboxItem({\n  className,\n  children,\n  checked,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.CheckboxItem>) {\n  return (\n    <DropdownMenuPrimitive.CheckboxItem\n      data-slot=\"dropdown-menu-checkbox-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className,\n      )}\n      checked={checked}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.CheckboxItem>\n  );\n}\n\nfunction DropdownMenuRadioGroup({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioGroup>) {\n  return (\n    <DropdownMenuPrimitive.RadioGroup\n      data-slot=\"dropdown-menu-radio-group\"\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuRadioItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioItem>) {\n  return (\n    <DropdownMenuPrimitive.RadioItem\n      data-slot=\"dropdown-menu-radio-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className,\n      )}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <CircleIcon className=\"size-2 fill-current\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.RadioItem>\n  );\n}\n\nfunction DropdownMenuLabel({\n  className,\n  inset,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Label> & {\n  inset?: boolean;\n}) {\n  return (\n    <DropdownMenuPrimitive.Label\n      data-slot=\"dropdown-menu-label\"\n      data-inset={inset}\n      className={cn(\n        \"px-2 py-1.5 text-sm font-medium data-[inset]:pl-8\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Separator>) {\n  return (\n    <DropdownMenuPrimitive.Separator\n      data-slot=\"dropdown-menu-separator\"\n      className={cn(\"bg-border -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuShortcut({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) {\n  return (\n    <span\n      data-slot=\"dropdown-menu-shortcut\"\n      className={cn(\n        \"text-muted-foreground ml-auto text-xs tracking-widest\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuSub({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Sub>) {\n  return <DropdownMenuPrimitive.Sub data-slot=\"dropdown-menu-sub\" {...props} />;\n}\n\nfunction DropdownMenuSubTrigger({\n  className,\n  inset,\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubTrigger> & {\n  inset?: boolean;\n}) {\n  return (\n    <DropdownMenuPrimitive.SubTrigger\n      data-slot=\"dropdown-menu-sub-trigger\"\n      data-inset={inset}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:pl-8\",\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronRightIcon className=\"ml-auto size-4\" />\n    </DropdownMenuPrimitive.SubTrigger>\n  );\n}\n\nfunction DropdownMenuSubContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubContent>) {\n  return (\n    <DropdownMenuPrimitive.SubContent\n      data-slot=\"dropdown-menu-sub-content\"\n      className={cn(\n        \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-hidden rounded-md border p-1 shadow-lg\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport {\n  DropdownMenu,\n  DropdownMenuPortal,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuLabel,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n};\n","import React, { Children, useCallback, useState } from 'react';\nimport { LogOut, Settings, User, LoaderCircle, RotateCw } from 'lucide-react';\nimport { ThemeSwitch } from './theme/ThemeSwitch';\nimport { Button } from './button';\nimport { Avatar, AvatarFallback, AvatarImage } from './Avatar';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from './DropdownMenu';\n\n// UserMenu Context\nexport type UserMenuContextValue = {\n  onClose: () => void;\n};\n\nexport const UserMenuContext = React.createContext<UserMenuContextValue | undefined>(undefined);\n\nexport const useUserMenu = () => React.useContext(UserMenuContext);\n\n// RefreshButton Component\nexport const RefreshButton = ({ onRefresh, loading = false }: { onRefresh?: () => void; loading?: boolean }) => {\n  const handleRefresh = () => {\n    if (onRefresh) {\n      onRefresh();\n    } else {\n      window.location.reload();\n    }\n  };\n\n  return (\n    <Button\n      onClick={handleRefresh}\n      variant=\"ghost\"\n      size=\"icon\"\n      className=\"hidden sm:inline-flex\"\n    >\n      {loading ? <LoaderCircle className=\"animate-spin\" /> : <RotateCw />}\n    </Button>\n  );\n};\n\n// UserMenu Component\nexport type UserMenuProps = {\n  children?: React.ReactNode;\n  user?: {\n    name?: string;\n    email?: string;\n    avatar?: string;\n  };\n  onLogout?: () => void;\n};\n\nexport function UserMenu({ children, user, onLogout }: UserMenuProps) {\n  const [open, setOpen] = useState(false);\n\n  const handleToggleOpen = useCallback(() => {\n    setOpen((prevOpen) => !prevOpen);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const handleLogout = () => {\n    if (onLogout) {\n      onLogout();\n    }\n    setOpen(false);\n  };\n\n  return (\n    <UserMenuContext.Provider value={{ onClose: handleClose }}>\n      <DropdownMenu open={open} onOpenChange={handleToggleOpen}>\n        <DropdownMenuTrigger asChild>\n          <Button\n            variant=\"ghost\"\n            className=\"relative h-8 w-8 ml-2 rounded-full\"\n          >\n            <Avatar className=\"h-8 w-8\">\n              <AvatarImage src={user?.avatar} role=\"presentation\" />\n              <AvatarFallback>{user?.name?.charAt(0) || 'U'}</AvatarFallback>\n            </Avatar>\n          </Button>\n        </DropdownMenuTrigger>\n        <DropdownMenuContent className=\"w-56\" align=\"end\" forceMount>\n          <DropdownMenuLabel className=\"font-normal\">\n            <div className=\"flex flex-col space-y-1\">\n              <p className=\"text-sm font-medium leading-none\">\n                {user?.name || 'User'}\n              </p>\n              {user?.email && (\n                <p className=\"text-xs text-muted-foreground\">\n                  {user.email}\n                </p>\n              )}\n            </div>\n          </DropdownMenuLabel>\n          <DropdownMenuSeparator />\n          {children}\n          {Children.count(children) > 0 && <DropdownMenuSeparator />}\n          <DropdownMenuItem onClick={handleLogout} className=\"cursor-pointer\">\n            <LogOut />\n            Log out\n          </DropdownMenuItem>\n        </DropdownMenuContent>\n      </DropdownMenu>\n    </UserMenuContext.Provider>\n  );\n}\n\n// Simple Link Component that uses anchor tags for maximum compatibility\nconst SafeLink = ({ to, children, className }: { to: string; children: React.ReactNode; className?: string }) => {\n  return (\n    <a href={to} className={className}>\n      {children}\n    </a>\n  );\n};\n\n// NavigationTab Component\nconst NavigationTab = ({\n  label,\n  to,\n  isActive,\n}: {\n  label: string;\n  to: string;\n  isActive: boolean;\n}) => (\n  <SafeLink\n    to={to}\n    className={`px-6 py-3 text-sm font-medium transition-colors border-b-2 ${\n      isActive\n        ? \"text-secondary-foreground border-secondary-foreground\"\n        : \"text-secondary-foreground/70 border-transparent hover:text-secondary-foreground/80\"\n    }`}\n  >\n    {label}\n  </SafeLink>\n);\n\n// UsersMenu Component\nconst UsersMenu = () => {\n  const { onClose } = useUserMenu() ?? {};\n  return (\n    <DropdownMenuItem asChild onClick={onClose}>\n      <Link to=\"/sales\" className=\"flex items-center gap-2\">\n        <User /> Users\n      </Link>\n    </DropdownMenuItem>\n  );\n};\n\n// ConfigurationMenu Component\nconst ConfigurationMenu = () => {\n  const { onClose } = useUserMenu() ?? {};\n  return (\n    <DropdownMenuItem asChild onClick={onClose}>\n      <Link to=\"/settings\" className=\"flex items-center gap-2\">\n        <Settings />\n        My info\n      </Link>\n    </DropdownMenuItem>\n  );\n};\n\n// Main Header Component\nexport interface ExactHeaderProps {\n  title: string;\n  darkModeLogo?: string;\n  lightModeLogo?: string;\n  navigationItems?: Array<{\n    label: string;\n    to: string;\n    isActive?: boolean;\n  }>;\n  user?: {\n    name?: string;\n    email?: string;\n    avatar?: string;\n  };\n  onLogout?: () => void;\n  onRefresh?: () => void;\n  loading?: boolean;\n}\n\nexport const ExactHeader: React.FC<ExactHeaderProps> = ({\n  title,\n  darkModeLogo,\n  lightModeLogo,\n  navigationItems = [],\n  user,\n  onLogout,\n  onRefresh,\n  loading = false,\n}) => {\n  return (\n    <nav className=\"flex-grow\">\n      <header className=\"bg-secondary\">\n        <div className=\"px-4\">\n          <div className=\"flex justify-between items-center flex-1\">\n            <SafeLink\n              to=\"/\"\n              className=\"flex items-center gap-2 text-secondary-foreground no-underline\"\n            >\n              {darkModeLogo && (\n                <img\n                  className=\"[.light_&]:hidden h-6\"\n                  src={darkModeLogo}\n                  alt={title}\n                />\n              )}\n              {lightModeLogo && (\n                <img\n                  className=\"[.dark_&]:hidden h-6\"\n                  src={lightModeLogo}\n                  alt={title}\n                />\n              )}\n              <h1 className=\"text-xl font-semibold\">{title}</h1>\n            </SafeLink>\n            <div>\n              <nav className=\"flex\">\n                {navigationItems.map((item) => (\n                  <NavigationTab\n                    key={item.to}\n                    label={item.label}\n                    to={item.to}\n                    isActive={item.isActive || false}\n                  />\n                ))}\n              </nav>\n            </div>\n            <div className=\"flex items-center\">\n              <ThemeSwitch />\n              <RefreshButton onRefresh={onRefresh} loading={loading} />\n              <UserMenu user={user} onLogout={onLogout}>\n                <ConfigurationMenu />\n                <UsersMenu />\n              </UserMenu>\n            </div>\n          </div>\n        </div>\n      </header>\n    </nav>\n  );\n};\n\nexport default ExactHeader;","import React, { useState } from 'react';\nimport { Button } from './button';\nimport { Input } from './input';\nimport { Card } from './card';\n\nexport interface LoginPageProps {\n  /** Application title */\n  title: string;\n  /** Logo URL for the application */\n  logo?: string;\n  /** Background image or color for the left panel */\n  backgroundImage?: string;\n  /** Custom background color for the left panel */\n  backgroundColor?: string;\n  /** Subtitle or description text */\n  subtitle?: string;\n  /** Whether to show the forgot password link */\n  showForgotPassword?: boolean;\n  /** Whether to show the sign up link */\n  showSignUp?: boolean;\n  /** Custom labels for form elements */\n  labels?: {\n    signIn?: string;\n    email?: string;\n    password?: string;\n    forgotPassword?: string;\n    signUp?: string;\n    signUpText?: string;\n  };\n  /** Demo credentials for development */\n  demoCredentials?: {\n    email: string;\n    password: string;\n  };\n  /** Loading state */\n  isLoading?: boolean;\n  /** Error message to display */\n  error?: string;\n  /** Form submission handler */\n  onSubmit: (data: { email: string; password: string }) => void;\n  /** Forgot password link URL */\n  forgotPasswordUrl?: string;\n  /** Sign up link URL */\n  signUpUrl?: string;\n  /** Additional form fields (like work center selection) */\n  additionalFields?: React.ReactNode;\n}\n\n/**\n * Safely check if we're in development mode across CJS and ESM environments\n */\nconst isDevelopmentMode = (): boolean => {\n  // Try import.meta.env first (ESM/Vite)\n  if (typeof globalThis !== 'undefined' && (globalThis as any).import?.meta?.env) {\n    return (globalThis as any).import.meta.env.MODE === 'development';\n  }\n  // Try process.env (CJS/Node)\n  if (typeof process !== 'undefined' && process.env) {\n    return process.env.NODE_ENV === 'development';\n  }\n  // Fallback for browser environments\n  return false;\n};\n\nexport const LoginPage: React.FC<LoginPageProps> = ({\n  title,\n  logo,\n  backgroundImage,\n  backgroundColor = '#09090b',\n  subtitle,\n  showForgotPassword = true,\n  showSignUp = true,\n  labels = {},\n  demoCredentials,\n  isLoading = false,\n  error,\n  onSubmit,\n  forgotPasswordUrl = '/forgot-password',\n  signUpUrl = '/signup',\n  additionalFields\n}) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n\n  const defaultLabels = {\n    signIn: 'Sign in',\n    email: 'Email',\n    password: 'Password',\n    forgotPassword: 'Forgot your password?',\n    signUp: 'Sign up',\n    signUpText: \"Don't have an account?\",\n    ...labels\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSubmit(formData);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const fillDemoCredentials = () => {\n    if (demoCredentials) {\n      setFormData({\n        email: demoCredentials.email,\n        password: demoCredentials.password\n      });\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex\">\n      <div className=\"container relative grid flex-col items-center justify-center sm:max-w-none lg:grid-cols-2 lg:px-0\">\n        {/* Left Panel - Branding */}\n        <div \n          className=\"relative hidden h-full flex-col bg-muted p-10 text-white dark:border-r lg:flex\"\n          style={{\n            backgroundImage: backgroundImage ? `url(${backgroundImage})` : undefined,\n            backgroundColor: backgroundColor\n          }}\n        >\n          <div className=\"absolute inset-0\" style={{ backgroundColor: backgroundColor }} />\n          <div className=\"relative z-20 flex items-center text-lg font-medium\">\n            {logo && <img className=\"h-6 mr-2\" src={logo} alt={title} />}\n            {title}\n          </div>\n          {subtitle && (\n            <div className=\"relative z-20 mt-auto\">\n              <blockquote className=\"space-y-2\">\n                <p className=\"text-lg\">{subtitle}</p>\n              </blockquote>\n            </div>\n          )}\n        </div>\n\n        {/* Right Panel - Login Form */}\n        <div className=\"lg:p-8\">\n          <div className=\"mx-auto flex w-full flex-col justify-center space-y-6 sm:w-[350px]\">\n            <div className=\"flex flex-col space-y-2 text-center\">\n              <h1 className=\"text-2xl font-semibold tracking-tight\">\n                {defaultLabels.signIn}\n              </h1>\n              <p className=\"text-sm text-muted-foreground\">\n                Enter your email below to sign in to your account\n              </p>\n            </div>\n\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              {error && (\n                <div className=\"p-3 text-sm text-red-600 bg-red-50 border border-red-200 rounded-md\">\n                  {error}\n                </div>\n              )}\n\n              <div className=\"space-y-2\">\n                <label htmlFor=\"email\" className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                  {defaultLabels.email}\n                </label>\n                <Input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                  placeholder=\"name@example.com\"\n                  required\n                  disabled={isLoading}\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <label htmlFor=\"password\" className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                  {defaultLabels.password}\n                </label>\n                <Input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formData.password}\n                  onChange={handleChange}\n                  required\n                  disabled={isLoading}\n                />\n              </div>\n\n              {additionalFields}\n\n              <Button\n                type=\"submit\"\n                className=\"w-full text-white\"\n                disabled={isLoading}\n              >\n                {isLoading ? 'Signing in...' : defaultLabels.signIn}\n              </Button>\n            </form>\n\n            {/* Demo Credentials (for development) */}\n            {demoCredentials && isDevelopmentMode() && (\n              <div className=\"mt-4 p-3 bg-gray-50 rounded-lg\">\n                <details className=\"group\">\n                  <summary className=\"cursor-pointer text-sm font-medium text-gray-700 hover:text-gray-900\">\n                    Demo Credentials (Development Only)\n                  </summary>\n                  <div className=\"mt-2 space-y-2\">\n                    <p className=\"text-xs text-gray-600\">\n                      Email: {demoCredentials.email}\n                    </p>\n                    <p className=\"text-xs text-gray-600\">\n                      Password: {demoCredentials.password}\n                    </p>\n                    <Button\n                      type=\"button\"\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={fillDemoCredentials}\n                      className=\"w-full mt-2\"\n                    >\n                      Fill Demo Credentials\n                    </Button>\n                  </div>\n                </details>\n              </div>\n            )}\n\n            {/* Footer Links */}\n            <div className=\"text-center space-y-4\">\n              {showForgotPassword && (\n                <a\n                  href={forgotPasswordUrl}\n                  className=\"text-sm text-muted-foreground hover:text-primary underline-offset-4 hover:underline\"\n                >\n                  {defaultLabels.forgotPassword}\n                </a>\n              )}\n\n              {showSignUp && (\n                <div className=\"text-sm text-muted-foreground\">\n                  {defaultLabels.signUpText}{' '}\n                  <a\n                    href={signUpUrl}\n                    className=\"text-primary underline-offset-4 hover:underline\"\n                  >\n                    {defaultLabels.signUp}\n                  </a>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","import React, { Children, useCallback, useState } from 'react';\nimport { LogOut, Settings, User, LoaderCircle, RotateCw, Menu } from 'lucide-react';\nimport { ThemeSwitch } from './theme/ThemeSwitch';\nimport { Button } from './button';\nimport { Avatar, AvatarFallback, AvatarImage } from './Avatar';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from './DropdownMenu';\n\n// UserMenu Context\nexport type UserMenuContextValue = {\n  onClose: () => void;\n};\n\nexport const UserMenuContext = React.createContext<UserMenuContextValue | undefined>(undefined);\n\nexport const useUserMenu = () => React.useContext(UserMenuContext);\n\n// RefreshButton Component\nexport const RefreshButton = ({ onRefresh, loading = false }: { onRefresh?: () => void; loading?: boolean }) => {\n  const handleRefresh = () => {\n    if (onRefresh) {\n      onRefresh();\n    } else {\n      window.location.reload();\n    }\n  };\n\n  return (\n    <Button\n      onClick={handleRefresh}\n      variant=\"ghost\"\n      size=\"icon\"\n      className=\"hidden sm:inline-flex\"\n    >\n      {loading ? <LoaderCircle className=\"animate-spin\" /> : <RotateCw />}\n    </Button>\n  );\n};\n\n// UserMenu Component\nexport type UserMenuProps = {\n  children?: React.ReactNode;\n  user?: {\n    name?: string;\n    email?: string;\n    avatar?: string;\n  };\n  onLogout?: () => void;\n};\n\nexport function UserMenu({ children, user, onLogout }: UserMenuProps) {\n  const [open, setOpen] = useState(false);\n\n  const handleToggleOpen = useCallback(() => {\n    setOpen((prevOpen) => !prevOpen);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const handleLogout = () => {\n    if (onLogout) {\n      onLogout();\n    }\n    setOpen(false);\n  };\n\n  return (\n    <UserMenuContext.Provider value={{ onClose: handleClose }}>\n      <DropdownMenu open={open} onOpenChange={handleToggleOpen}>\n        <DropdownMenuTrigger asChild>\n          <Button\n            variant=\"ghost\"\n            className=\"relative h-8 w-8 ml-2 rounded-full\"\n          >\n            <Avatar className=\"h-8 w-8\">\n              <AvatarImage src={user?.avatar} role=\"presentation\" />\n              <AvatarFallback>{user?.name?.charAt(0) || 'U'}</AvatarFallback>\n            </Avatar>\n          </Button>\n        </DropdownMenuTrigger>\n        <DropdownMenuContent className=\"w-56\" align=\"end\" forceMount>\n          <DropdownMenuLabel className=\"font-normal\">\n            <div className=\"flex flex-col space-y-1\">\n              <p className=\"text-sm font-medium leading-none\">\n                {user?.name || 'User'}\n              </p>\n              {user?.email && (\n                <p className=\"text-xs text-muted-foreground\">\n                  {user.email}\n                </p>\n              )}\n            </div>\n          </DropdownMenuLabel>\n          <DropdownMenuSeparator />\n          {children}\n          {Children.count(children) > 0 && <DropdownMenuSeparator />}\n          <DropdownMenuItem onClick={handleLogout} className=\"cursor-pointer\">\n            <LogOut />\n            Log out\n          </DropdownMenuItem>\n        </DropdownMenuContent>\n      </DropdownMenu>\n    </UserMenuContext.Provider>\n  );\n}\n\n// UsersMenu Component\nconst UsersMenu = () => {\n  const { onClose } = useUserMenu() ?? {};\n  return (\n    <DropdownMenuItem onClick={onClose}>\n      <div className=\"flex items-center gap-2\">\n        <User /> Users\n      </div>\n    </DropdownMenuItem>\n  );\n};\n\n// ConfigurationMenu Component\nconst ConfigurationMenu = () => {\n  const { onClose } = useUserMenu() ?? {};\n  return (\n    <DropdownMenuItem onClick={onClose}>\n      <div className=\"flex items-center gap-2\">\n        <Settings />\n        My info\n      </div>\n    </DropdownMenuItem>\n  );\n};\n\n// Main Simple Header Component (for tracc and scheduler_demo)\nexport interface SimpleHeaderProps {\n  title: string;\n  darkModeLogo?: string;\n  lightModeLogo?: string;\n  user?: {\n    name?: string;\n    email?: string;\n    avatar?: string;\n  };\n  onLogout?: () => void;\n  onRefresh?: () => void;\n  onToggleSidebar?: () => void;\n  loading?: boolean;\n}\n\nexport const SimpleHeader: React.FC<SimpleHeaderProps> = ({\n  title,\n  darkModeLogo,\n  lightModeLogo,\n  user,\n  onLogout,\n  onRefresh,\n  onToggleSidebar,\n  loading = false,\n}) => {\n  return (\n    <nav className=\"flex-grow\">\n      <header className=\"bg-secondary\">\n        <div className=\"px-4\">\n          <div className=\"flex justify-between items-center flex-1\">\n            {/* Logo, Title, and Hamburger Menu */}\n            <div className=\"flex items-center gap-2\">\n              {onToggleSidebar && (\n                <button\n                  onClick={onToggleSidebar}\n                  className=\"p-2 rounded-md text-muted-foreground hover:text-foreground hover:bg-accent focus:outline-none focus:ring-2 focus:ring-inset focus:ring-ring\"\n                >\n                  <Menu className=\"h-5 w-5\" />\n                </button>\n              )}\n              <div className=\"flex items-center gap-2 text-secondary-foreground\">\n                {darkModeLogo && (\n                  <img\n                    className=\"[.light_&]:hidden h-6\"\n                    src={darkModeLogo}\n                    alt={title}\n                  />\n                )}\n                {lightModeLogo && (\n                  <img\n                    className=\"[.dark_&]:hidden h-6\"\n                    src={lightModeLogo}\n                    alt={title}\n                  />\n                )}\n                <h1 className=\"text-xl font-semibold\">{title}</h1>\n              </div>\n            </div>\n\n            {/* Right side: Theme, Refresh, User Menu */}\n            <div className=\"flex items-center\">\n              <ThemeSwitch />\n              <RefreshButton onRefresh={onRefresh} loading={loading} />\n              <UserMenu user={user} onLogout={onLogout}>\n                <ConfigurationMenu />\n                <UsersMenu />\n              </UserMenu>\n            </div>\n          </div>\n        </div>\n      </header>\n    </nav>\n  );\n};\n\nexport default SimpleHeader;\n","/**\n * URL validation utilities\n * Copied from crm_demo for shared use across all applications\n */\n\nconst LINKEDIN_URL_REGEX = /^http(?:s)?:\\/\\/(?:www\\.)?linkedin.com\\//;\n\n/**\n * Validates if a URL is a valid LinkedIn URL\n * @param url - The URL to validate\n * @returns Error message if invalid, undefined if valid\n */\nexport const isLinkedinUrl = (url: string) => {\n  if (!url) return;\n  try {\n    // Parse the URL to ensure it is valid\n    const parsedUrl = new URL(url);\n    if (!parsedUrl.href.match(LINKEDIN_URL_REGEX)) {\n      return \"URL must be from linkedin.com\";\n    }\n  } catch {\n    // If URL parsing fails, return false\n    return \"Must be a valid URL\";\n  }\n};\n\n/**\n * Validates if a string is a valid URL\n * @param url - The URL to validate\n * @returns Error message if invalid, undefined if valid\n */\nexport const isUrl = (url: string) => {\n  if (!url) return;\n  const UrlRegex = new RegExp(\n    /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([-.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/i,\n  );\n  if (!UrlRegex.test(url)) {\n    return \"Must be a valid URL\";\n  }\n};\n","/**\n * Form validation utilities\n * Copied from crm_demo for shared use across all applications\n */\n\n/**\n * Validates email format\n * Basic email validation pattern\n * @param email - The email to validate\n * @returns Error message if invalid, undefined if valid\n */\nexport const validateEmail = (email: string) => {\n  if (!email) return;\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (!emailRegex.test(email)) {\n    return \"Must be a valid email address\";\n  }\n};\n\n/**\n * Validates required fields\n * @param value - The value to validate\n * @returns Error message if invalid, undefined if valid\n */\nexport const validateRequired = (value: any) => {\n  if (value === null || value === undefined || value === \"\") {\n    return \"This field is required\";\n  }\n};\n\n/**\n * Validates minimum length\n * @param minLength - Minimum required length\n * @returns Validation function\n */\nexport const validateMinLength = (minLength: number) => (value: string) => {\n  if (!value) return;\n  if (value.length < minLength) {\n    return `Must be at least ${minLength} characters long`;\n  }\n};\n\n/**\n * Validates maximum length\n * @param maxLength - Maximum allowed length\n * @returns Validation function\n */\nexport const validateMaxLength = (maxLength: number) => (value: string) => {\n  if (!value) return;\n  if (value.length > maxLength) {\n    return `Must be no more than ${maxLength} characters long`;\n  }\n};\n\n/**\n * Validates numeric values\n * @param value - The value to validate\n * @returns Error message if invalid, undefined if valid\n */\nexport const validateNumber = (value: any) => {\n  if (value === null || value === undefined || value === \"\") return;\n  if (isNaN(Number(value))) {\n    return \"Must be a valid number\";\n  }\n};\n\n/**\n * Validates positive numbers\n * @param value - The value to validate\n * @returns Error message if invalid, undefined if valid\n */\nexport const validatePositiveNumber = (value: any) => {\n  const numberError = validateNumber(value);\n  if (numberError) return numberError;\n  \n  if (value !== null && value !== undefined && value !== \"\" && Number(value) <= 0) {\n    return \"Must be a positive number\";\n  }\n};\n","import { SupabaseClient } from '@supabase/supabase-js';\n\n/**\n * Unified query options for database operations\n */\nexport interface QueryOptions {\n  select?: string;\n  orderBy?: string;\n  ascending?: boolean;\n  filters?: Record<string, any>;\n  limit?: number;\n  offset?: number;\n  dateRange?: {\n    startDate?: string;\n    endDate?: string;\n    dateField?: string;\n  };\n}\n\n/**\n * Pagination options\n */\nexport interface PaginationOptions {\n  page?: number;\n  perPage?: number;\n}\n\n/**\n * Advanced Base Service Class\n * Combines the best patterns from crm_demo, tracc, and scheduler_demo\n * Provides comprehensive CRUD operations with advanced filtering, pagination, and error handling\n */\nexport class BaseService {\n  protected client: SupabaseClient;\n  protected tableName: string;\n\n  constructor(client: SupabaseClient, tableName: string) {\n    this.client = client;\n    this.tableName = tableName;\n  }\n\n  /**\n   * Get all records with advanced filtering and pagination\n   */\n  async getAll(options: QueryOptions = {}): Promise<any[]> {\n    try {\n      let query = this.client\n        .from(this.tableName)\n        .select(options.select || '*')\n        .order(options.orderBy || 'created_at', { ascending: options.ascending !== false });\n\n      // Apply filters\n      if (options.filters) {\n        Object.entries(options.filters).forEach(([key, value]) => {\n          if (value !== null && value !== undefined && value !== '') {\n            if (Array.isArray(value)) {\n              query = query.in(key, value);\n            } else if (typeof value === 'string' && value.includes('%')) {\n              query = query.like(key, value);\n            } else {\n              query = query.eq(key, value);\n            }\n          }\n        });\n      }\n\n      // Apply date range filter\n      if (options.dateRange) {\n        const { startDate, endDate, dateField = 'created_at' } = options.dateRange;\n        if (startDate) {\n          query = query.gte(dateField, `${startDate}T00:00:00.000Z`);\n        }\n        if (endDate) {\n          query = query.lte(dateField, `${endDate}T23:59:59.999Z`);\n        }\n      }\n\n      // Apply pagination\n      if (options.limit) {\n        query = query.limit(options.limit);\n      }\n      if (options.offset) {\n        query = query.range(options.offset, options.offset + (options.limit || 10) - 1);\n      }\n\n      const { data, error } = await query;\n\n      if (error) {\n        throw new Error(this.handleSupabaseError(error, `${this.tableName}.getAll`));\n      }\n\n      return data || [];\n    } catch (error: any) {\n      throw new Error(`Failed to fetch ${this.tableName}: ${error.message}`);\n    }\n  }\n\n  /**\n   * Get paginated records with total count\n   */\n  async getPaginated(options: QueryOptions & PaginationOptions = {}): Promise<{\n    data: any[];\n    total: number;\n    page: number;\n    perPage: number;\n    totalPages: number;\n  }> {\n    const page = options.page || 1;\n    const perPage = options.perPage || 10;\n    const offset = (page - 1) * perPage;\n\n    // Get total count\n    const totalCount = await this.count(options.filters);\n\n    // Get paginated data\n    const data = await this.getAll({\n      ...options,\n      limit: perPage,\n      offset\n    });\n\n    return {\n      data,\n      total: totalCount,\n      page,\n      perPage,\n      totalPages: Math.ceil(totalCount / perPage)\n    };\n  }\n\n  /**\n   * Get a record by ID\n   */\n  async getById(id: string | number, select = '*'): Promise<any> {\n    try {\n      const { data, error } = await this.client\n        .from(this.tableName)\n        .select(select)\n        .eq('id', id)\n        .single();\n\n      if (error) {\n        throw new Error(this.handleSupabaseError(error, `${this.tableName}.getById`));\n      }\n\n      return data;\n    } catch (error: any) {\n      throw new Error(`Failed to fetch ${this.tableName} by ID: ${error.message}`);\n    }\n  }\n\n  /**\n   * Create a new record\n   */\n  async create(data: Record<string, any>): Promise<any> {\n    try {\n      const { data: result, error } = await this.client\n        .from(this.tableName)\n        .insert(data)\n        .select()\n        .single();\n\n      if (error) {\n        throw new Error(this.handleSupabaseError(error, `${this.tableName}.create`));\n      }\n\n      return result;\n    } catch (error: any) {\n      throw new Error(`Failed to create ${this.tableName}: ${error.message}`);\n    }\n  }\n\n  /**\n   * Update a record\n   */\n  async update(id: string | number, data: Record<string, any>): Promise<any> {\n    try {\n      const { data: result, error } = await this.client\n        .from(this.tableName)\n        .update(data)\n        .eq('id', id)\n        .select()\n        .single();\n\n      if (error) {\n        throw new Error(this.handleSupabaseError(error, `${this.tableName}.update`));\n      }\n\n      return result;\n    } catch (error: any) {\n      throw new Error(`Failed to update ${this.tableName}: ${error.message}`);\n    }\n  }\n\n  /**\n   * Delete a record\n   */\n  async delete(id: string | number): Promise<void> {\n    try {\n      const { error } = await this.client\n        .from(this.tableName)\n        .delete()\n        .eq('id', id);\n\n      if (error) {\n        throw new Error(this.handleSupabaseError(error, `${this.tableName}.delete`));\n      }\n    } catch (error: any) {\n      throw new Error(`Failed to delete ${this.tableName}: ${error.message}`);\n    }\n  }\n\n  /**\n   * Bulk delete records\n   */\n  async bulkDelete(ids: (string | number)[]): Promise<void> {\n    try {\n      const { error } = await this.client\n        .from(this.tableName)\n        .delete()\n        .in('id', ids);\n\n      if (error) {\n        throw new Error(this.handleSupabaseError(error, `${this.tableName}.bulkDelete`));\n      }\n    } catch (error: any) {\n      throw new Error(`Failed to bulk delete ${this.tableName}: ${error.message}`);\n    }\n  }\n\n  /**\n   * Count records with optional filters\n   */\n  async count(filters?: Record<string, any>): Promise<number> {\n    try {\n      let query = this.client\n        .from(this.tableName)\n        .select('*', { count: 'exact', head: true });\n\n      if (filters) {\n        Object.entries(filters).forEach(([key, value]) => {\n          if (value !== null && value !== undefined && value !== '') {\n            if (Array.isArray(value)) {\n              query = query.in(key, value);\n            } else {\n              query = query.eq(key, value);\n            }\n          }\n        });\n      }\n\n      const { count, error } = await query;\n\n      if (error) {\n        throw new Error(this.handleSupabaseError(error, `${this.tableName}.count`));\n      }\n\n      return count || 0;\n    } catch (error: any) {\n      throw new Error(`Failed to count ${this.tableName}: ${error.message}`);\n    }\n  }\n\n  /**\n   * Search records with text search\n   */\n  async search(searchTerm: string, searchFields: string[] = ['name'], options: QueryOptions = {}): Promise<any[]> {\n    try {\n      let query = this.client\n        .from(this.tableName)\n        .select(options.select || '*');\n\n      // Build text search query\n      if (searchFields.length === 1) {\n        query = query.ilike(searchFields[0], `%${searchTerm}%`);\n      } else {\n        // For multiple fields, use OR condition\n        const orConditions = searchFields.map(field => `${field}.ilike.%${searchTerm}%`).join(',');\n        query = query.or(orConditions);\n      }\n\n      // Apply additional filters\n      if (options.filters) {\n        Object.entries(options.filters).forEach(([key, value]) => {\n          if (value !== null && value !== undefined && value !== '') {\n            query = query.eq(key, value);\n          }\n        });\n      }\n\n      query = query.order(options.orderBy || 'created_at', { ascending: options.ascending !== false });\n\n      if (options.limit) {\n        query = query.limit(options.limit);\n      }\n\n      const { data, error } = await query;\n\n      if (error) {\n        throw new Error(this.handleSupabaseError(error, `${this.tableName}.search`));\n      }\n\n      return data || [];\n    } catch (error: any) {\n      throw new Error(`Failed to search ${this.tableName}: ${error.message}`);\n    }\n  }\n\n  /**\n   * Handle Supabase errors with user-friendly messages\n   */\n  protected handleSupabaseError(error: any, context = ''): string {\n    // User-friendly error messages\n    if (error.code === '23505') {\n      return 'This record already exists';\n    } else if (error.code === '23503') {\n      return 'Cannot perform this operation due to related records';\n    } else if (error.code === 'PGRST116') {\n      return 'No records found';\n    } else if (error.message?.includes('JWT')) {\n      return 'Authentication error. Please refresh the page';\n    }\n    \n    return error.message || 'An unexpected error occurred';\n  }\n}\n","import { SupabaseClient, RealtimeChannel } from '@supabase/supabase-js';\n\n/**\n * Comprehensive error types for better error categorization\n * Consolidated from tracc's error handling patterns\n */\nexport const ERROR_TYPES = {\n  // Validation Errors\n  VALIDATION_ERROR: 'VALIDATION_ERROR',\n  REQUIRED_FIELD_ERROR: 'REQUIRED_FIELD_ERROR',\n  INVALID_FORMAT_ERROR: 'INVALID_FORMAT_ERROR',\n  INVALID_RANGE_ERROR: 'INVALID_RANGE_ERROR',\n  INVALID_TYPE_ERROR: 'INVALID_TYPE_ERROR',\n  \n  // Data Errors\n  NOT_FOUND: 'NOT_FOUND',\n  DUPLICATE_ERROR: 'DUPLICATE_ERROR',\n  CONFLICT_ERROR: 'CONFLICT_ERROR',\n  OUT_OF_SYNC_ERROR: 'OUT_OF_SYNC_ERROR',\n  \n  // Permission & Security Errors\n  PERMISSION_ERROR: 'PERMISSION_ERROR',\n  AUTHENTICATION_ERROR: 'AUTHENTICATION_ERROR',\n  AUTHORIZATION_ERROR: 'AUTHORIZATION_ERROR',\n  RATE_LIMIT_ERROR: 'RATE_LIMIT_ERROR',\n  \n  // Business Logic Errors\n  BUSINESS_LOGIC_ERROR: 'BUSINESS_LOGIC_ERROR',\n  INSUFFICIENT_STOCK_ERROR: 'INSUFFICIENT_STOCK_ERROR',\n  CAPACITY_EXCEEDED_ERROR: 'CAPACITY_EXCEEDED_ERROR',\n  INVALID_OPERATION_ERROR: 'INVALID_OPERATION_ERROR',\n  WORKFLOW_ERROR: 'WORKFLOW_ERROR',\n  \n  // System Errors\n  SERVER_ERROR: 'SERVER_ERROR',\n  DATABASE_ERROR: 'DATABASE_ERROR',\n  NETWORK_ERROR: 'NETWORK_ERROR',\n  TIMEOUT_ERROR: 'TIMEOUT_ERROR',\n  CONNECTION_ERROR: 'CONNECTION_ERROR',\n  \n  // External Service Errors\n  EXTERNAL_SERVICE_ERROR: 'EXTERNAL_SERVICE_ERROR',\n  API_ERROR: 'API_ERROR',\n  INTEGRATION_ERROR: 'INTEGRATION_ERROR',\n  \n  // Configuration Errors\n  CONFIGURATION_ERROR: 'CONFIGURATION_ERROR',\n  ENVIRONMENT_ERROR: 'ENVIRONMENT_ERROR',\n  \n  // Resource Errors\n  RESOURCE_EXHAUSTED_ERROR: 'RESOURCE_EXHAUSTED_ERROR',\n  QUOTA_EXCEEDED_ERROR: 'QUOTA_EXCEEDED_ERROR',\n  STORAGE_ERROR: 'STORAGE_ERROR',\n  \n  // User Experience Errors\n  USER_INPUT_ERROR: 'USER_INPUT_ERROR',\n  UI_ERROR: 'UI_ERROR',\n  NAVIGATION_ERROR: 'NAVIGATION_ERROR',\n  \n  // Recovery Errors\n  RECOVERY_ERROR: 'RECOVERY_ERROR',\n  RETRY_ERROR: 'RETRY_ERROR',\n  FALLBACK_ERROR: 'FALLBACK_ERROR',\n} as const;\n\n/**\n * Enhanced custom error class for service operations\n */\nexport class ServiceError extends Error {\n  public readonly type: string;\n  public readonly statusCode: number;\n  public readonly originalError: Error | null;\n  public readonly context: string;\n  public readonly timestamp: string;\n  public readonly id: string;\n  public readonly severity: string;\n  public readonly retryable: boolean;\n  public readonly userMessage: string;\n  public readonly details: Record<string, any>;\n  public readonly metadata: Record<string, any>;\n\n  constructor(\n    message: string,\n    type = ERROR_TYPES.SERVER_ERROR,\n    statusCode = 500,\n    originalError: Error | null = null,\n    context = '',\n    options: {\n      id?: string;\n      severity?: string;\n      retryable?: boolean;\n      userMessage?: string;\n      details?: Record<string, any>;\n      metadata?: Record<string, any>;\n    } = {}\n  ) {\n    super(message);\n    this.name = 'ServiceError';\n    this.type = type;\n    this.statusCode = statusCode;\n    this.originalError = originalError;\n    this.context = context;\n    this.timestamp = new Date().toISOString();\n    this.id = options.id || this.generateErrorId();\n    this.severity = options.severity || this.getDefaultSeverity(type);\n    this.retryable = options.retryable !== undefined ? options.retryable : this.isRetryable(type);\n    this.userMessage = options.userMessage || this.getDefaultUserMessage(type, message);\n    this.details = options.details || {};\n    this.metadata = options.metadata || {};\n    \n    if (originalError?.stack) {\n      this.stack = originalError.stack;\n    }\n  }\n\n  private generateErrorId(): string {\n    return `err_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private getDefaultSeverity(type: string): string {\n    const severityMap: Record<string, string> = {\n      [ERROR_TYPES.VALIDATION_ERROR]: 'low',\n      [ERROR_TYPES.REQUIRED_FIELD_ERROR]: 'low',\n      [ERROR_TYPES.INVALID_FORMAT_ERROR]: 'low',\n      [ERROR_TYPES.INVALID_RANGE_ERROR]: 'low',\n      [ERROR_TYPES.INVALID_TYPE_ERROR]: 'low',\n      [ERROR_TYPES.USER_INPUT_ERROR]: 'low',\n      [ERROR_TYPES.UI_ERROR]: 'low',\n      [ERROR_TYPES.NAVIGATION_ERROR]: 'low',\n      \n      [ERROR_TYPES.NOT_FOUND]: 'medium',\n      [ERROR_TYPES.DUPLICATE_ERROR]: 'medium',\n      [ERROR_TYPES.CONFLICT_ERROR]: 'medium',\n      [ERROR_TYPES.BUSINESS_LOGIC_ERROR]: 'medium',\n      [ERROR_TYPES.INSUFFICIENT_STOCK_ERROR]: 'medium',\n      [ERROR_TYPES.CAPACITY_EXCEEDED_ERROR]: 'medium',\n      [ERROR_TYPES.INVALID_OPERATION_ERROR]: 'medium',\n      [ERROR_TYPES.WORKFLOW_ERROR]: 'medium',\n      \n      [ERROR_TYPES.PERMISSION_ERROR]: 'high',\n      [ERROR_TYPES.AUTHENTICATION_ERROR]: 'high',\n      [ERROR_TYPES.AUTHORIZATION_ERROR]: 'high',\n      [ERROR_TYPES.RATE_LIMIT_ERROR]: 'high',\n      [ERROR_TYPES.CONFIGURATION_ERROR]: 'high',\n      [ERROR_TYPES.ENVIRONMENT_ERROR]: 'high',\n      \n      [ERROR_TYPES.SERVER_ERROR]: 'critical',\n      [ERROR_TYPES.DATABASE_ERROR]: 'critical',\n      [ERROR_TYPES.NETWORK_ERROR]: 'critical',\n      [ERROR_TYPES.CONNECTION_ERROR]: 'critical',\n      [ERROR_TYPES.EXTERNAL_SERVICE_ERROR]: 'critical',\n      [ERROR_TYPES.API_ERROR]: 'critical',\n      [ERROR_TYPES.INTEGRATION_ERROR]: 'critical',\n      [ERROR_TYPES.RESOURCE_EXHAUSTED_ERROR]: 'critical',\n      [ERROR_TYPES.QUOTA_EXCEEDED_ERROR]: 'critical',\n      [ERROR_TYPES.STORAGE_ERROR]: 'critical',\n    };\n    \n    return severityMap[type] || 'medium';\n  }\n\n  private isRetryable(type: string): boolean {\n    const retryableTypes = [\n      ERROR_TYPES.NETWORK_ERROR,\n      ERROR_TYPES.CONNECTION_ERROR,\n      ERROR_TYPES.TIMEOUT_ERROR,\n      ERROR_TYPES.SERVER_ERROR,\n      ERROR_TYPES.EXTERNAL_SERVICE_ERROR,\n      ERROR_TYPES.API_ERROR,\n      ERROR_TYPES.RATE_LIMIT_ERROR,\n    ];\n    \n    return retryableTypes.includes(type);\n  }\n\n  private getDefaultUserMessage(type: string, message: string): string {\n    const userMessageMap: Record<string, string> = {\n      [ERROR_TYPES.VALIDATION_ERROR]: 'Please check your input and try again.',\n      [ERROR_TYPES.REQUIRED_FIELD_ERROR]: 'Please fill in all required fields.',\n      [ERROR_TYPES.INVALID_FORMAT_ERROR]: 'Please check the format of your input.',\n      [ERROR_TYPES.INVALID_RANGE_ERROR]: 'Please enter a value within the allowed range.',\n      [ERROR_TYPES.INVALID_TYPE_ERROR]: 'Please enter the correct type of data.',\n      [ERROR_TYPES.NOT_FOUND]: 'The requested item was not found.',\n      [ERROR_TYPES.DUPLICATE_ERROR]: 'This item already exists.',\n      [ERROR_TYPES.CONFLICT_ERROR]: 'There was a conflict with your request.',\n      [ERROR_TYPES.PERMISSION_ERROR]: 'You do not have permission to perform this action.',\n      [ERROR_TYPES.AUTHENTICATION_ERROR]: 'Please log in to continue.',\n      [ERROR_TYPES.AUTHORIZATION_ERROR]: 'You are not authorized to perform this action.',\n      [ERROR_TYPES.BUSINESS_LOGIC_ERROR]: 'This operation cannot be completed due to business rules.',\n      [ERROR_TYPES.INSUFFICIENT_STOCK_ERROR]: 'Insufficient stock available.',\n      [ERROR_TYPES.CAPACITY_EXCEEDED_ERROR]: 'Capacity limit exceeded.',\n      [ERROR_TYPES.INVALID_OPERATION_ERROR]: 'This operation is not allowed.',\n      [ERROR_TYPES.SERVER_ERROR]: 'A server error occurred. Please try again later.',\n      [ERROR_TYPES.DATABASE_ERROR]: 'A database error occurred. Please try again later.',\n      [ERROR_TYPES.NETWORK_ERROR]: 'Network connection failed. Please check your connection.',\n      [ERROR_TYPES.CONNECTION_ERROR]: 'Connection failed. Please try again.',\n      [ERROR_TYPES.TIMEOUT_ERROR]: 'The operation timed out. Please try again.',\n      [ERROR_TYPES.EXTERNAL_SERVICE_ERROR]: 'External service is temporarily unavailable.',\n      [ERROR_TYPES.API_ERROR]: 'API request failed. Please try again later.',\n      [ERROR_TYPES.CONFIGURATION_ERROR]: 'System configuration error. Please contact support.',\n      [ERROR_TYPES.ENVIRONMENT_ERROR]: 'Environment configuration error. Please contact support.',\n      [ERROR_TYPES.RESOURCE_EXHAUSTED_ERROR]: 'System resources are exhausted. Please try again later.',\n      [ERROR_TYPES.QUOTA_EXCEEDED_ERROR]: 'Quota exceeded. Please try again later.',\n      [ERROR_TYPES.STORAGE_ERROR]: 'Storage error occurred. Please try again later.',\n      [ERROR_TYPES.USER_INPUT_ERROR]: 'Please check your input and try again.',\n      [ERROR_TYPES.UI_ERROR]: 'A user interface error occurred.',\n      [ERROR_TYPES.NAVIGATION_ERROR]: 'Navigation error occurred.',\n      [ERROR_TYPES.RECOVERY_ERROR]: 'Error recovery failed.',\n      [ERROR_TYPES.RETRY_ERROR]: 'Retry operation failed.',\n      [ERROR_TYPES.FALLBACK_ERROR]: 'Fallback operation failed.',\n    };\n    \n    return userMessageMap[type] || 'An unexpected error occurred. Please try again.';\n  }\n\n  toUserFriendly() {\n    return {\n      message: this.userMessage,\n      type: this.type,\n      severity: this.severity,\n      retryable: this.retryable,\n      timestamp: this.timestamp,\n    };\n  }\n}\n\n/**\n * Enhanced Supabase error handling with comprehensive error mapping\n */\nexport const handleSupabaseError = (error: any): { type: string; message: string; details?: any } => {\n  if (!error) return { type: ERROR_TYPES.SERVER_ERROR, message: 'Unknown error occurred' };\n\n  // Handle specific Supabase error codes\n  switch (error.code) {\n    // Constraint violations\n    case '23505': // Unique constraint violation\n      return { \n        type: ERROR_TYPES.DUPLICATE_ERROR, \n        message: 'A record with this information already exists',\n        details: { constraint: error.constraint, table: error.table }\n      };\n    case '23503': // Foreign key constraint violation\n      return { \n        type: ERROR_TYPES.CONFLICT_ERROR, \n        message: 'Cannot perform this action due to related records',\n        details: { constraint: error.constraint, table: error.table }\n      };\n    case '23502': // Not null constraint violation\n      return { \n        type: ERROR_TYPES.REQUIRED_FIELD_ERROR, \n        message: 'Required fields are missing',\n        details: { column: error.column, table: error.table }\n      };\n    case '23514': // Check constraint violation\n      return { \n        type: ERROR_TYPES.VALIDATION_ERROR, \n        message: 'Data validation failed',\n        details: { constraint: error.constraint, table: error.table }\n      };\n    \n    // Database structure errors\n    case '42P01': // Undefined table\n      return { \n        type: ERROR_TYPES.DATABASE_ERROR, \n        message: 'Database table not found',\n        details: { table: error.table }\n      };\n    case '42703': // Undefined column\n      return { \n        type: ERROR_TYPES.DATABASE_ERROR, \n        message: 'Database column not found',\n        details: { column: error.column, table: error.table }\n      };\n    \n    // Authentication errors\n    case 'PGRST301': // JWT expired\n    case 'PGRST302': // JWT invalid\n      return { \n        type: ERROR_TYPES.AUTHENTICATION_ERROR, \n        message: 'Authentication expired. Please log in again.'\n      };\n    \n    // Authorization errors\n    case 'PGRST001': // Insufficient privileges\n      return { \n        type: ERROR_TYPES.AUTHORIZATION_ERROR, \n        message: 'You do not have permission to perform this action.'\n      };\n    \n    // Not found errors\n    case 'PGRST116': // No rows found\n      return { \n        type: ERROR_TYPES.NOT_FOUND, \n        message: 'Record not found'\n      };\n    \n    default:\n      // Handle generic error messages\n      if (error.message?.includes('JWT')) {\n        return { \n          type: ERROR_TYPES.AUTHENTICATION_ERROR, \n          message: 'Authentication error. Please refresh the page'\n        };\n      }\n      if (error.message?.includes('network')) {\n        return { \n          type: ERROR_TYPES.NETWORK_ERROR, \n          message: 'Network connection failed'\n        };\n      }\n      if (error.message?.includes('timeout')) {\n        return { \n          type: ERROR_TYPES.TIMEOUT_ERROR, \n          message: 'Request timed out'\n        };\n      }\n      \n      return { \n        type: ERROR_TYPES.SERVER_ERROR, \n        message: error.message || 'An unexpected error occurred'\n      };\n  }\n};\n\n/**\n * Validation utilities\n */\nexport const validateRequiredFields = (data: Record<string, any>, requiredFields: string[]): void => {\n  const missingFields = requiredFields.filter(field => \n    data[field] === undefined || data[field] === null || data[field] === ''\n  );\n  \n  if (missingFields.length > 0) {\n    throw new ServiceError(\n      `Missing required fields: ${missingFields.join(', ')}`,\n      ERROR_TYPES.REQUIRED_FIELD_ERROR,\n      400,\n      null,\n      'validateRequiredFields',\n      { details: { missingFields } }\n    );\n  }\n};\n\nexport const validateNumericRanges = (\n  data: Record<string, any>, \n  ranges: Record<string, { min?: number; max?: number }>\n): void => {\n  for (const [field, range] of Object.entries(ranges)) {\n    const value = data[field];\n    if (value !== undefined && value !== null) {\n      const numValue = Number(value);\n      if (isNaN(numValue)) {\n        throw new ServiceError(\n          `${field} must be a valid number`,\n          ERROR_TYPES.INVALID_TYPE_ERROR,\n          400,\n          null,\n          'validateNumericRanges',\n          { details: { field, value } }\n        );\n      }\n      if (range.min !== undefined && numValue < range.min) {\n        throw new ServiceError(\n          `${field} must be at least ${range.min}`,\n          ERROR_TYPES.INVALID_RANGE_ERROR,\n          400,\n          null,\n          'validateNumericRanges',\n          { details: { field, value, min: range.min } }\n        );\n      }\n      if (range.max !== undefined && numValue > range.max) {\n        throw new ServiceError(\n          `${field} must be no more than ${range.max}`,\n          ERROR_TYPES.INVALID_RANGE_ERROR,\n          400,\n          null,\n          'validateNumericRanges',\n          { details: { field, value, max: range.max } }\n        );\n      }\n    }\n  }\n};\n\nexport const throwNotFoundError = (entityType: string, id: string | number): never => {\n  throw new ServiceError(\n    `${entityType} with ID ${id} not found`,\n    ERROR_TYPES.NOT_FOUND,\n    404,\n    null,\n    'throwNotFoundError',\n    { details: { entityType, id } }\n  );\n};\n\nexport const throwBusinessError = (message: string, details?: any): never => {\n  throw new ServiceError(\n    message,\n    ERROR_TYPES.BUSINESS_LOGIC_ERROR,\n    400,\n    null,\n    'throwBusinessError',\n    { details }\n  );\n};\n\n/**\n * Safe async wrapper with comprehensive error handling\n */\nexport const safeAsync = async <T>(\n  operation: () => Promise<T>,\n  context: string = 'unknown'\n): Promise<T> => {\n  try {\n    return await operation();\n  } catch (error: any) {\n    if (error instanceof ServiceError) {\n      throw error;\n    }\n    \n    const supabaseError = handleSupabaseError(error);\n    throw new ServiceError(\n      supabaseError.message,\n      supabaseError.type,\n      500,\n      error,\n      context,\n      { details: supabaseError.details }\n    );\n  }\n};\n\n/**\n * Unified query options for database operations\n */\nexport interface QueryOptions {\n  select?: string;\n  orderBy?: string;\n  ascending?: boolean;\n  filters?: Record<string, any>;\n  limit?: number;\n  offset?: number;\n  dateRange?: {\n    startDate?: string;\n    endDate?: string;\n    dateField?: string;\n  };\n}\n\n/**\n * Pagination options\n */\nexport interface PaginationOptions {\n  page?: number;\n  perPage?: number;\n}\n\n/**\n * Real-time subscription options\n */\nexport interface RealtimeOptions {\n  event?: 'INSERT' | 'UPDATE' | 'DELETE' | '*';\n  schema?: string;\n  filter?: string;\n}\n\n/**\n * Comprehensive SupabaseService Class\n * Consolidates all patterns from crm_demo, tracc, and scheduler_demo\n * Provides unified CRUD operations, real-time subscriptions, and advanced querying\n */\nexport class SupabaseService {\n  protected client: SupabaseClient;\n  protected tableName: string;\n  private realtimeChannels: Map<string, RealtimeChannel> = new Map();\n\n  constructor(client: SupabaseClient, tableName: string) {\n    this.client = client;\n    this.tableName = tableName;\n  }\n\n  /**\n   * Initialize service and test connection\n   */\n  async init(): Promise<boolean> {\n    return safeAsync(async () => {\n      const { error } = await this.client\n        .from(this.tableName)\n        .select('count')\n        .limit(1);\n        \n      if (error) {\n        throw error;\n      }\n      \n      return true;\n    }, `${this.tableName}.init`);\n  }\n\n  /**\n   * Get all records with advanced filtering and pagination\n   */\n  async getAll(options: QueryOptions = {}): Promise<any[]> {\n    return safeAsync(async () => {\n      let query = this.client\n        .from(this.tableName)\n        .select(options.select || '*')\n        .order(options.orderBy || 'created_at', { ascending: options.ascending !== false });\n\n      // Apply filters\n      if (options.filters) {\n        Object.entries(options.filters).forEach(([key, value]) => {\n          if (value !== null && value !== undefined && value !== '') {\n            if (Array.isArray(value)) {\n              query = query.in(key, value);\n            } else if (typeof value === 'string' && value.includes('%')) {\n              query = query.like(key, value);\n            } else {\n              query = query.eq(key, value);\n            }\n          }\n        });\n      }\n\n      // Apply date range filter\n      if (options.dateRange) {\n        const { startDate, endDate, dateField = 'created_at' } = options.dateRange;\n        if (startDate) {\n          query = query.gte(dateField, `${startDate}T00:00:00.000Z`);\n        }\n        if (endDate) {\n          query = query.lte(dateField, `${endDate}T23:59:59.999Z`);\n        }\n      }\n\n      // Apply pagination\n      if (options.limit) {\n        query = query.limit(options.limit);\n      }\n      if (options.offset) {\n        query = query.range(options.offset, options.offset + (options.limit || 10) - 1);\n      }\n\n      const { data, error } = await query;\n\n      if (error) {\n        throw error;\n      }\n\n      return data || [];\n    }, `${this.tableName}.getAll`);\n  }\n\n  /**\n   * Get paginated records with total count\n   */\n  async getPaginated(options: QueryOptions & PaginationOptions = {}): Promise<{\n    data: any[];\n    total: number;\n    page: number;\n    perPage: number;\n    totalPages: number;\n  }> {\n    const page = options.page || 1;\n    const perPage = options.perPage || 10;\n    const offset = (page - 1) * perPage;\n\n    // Get total count and data in parallel\n    const [totalCount, data] = await Promise.all([\n      this.count(options.filters),\n      this.getAll({\n        ...options,\n        limit: perPage,\n        offset\n      })\n    ]);\n\n    return {\n      data,\n      total: totalCount,\n      page,\n      perPage,\n      totalPages: Math.ceil(totalCount / perPage)\n    };\n  }\n\n  /**\n   * Get a record by ID\n   */\n  async getById(id: string | number, select = '*'): Promise<any> {\n    return safeAsync(async () => {\n      const { data, error } = await this.client\n        .from(this.tableName)\n        .select(select)\n        .eq('id', id)\n        .single();\n\n      if (error) {\n        throw error;\n      }\n\n      return data;\n    }, `${this.tableName}.getById`);\n  }\n\n  /**\n   * Get records by field value\n   */\n  async getByField(field: string, value: any, options: QueryOptions = {}): Promise<any[]> {\n    return safeAsync(async () => {\n      let query = this.client\n        .from(this.tableName)\n        .select(options.select || '*')\n        .eq(field, value);\n\n      if (options.orderBy) {\n        query = query.order(options.orderBy, { ascending: options.ascending !== false });\n      }\n\n      if (options.limit) {\n        query = query.limit(options.limit);\n      }\n\n      const { data, error } = await query;\n\n      if (error) {\n        throw error;\n      }\n\n      return data || [];\n    }, `${this.tableName}.getByField`);\n  }\n\n  /**\n   * Create a new record\n   */\n  async create(data: Record<string, any>): Promise<any> {\n    return safeAsync(async () => {\n      const { data: result, error } = await this.client\n        .from(this.tableName)\n        .insert(data)\n        .select()\n        .single();\n\n      if (error) {\n        throw error;\n      }\n\n      return result;\n    }, `${this.tableName}.create`);\n  }\n\n  /**\n   * Create multiple records\n   */\n  async createMany(data: Record<string, any>[]): Promise<any[]> {\n    return safeAsync(async () => {\n      const { data: result, error } = await this.client\n        .from(this.tableName)\n        .insert(data)\n        .select();\n\n      if (error) {\n        throw error;\n      }\n\n      return result || [];\n    }, `${this.tableName}.createMany`);\n  }\n\n  /**\n   * Update a record\n   */\n  async update(id: string | number, data: Record<string, any>): Promise<any> {\n    return safeAsync(async () => {\n      const { data: result, error } = await this.client\n        .from(this.tableName)\n        .update(data)\n        .eq('id', id)\n        .select()\n        .single();\n\n      if (error) {\n        throw error;\n      }\n\n      return result;\n    }, `${this.tableName}.update`);\n  }\n\n  /**\n   * Update multiple records\n   */\n  async updateMany(updates: { id: string | number; data: Record<string, any> }[]): Promise<any[]> {\n    return safeAsync(async () => {\n      const promises = updates.map(({ id, data }) => this.update(id, data));\n      return Promise.all(promises);\n    }, `${this.tableName}.updateMany`);\n  }\n\n  /**\n   * Upsert a record (insert or update)\n   */\n  async upsert(data: Record<string, any>, onConflict?: string): Promise<any> {\n    return safeAsync(async () => {\n      let query = this.client\n        .from(this.tableName)\n        .upsert(data)\n        .select()\n        .single();\n\n      if (onConflict) {\n        query = query.onConflict(onConflict);\n      }\n\n      const { data: result, error } = await query;\n\n      if (error) {\n        throw error;\n      }\n\n      return result;\n    }, `${this.tableName}.upsert`);\n  }\n\n  /**\n   * Delete a record\n   */\n  async delete(id: string | number): Promise<void> {\n    return safeAsync(async () => {\n      const { error } = await this.client\n        .from(this.tableName)\n        .delete()\n        .eq('id', id);\n\n      if (error) {\n        throw error;\n      }\n    }, `${this.tableName}.delete`);\n  }\n\n  /**\n   * Bulk delete records\n   */\n  async bulkDelete(ids: (string | number)[]): Promise<void> {\n    return safeAsync(async () => {\n      const { error } = await this.client\n        .from(this.tableName)\n        .delete()\n        .in('id', ids);\n\n      if (error) {\n        throw error;\n      }\n    }, `${this.tableName}.bulkDelete`);\n  }\n\n  /**\n   * Count records with optional filters\n   */\n  async count(filters?: Record<string, any>): Promise<number> {\n    return safeAsync(async () => {\n      let query = this.client\n        .from(this.tableName)\n        .select('*', { count: 'exact', head: true });\n\n      if (filters) {\n        Object.entries(filters).forEach(([key, value]) => {\n          if (value !== null && value !== undefined && value !== '') {\n            if (Array.isArray(value)) {\n              query = query.in(key, value);\n            } else {\n              query = query.eq(key, value);\n            }\n          }\n        });\n      }\n\n      const { count, error } = await query;\n\n      if (error) {\n        throw error;\n      }\n\n      return count || 0;\n    }, `${this.tableName}.count`);\n  }\n\n  /**\n   * Check if record exists\n   */\n  async exists(id: string | number): Promise<boolean> {\n    return safeAsync(async () => {\n      const { data, error } = await this.client\n        .from(this.tableName)\n        .select('id')\n        .eq('id', id)\n        .single();\n\n      if (error && error.code !== 'PGRST116') {\n        throw error;\n      }\n\n      return !!data;\n    }, `${this.tableName}.exists`);\n  }\n\n  /**\n   * Search records with text search\n   */\n  async search(searchTerm: string, searchFields: string[] = ['name'], options: QueryOptions = {}): Promise<any[]> {\n    return safeAsync(async () => {\n      let query = this.client\n        .from(this.tableName)\n        .select(options.select || '*');\n\n      // Build text search query\n      if (searchFields.length === 1) {\n        query = query.ilike(searchFields[0], `%${searchTerm}%`);\n      } else {\n        // For multiple fields, use OR condition\n        const orConditions = searchFields.map(field => `${field}.ilike.%${searchTerm}%`).join(',');\n        query = query.or(orConditions);\n      }\n\n      // Apply additional filters\n      if (options.filters) {\n        Object.entries(options.filters).forEach(([key, value]) => {\n          if (value !== null && value !== undefined && value !== '') {\n            query = query.eq(key, value);\n          }\n        });\n      }\n\n      query = query.order(options.orderBy || 'created_at', { ascending: options.ascending !== false });\n\n      if (options.limit) {\n        query = query.limit(options.limit);\n      }\n\n      const { data, error } = await query;\n\n      if (error) {\n        throw error;\n      }\n\n      return data || [];\n    }, `${this.tableName}.search`);\n  }\n\n  /**\n   * Get records by date range\n   */\n  async getByDateRange(\n    startDate: string,\n    endDate: string,\n    dateField = 'created_at',\n    options: QueryOptions = {}\n  ): Promise<any[]> {\n    return this.getAll({\n      ...options,\n      dateRange: { startDate, endDate, dateField }\n    });\n  }\n\n  /**\n   * Execute raw SQL query\n   */\n  async executeRpc(functionName: string, params?: Record<string, any>): Promise<any> {\n    return safeAsync(async () => {\n      const { data, error } = await this.client.rpc(functionName, params);\n\n      if (error) {\n        throw error;\n      }\n\n      return data;\n    }, `${this.tableName}.executeRpc`);\n  }\n\n  /**\n   * Setup real-time subscription\n   */\n  setupRealtimeSubscription(\n    callback: (payload: any) => void,\n    options: RealtimeOptions = {},\n    channelName?: string\n  ): RealtimeChannel {\n    const channel = channelName || `${this.tableName}_realtime_${Date.now()}`;\n    \n    let realtimeChannel = this.client\n      .channel(channel)\n      .on(\n        'postgres_changes',\n        {\n          event: options.event || '*',\n          schema: options.schema || 'public',\n          table: this.tableName,\n          filter: options.filter\n        },\n        callback\n      )\n      .subscribe();\n\n    this.realtimeChannels.set(channel, realtimeChannel);\n    return realtimeChannel;\n  }\n\n  /**\n   * Remove real-time subscription\n   */\n  removeRealtimeSubscription(channelName: string): void {\n    const channel = this.realtimeChannels.get(channelName);\n    if (channel) {\n      this.client.removeChannel(channel);\n      this.realtimeChannels.delete(channelName);\n    }\n  }\n\n  /**\n   * Remove all real-time subscriptions\n   */\n  removeAllRealtimeSubscriptions(): void {\n    this.realtimeChannels.forEach((channel, channelName) => {\n      this.client.removeChannel(channel);\n    });\n    this.realtimeChannels.clear();\n  }\n\n  /**\n   * Bulk operations with transaction support\n   */\n  async bulkOperation(\n    operations: Array<{\n      type: 'insert' | 'update' | 'delete' | 'upsert';\n      data?: Record<string, any>;\n      id?: string | number;\n      filters?: Record<string, any>;\n    }>\n  ): Promise<any[]> {\n    return safeAsync(async () => {\n      const results = [];\n      \n      for (const operation of operations) {\n        let result;\n        \n        switch (operation.type) {\n          case 'insert':\n            result = await this.create(operation.data!);\n            break;\n          case 'update':\n            result = await this.update(operation.id!, operation.data!);\n            break;\n          case 'delete':\n            await this.delete(operation.id!);\n            result = { deleted: true, id: operation.id };\n            break;\n          case 'upsert':\n            result = await this.upsert(operation.data!);\n            break;\n          default:\n            throw new ServiceError(\n              `Unknown operation type: ${operation.type}`,\n              ERROR_TYPES.INVALID_OPERATION_ERROR\n            );\n        }\n        \n        results.push(result);\n      }\n      \n      return results;\n    }, `${this.tableName}.bulkOperation`);\n  }\n\n  /**\n   * Get table name\n   */\n  getTableName(): string {\n    return this.tableName;\n  }\n\n  /**\n   * Get Supabase client\n   */\n  getClient(): SupabaseClient {\n    return this.client;\n  }\n}\n","import { createClient, SupabaseClient } from '@supabase/supabase-js';\n\n/**\n * Unified Supabase client factory\n * Supports both environment variables and direct configuration\n */\nexport interface SupabaseConfig {\n  url: string;\n  anonKey: string;\n  options?: {\n    auth?: {\n      persistSession?: boolean;\n      autoRefreshToken?: boolean;\n    };\n    realtime?: {\n      params?: {\n        eventsPerSecond?: number;\n      };\n    };\n  };\n}\n\n/**\n * Create a Supabase client with unified configuration\n */\nexport const createSupabaseClient = (config: SupabaseConfig): SupabaseClient => {\n  const defaultOptions = {\n    auth: {\n      persistSession: true,\n      autoRefreshToken: true\n    },\n    realtime: {\n      params: {\n        eventsPerSecond: 10\n      }\n    }\n  };\n\n  return createClient(config.url, config.anonKey, {\n    ...defaultOptions,\n    ...config.options\n  });\n};\n\n/**\n * Safely access environment variables in both CJS and ESM environments\n * Note: This function has limitations and should be avoided in favor of \n * passing environment variables explicitly from the consuming application\n */\nconst getEnvVar = (key: string): string | undefined => {\n  // Try process.env (Node.js/CJS)\n  if (typeof process !== 'undefined' && process.env) {\n    return process.env[key];\n  }\n  \n  // Fallback for browser environments\n  if (typeof window !== 'undefined' && (window as any).__ENV__) {\n    return (window as any).__ENV__[key];\n  }\n  \n  return undefined;\n};\n\n/**\n * Create Supabase client from environment variables\n * Note: This function should be used in the consuming application, not in the package\n */\nexport const createSupabaseFromEnv = (): SupabaseClient => {\n  // Access environment variables in a way that works in both CJS and ESM\n  const url = getEnvVar('VITE_SUPABASE_URL');\n  const anonKey = getEnvVar('VITE_SUPABASE_ANON_KEY');\n\n  if (!url) {\n    throw new Error('Missing VITE_SUPABASE_URL environment variable');\n  }\n  if (!anonKey) {\n    throw new Error('Missing VITE_SUPABASE_ANON_KEY environment variable');\n  }\n\n  return createSupabaseClient({ url, anonKey });\n};\n\n/**\n * Handle Supabase errors with user-friendly messages\n */\nexport const handleSupabaseError = (error: any, context = ''): string => {\n  // User-friendly error messages\n  if (error.code === '23505') {\n    return 'This record already exists';\n  } else if (error.code === '23503') {\n    return 'Cannot perform this operation due to related records';\n  } else if (error.code === 'PGRST116') {\n    return 'No records found';\n  } else if (error.message?.includes('JWT')) {\n    return 'Authentication error. Please refresh the page';\n  }\n  \n  return error.message || 'An unexpected error occurred';\n};\n\n/**\n * Check if Supabase connection is working\n */\nexport const checkSupabaseConnection = async (\n  client: SupabaseClient, \n  testTable = 'users'\n): Promise<boolean> => {\n  try {\n    const { error } = await client\n      .from(testTable)\n      .select('count')\n      .limit(1);\n      \n    return !error;\n  } catch (error) {\n    return false;\n  }\n};\n\n/**\n * Standardized Supabase client for all applications\n * Uses environment variables and can be imported directly\n * \n * Usage in applications:\n * import { supabase } from '@santonastaso/shared';\n */\nexport const getStandardSupabaseClient = (): SupabaseClient => {\n  return createSupabaseFromEnv();\n};\n\n// Export a default client instance (lazy-loaded)\nlet _supabaseClient: SupabaseClient | null = null;\n\nexport const getSupabaseClient = (): SupabaseClient => {\n  if (!_supabaseClient) {\n    _supabaseClient = createSupabaseFromEnv();\n  }\n  return _supabaseClient;\n};\n","import { SupabaseClient } from '@supabase/supabase-js';\n\n/**\n * File upload utilities for Supabase Storage\n * Based on patterns from crm_demo\n */\n\nexport interface FileUploadOptions {\n  bucket?: string;\n  folder?: string;\n  generateFileName?: boolean;\n  overwrite?: boolean;\n}\n\nexport interface UploadedFile {\n  path: string;\n  src: string;\n  type?: string;\n  size?: number;\n  name?: string;\n}\n\n/**\n * Upload a file to Supabase Storage\n * @param supabase - Supabase client instance\n * @param file - File to upload (File object or Blob)\n * @param options - Upload options\n * @returns Promise with uploaded file information\n */\nexport const uploadToSupabaseStorage = async (\n  supabase: SupabaseClient,\n  file: File | Blob,\n  options: FileUploadOptions = {}\n): Promise<UploadedFile> => {\n  const {\n    bucket = 'attachments',\n    folder = '',\n    generateFileName = true,\n    overwrite = false\n  } = options;\n\n  // Generate file name\n  let fileName: string;\n  if (generateFileName) {\n    const fileExt = file instanceof File ? file.name.split('.').pop() : 'bin';\n    fileName = `${Math.random().toString(36).substring(2)}.${fileExt}`;\n  } else if (file instanceof File) {\n    fileName = file.name;\n  } else {\n    fileName = `${Math.random().toString(36).substring(2)}.bin`;\n  }\n\n  // Construct file path\n  const filePath = folder ? `${folder}/${fileName}` : fileName;\n\n  // Upload file\n  const { error: uploadError } = await supabase.storage\n    .from(bucket)\n    .upload(filePath, file, {\n      upsert: overwrite\n    });\n\n  if (uploadError) {\n    console.error('Upload error:', uploadError);\n    throw new Error(`Failed to upload file: ${uploadError.message}`);\n  }\n\n  // Get public URL\n  const { data } = supabase.storage.from(bucket).getPublicUrl(filePath);\n\n  return {\n    path: filePath,\n    src: data.publicUrl,\n    type: file instanceof File ? file.type : undefined,\n    size: file.size,\n    name: file instanceof File ? file.name : fileName,\n  };\n};\n\n/**\n * Check if a file exists in Supabase Storage\n * @param supabase - Supabase client instance\n * @param path - File path to check\n * @param bucket - Storage bucket name\n * @returns Promise<boolean> indicating if file exists\n */\nexport const checkFileExists = async (\n  supabase: SupabaseClient,\n  path: string,\n  bucket = 'attachments'\n): Promise<boolean> => {\n  try {\n    const { error } = await supabase.storage\n      .from(bucket)\n      .createSignedUrl(path, 60);\n    \n    return !error;\n  } catch {\n    return false;\n  }\n};\n\n/**\n * Delete a file from Supabase Storage\n * @param supabase - Supabase client instance\n * @param path - File path to delete\n * @param bucket - Storage bucket name\n * @returns Promise<void>\n */\nexport const deleteFromSupabaseStorage = async (\n  supabase: SupabaseClient,\n  path: string,\n  bucket = 'attachments'\n): Promise<void> => {\n  const { error } = await supabase.storage\n    .from(bucket)\n    .remove([path]);\n\n  if (error) {\n    console.error('Delete error:', error);\n    throw new Error(`Failed to delete file: ${error.message}`);\n  }\n};\n\n/**\n * Get a signed URL for a file in Supabase Storage\n * @param supabase - Supabase client instance\n * @param path - File path\n * @param expiresIn - Expiration time in seconds (default: 3600)\n * @param bucket - Storage bucket name\n * @returns Promise<string> with signed URL\n */\nexport const getSignedUrl = async (\n  supabase: SupabaseClient,\n  path: string,\n  expiresIn = 3600,\n  bucket = 'attachments'\n): Promise<string> => {\n  const { data, error } = await supabase.storage\n    .from(bucket)\n    .createSignedUrl(path, expiresIn);\n\n  if (error) {\n    throw new Error(`Failed to create signed URL: ${error.message}`);\n  }\n\n  return data.signedUrl;\n};\n\n/**\n * Upload multiple files to Supabase Storage\n * @param supabase - Supabase client instance\n * @param files - Array of files to upload\n * @param options - Upload options\n * @returns Promise<UploadedFile[]> with uploaded files information\n */\nexport const uploadMultipleFiles = async (\n  supabase: SupabaseClient,\n  files: (File | Blob)[],\n  options: FileUploadOptions = {}\n): Promise<UploadedFile[]> => {\n  const uploadPromises = files.map(file => \n    uploadToSupabaseStorage(supabase, file, options)\n  );\n\n  return Promise.all(uploadPromises);\n};\n","import { SupabaseClient } from '@supabase/supabase-js';\n\n/**\n * Database utilities and patterns for Supabase\n * Based on patterns from crm_demo\n */\n\nexport interface FullTextSearchOptions {\n  columns: string[];\n  query: string;\n  language?: string;\n}\n\nexport interface PaginationParams {\n  page?: number;\n  perPage?: number;\n  sortBy?: string;\n  sortOrder?: 'asc' | 'desc';\n}\n\n/**\n * Apply full-text search to a query\n * @param supabase - Supabase client instance\n * @param table - Table name\n * @param options - Search options\n * @returns Supabase query builder with search applied\n */\nexport const applyFullTextSearch = (\n  supabase: SupabaseClient,\n  table: string,\n  options: FullTextSearchOptions\n) => {\n  const { columns, query, language = 'english' } = options;\n  \n  if (!query.trim()) {\n    return supabase.from(table).select('*');\n  }\n\n  // Create text search query\n  const searchQuery = query\n    .split(' ')\n    .filter(term => term.length > 0)\n    .map(term => `${term}:*`)\n    .join(' & ');\n\n  // Build the query with text search\n  let queryBuilder = supabase.from(table).select('*');\n\n  // Apply text search on specified columns\n  const searchConditions = columns.map(column => \n    `${column}.fts(${language}).${searchQuery}`\n  ).join(',');\n\n  return queryBuilder.or(searchConditions);\n};\n\n/**\n * Apply pagination to a query\n * @param queryBuilder - Supabase query builder\n * @param params - Pagination parameters\n * @returns Query builder with pagination applied\n */\nexport const applyPagination = (\n  queryBuilder: any,\n  params: PaginationParams\n) => {\n  const { page = 1, perPage = 10, sortBy, sortOrder = 'asc' } = params;\n  \n  const from = (page - 1) * perPage;\n  const to = from + perPage - 1;\n\n  let query = queryBuilder.range(from, to);\n\n  if (sortBy) {\n    query = query.order(sortBy, { ascending: sortOrder === 'asc' });\n  }\n\n  return query;\n};\n\n/**\n * Check if a record exists\n * @param supabase - Supabase client instance\n * @param table - Table name\n * @param conditions - Conditions to check\n * @returns Promise<boolean> indicating if record exists\n */\nexport const recordExists = async (\n  supabase: SupabaseClient,\n  table: string,\n  conditions: Record<string, any>\n): Promise<boolean> => {\n  let query = supabase.from(table).select('id', { count: 'exact' });\n\n  // Apply conditions\n  Object.entries(conditions).forEach(([key, value]) => {\n    query = query.eq(key, value);\n  });\n\n  const { count, error } = await query;\n\n  if (error) {\n    throw new Error(`Failed to check record existence: ${error.message}`);\n  }\n\n  return (count || 0) > 0;\n};\n\n/**\n * Get record count with optional filters\n * @param supabase - Supabase client instance\n * @param table - Table name\n * @param filters - Optional filters\n * @returns Promise<number> with record count\n */\nexport const getRecordCount = async (\n  supabase: SupabaseClient,\n  table: string,\n  filters: Record<string, any> = {}\n): Promise<number> => {\n  let query = supabase.from(table).select('*', { count: 'exact', head: true });\n\n  // Apply filters\n  Object.entries(filters).forEach(([key, value]) => {\n    if (Array.isArray(value)) {\n      query = query.in(key, value);\n    } else {\n      query = query.eq(key, value);\n    }\n  });\n\n  const { count, error } = await query;\n\n  if (error) {\n    throw new Error(`Failed to get record count: ${error.message}`);\n  }\n\n  return count || 0;\n};\n\n/**\n * Batch insert records\n * @param supabase - Supabase client instance\n * @param table - Table name\n * @param records - Array of records to insert\n * @param batchSize - Size of each batch (default: 100)\n * @returns Promise<any[]> with inserted records\n */\nexport const batchInsert = async (\n  supabase: SupabaseClient,\n  table: string,\n  records: any[],\n  batchSize = 100\n): Promise<any[]> => {\n  const results: any[] = [];\n  \n  for (let i = 0; i < records.length; i += batchSize) {\n    const batch = records.slice(i, i + batchSize);\n    \n    const { data, error } = await supabase\n      .from(table)\n      .insert(batch)\n      .select();\n\n    if (error) {\n      throw new Error(`Batch insert failed: ${error.message}`);\n    }\n\n    if (data) {\n      results.push(...data);\n    }\n  }\n\n  return results;\n};\n\n/**\n * Batch update records\n * @param supabase - Supabase client instance\n * @param table - Table name\n * @param updates - Array of updates with id and data\n * @returns Promise<any[]> with updated records\n */\nexport const batchUpdate = async (\n  supabase: SupabaseClient,\n  table: string,\n  updates: Array<{ id: any; data: any }>\n): Promise<any[]> => {\n  const updatePromises = updates.map(({ id, data }) =>\n    supabase\n      .from(table)\n      .update(data)\n      .eq('id', id)\n      .select()\n      .single()\n  );\n\n  const results = await Promise.all(updatePromises);\n  \n  // Check for errors\n  results.forEach((result, index) => {\n    if (result.error) {\n      throw new Error(`Update failed for record ${updates[index].id}: ${result.error.message}`);\n    }\n  });\n\n  return results.map(result => result.data).filter(Boolean);\n};\n\n/**\n * Soft delete a record (set deleted_at timestamp)\n * @param supabase - Supabase client instance\n * @param table - Table name\n * @param id - Record ID\n * @returns Promise<any> with updated record\n */\nexport const softDelete = async (\n  supabase: SupabaseClient,\n  table: string,\n  id: any\n): Promise<any> => {\n  const { data, error } = await supabase\n    .from(table)\n    .update({ deleted_at: new Date().toISOString() })\n    .eq('id', id)\n    .select()\n    .single();\n\n  if (error) {\n    throw new Error(`Soft delete failed: ${error.message}`);\n  }\n\n  return data;\n};\n\n/**\n * Restore a soft-deleted record\n * @param supabase - Supabase client instance\n * @param table - Table name\n * @param id - Record ID\n * @returns Promise<any> with restored record\n */\nexport const restoreRecord = async (\n  supabase: SupabaseClient,\n  table: string,\n  id: any\n): Promise<any> => {\n  const { data, error } = await supabase\n    .from(table)\n    .update({ deleted_at: null })\n    .eq('id', id)\n    .select()\n    .single();\n\n  if (error) {\n    throw new Error(`Restore failed: ${error.message}`);\n  }\n\n  return data;\n};\n","import { SupabaseClient } from '@supabase/supabase-js';\n\n/**\n * Data provider utilities and factories for Supabase\n * Based on patterns from crm_demo\n */\n\nexport interface DataProviderConfig {\n  supabaseClient: SupabaseClient;\n  instanceUrl: string;\n  apiKey: string;\n  sortOrder?: string;\n}\n\nexport interface LifecycleCallback {\n  resource: string;\n  beforeCreate?: (params: any) => Promise<any>;\n  afterCreate?: (data: any, params: any) => Promise<any>;\n  beforeUpdate?: (params: any) => Promise<any>;\n  afterUpdate?: (data: any, params: any) => Promise<any>;\n  beforeDelete?: (params: any) => Promise<any>;\n  afterDelete?: (data: any, params: any) => Promise<any>;\n  beforeGetList?: (params: any) => Promise<any>;\n  afterGetList?: (data: any, params: any) => Promise<any>;\n  beforeGetOne?: (params: any) => Promise<any>;\n  afterGetOne?: (data: any, params: any) => Promise<any>;\n  beforeSave?: (data: any, resource: string, params: any) => Promise<any>;\n}\n\nexport interface FileProcessingOptions {\n  bucket?: string;\n  folder?: string;\n  generateFileName?: boolean;\n}\n\n/**\n * Process file uploads in data\n * @param data - Data object containing files\n * @param fileFields - Array of field names that contain files\n * @param supabase - Supabase client instance\n * @param options - File processing options\n * @returns Promise<any> with processed data\n */\nexport const processFileUploads = async (\n  data: any,\n  fileFields: string[],\n  supabase: SupabaseClient,\n  options: FileProcessingOptions = {}\n): Promise<any> => {\n  const processedData = { ...data };\n\n  for (const fieldName of fileFields) {\n    const fileData = data[fieldName];\n    \n    if (!fileData) continue;\n\n    // Handle single file\n    if (fileData.rawFile instanceof File) {\n      const uploadedFile = await uploadFileToStorage(fileData, supabase, options);\n      processedData[fieldName] = uploadedFile;\n    }\n    // Handle array of files\n    else if (Array.isArray(fileData)) {\n      const uploadedFiles = await Promise.all(\n        fileData.map(file => \n          file.rawFile instanceof File \n            ? uploadFileToStorage(file, supabase, options)\n            : file\n        )\n      );\n      processedData[fieldName] = uploadedFiles;\n    }\n  }\n\n  return processedData;\n};\n\n/**\n * Upload a single file to storage\n * @param fileData - File data object\n * @param supabase - Supabase client instance\n * @param options - Upload options\n * @returns Promise<any> with uploaded file data\n */\nconst uploadFileToStorage = async (\n  fileData: any,\n  supabase: SupabaseClient,\n  options: FileProcessingOptions\n): Promise<any> => {\n  const { bucket = 'attachments', folder = '', generateFileName = true } = options;\n\n  // Check if file already exists\n  if (!fileData.src.startsWith('blob:') && !fileData.src.startsWith('data:')) {\n    if (fileData.path) {\n      const { error } = await supabase.storage\n        .from(bucket)\n        .createSignedUrl(fileData.path, 60);\n\n      if (!error) {\n        return fileData; // File already exists\n      }\n    }\n  }\n\n  // Prepare file for upload\n  const dataContent = fileData.src\n    ? await fetch(fileData.src).then((res) => res.blob())\n    : fileData.rawFile;\n\n  const file = fileData.rawFile;\n  const fileExt = file.name.split('.').pop();\n  const fileName = generateFileName ? `${Math.random()}.${fileExt}` : file.name;\n  const filePath = folder ? `${folder}/${fileName}` : fileName;\n\n  // Upload file\n  const { error: uploadError } = await supabase.storage\n    .from(bucket)\n    .upload(filePath, dataContent);\n\n  if (uploadError) {\n    console.error('Upload error:', uploadError);\n    throw new Error('Failed to upload attachment');\n  }\n\n  // Get public URL\n  const { data } = supabase.storage.from(bucket).getPublicUrl(filePath);\n\n  // Update file data\n  return {\n    ...fileData,\n    path: filePath,\n    src: data.publicUrl,\n    type: file.type,\n  };\n};\n\n/**\n * Create avatar/image processing function\n * @param getAvatarFn - Function to generate avatar if none provided\n * @returns Processing function for avatar fields\n */\nexport const createAvatarProcessor = (\n  getAvatarFn: (data: any) => Promise<any>\n) => {\n  return async (params: any, supabase: SupabaseClient, options: FileProcessingOptions = {}) => {\n    let avatar = params.data.avatar;\n\n    if (typeof avatar !== 'object' || avatar === null || !avatar.src) {\n      avatar = await getAvatarFn(params.data);\n    } else if (avatar.rawFile instanceof File) {\n      avatar = await uploadFileToStorage(avatar, supabase, options);\n    }\n\n    return {\n      ...params,\n      data: {\n        ...params.data,\n        avatar,\n      },\n    };\n  };\n};\n\n/**\n * Create full-text search processor\n * @param columns - Columns to search in\n * @returns Processing function for search queries\n */\nexport const createFullTextSearchProcessor = (columns: string[]) => {\n  return (params: any) => {\n    const { filter } = params;\n    \n    if (!filter || !filter.q) {\n      return params;\n    }\n\n    const searchQuery = filter.q;\n    delete filter.q;\n\n    // Create search conditions for each column\n    const searchConditions = columns.reduce((acc, column) => {\n      acc[`${column}@ilike`] = `%${searchQuery}%`;\n      return acc;\n    }, {} as Record<string, any>);\n\n    return {\n      ...params,\n      filter: {\n        ...filter,\n        $or: searchConditions,\n      },\n    };\n  };\n};\n\n/**\n * Validate environment variables for Supabase\n * @param envVars - Object with environment variable names and values\n * @throws Error if required variables are missing\n */\nexport const validateSupabaseEnv = (envVars: Record<string, string | undefined>) => {\n  const missing = Object.entries(envVars)\n    .filter(([, value]) => !value)\n    .map(([key]) => key);\n\n  if (missing.length > 0) {\n    throw new Error(`Missing required environment variables: ${missing.join(', ')}`);\n  }\n};\n\n/**\n * Create a standardized error handler for data operations\n * @param operation - Operation name for context\n * @returns Error handler function\n */\nexport const createDataOperationErrorHandler = (operation: string) => {\n  return (error: any, context?: string) => {\n    const contextStr = context ? ` (${context})` : '';\n    console.error(`${operation} error${contextStr}:`, error);\n    \n    // Map common Supabase errors to user-friendly messages\n    if (error.code === '23505') {\n      throw new Error('This record already exists');\n    } else if (error.code === '23503') {\n      throw new Error('Cannot perform this operation due to related records');\n    } else if (error.code === 'PGRST116') {\n      throw new Error('Record not found');\n    } else if (error.message?.includes('JWT')) {\n      throw new Error('Authentication error. Please refresh the page');\n    }\n    \n    throw new Error(error.message || `${operation} failed`);\n  };\n};\n","import { create, StateCreator } from 'zustand';\nimport { persist, PersistOptions } from 'zustand/middleware';\n\n/**\n * Generic entity state interface\n */\nexport interface EntityState<T> {\n  entities: T[];\n  loading: boolean;\n  error: string | null;\n  initialized: boolean;\n}\n\n/**\n * Generic selectors for any entity type\n */\nexport interface EntitySelectors<T> {\n  getEntities: () => T[];\n  getEntityById: (id: string | number) => T | undefined;\n  getEntitiesByField: (field: keyof T, value: any) => T[];\n  getEntitiesCount: () => number;\n  getLoadingState: () => boolean;\n  getErrorState: () => string | null;\n  isInitialized: () => boolean;\n}\n\n/**\n * Generic actions for any entity type\n */\nexport interface EntityActions<T> {\n  setEntities: (entities: T[]) => void;\n  addEntity: (entity: T) => void;\n  updateEntity: (id: string | number, updates: Partial<T>) => void;\n  removeEntity: (id: string | number) => void;\n  setLoading: (loading: boolean) => void;\n  setError: (error: string | null) => void;\n  setInitialized: (initialized: boolean) => void;\n  reset: () => void;\n  \n  // Utility actions\n  cleanupDuplicates: () => void;\n  sortEntitiesByDate: (ascending?: boolean) => void;\n  sortEntitiesByField: (field: keyof T, ascending?: boolean) => void;\n  filterEntitiesByDateRange: (startDate: string, endDate: string, dateField?: keyof T) => T[];\n}\n\n/**\n * Complete entity store interface\n */\nexport interface EntityStore<T> extends EntityState<T>, EntitySelectors<T>, EntityActions<T> {}\n\n/**\n * Create selectors for any entity type\n */\nconst createSelectors = <T extends { id: string | number; created_at?: string }>(\n  entityKey: keyof EntityState<T>\n) => (\n  get: () => EntityState<T>\n): EntitySelectors<T> => ({\n  getEntities: () => get().entities,\n  getEntityById: (id: string | number) => get().entities.find(entity => entity.id === id),\n  getEntitiesByField: (field: keyof T, value: any) => \n    get().entities.filter(entity => entity[field] === value),\n  getEntitiesCount: () => get().entities.length,\n  getLoadingState: () => get().loading,\n  getErrorState: () => get().error,\n  isInitialized: () => get().initialized,\n});\n\n/**\n * Create utility actions for any entity type\n */\nconst createActions = <T extends { id: string | number; created_at?: string }>(\n  entityKey: keyof EntityState<T>\n) => (\n  set: (partial: Partial<EntityState<T>>) => void,\n  get: () => EntityState<T>\n): EntityActions<T> => ({\n  setEntities: (entities: T[]) => set({ entities }),\n  \n  addEntity: (entity: T) => {\n    const state = get();\n    set({ entities: [entity, ...state.entities] });\n  },\n\n  updateEntity: (id: string | number, updates: Partial<T>) => {\n    const state = get();\n    const updatedEntities = state.entities.map(entity => \n      entity.id === id ? { ...entity, ...updates } : entity\n    );\n    set({ entities: updatedEntities });\n  },\n\n  removeEntity: (id: string | number) => {\n    const state = get();\n    const filteredEntities = state.entities.filter(entity => entity.id !== id);\n    set({ entities: filteredEntities });\n  },\n\n  setLoading: (loading: boolean) => set({ loading }),\n  setError: (error: string | null) => set({ error }),\n  setInitialized: (initialized: boolean) => set({ initialized }),\n\n  reset: () => set({ \n    entities: [], \n    loading: false, \n    error: null, \n    initialized: false \n  }),\n\n  cleanupDuplicates: () => {\n    const state = get();\n    const uniqueEntities = [];\n    const seenIds = new Set();\n    \n    state.entities.forEach(entity => {\n      if (!seenIds.has(entity.id)) {\n        seenIds.add(entity.id);\n        uniqueEntities.push(entity);\n      }\n    });\n    \n    set({ entities: uniqueEntities });\n  },\n\n  sortEntitiesByDate: (ascending = false) => {\n    const state = get();\n    const sortedEntities = [...state.entities].sort((a, b) => {\n      const dateA = new Date(a.created_at || 0);\n      const dateB = new Date(b.created_at || 0);\n      return ascending ? dateA.getTime() - dateB.getTime() : dateB.getTime() - dateA.getTime();\n    });\n    set({ entities: sortedEntities });\n  },\n\n  sortEntitiesByField: (field: keyof T, ascending = true) => {\n    const state = get();\n    const sortedEntities = [...state.entities].sort((a, b) => {\n      const valueA = a[field];\n      const valueB = b[field];\n      \n      if (valueA < valueB) return ascending ? -1 : 1;\n      if (valueA > valueB) return ascending ? 1 : -1;\n      return 0;\n    });\n    set({ entities: sortedEntities });\n  },\n\n  filterEntitiesByDateRange: (startDate: string, endDate: string, dateField: keyof T = 'created_at' as keyof T) => {\n    const state = get();\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    \n    return state.entities.filter(entity => {\n      const entityDate = new Date(entity[dateField] as any);\n      return entityDate >= start && entityDate <= end;\n    });\n  },\n});\n\n/**\n * Create a standardized store for any entity type\n */\nexport function createEntityStore<T extends { id: string | number; created_at?: string }>(\n  entityName: string,\n  customActions?: (\n    set: (partial: Partial<EntityState<T>>) => void,\n    get: () => EntityState<T>\n  ) => Record<string, any>,\n  customSelectors?: (\n    get: () => EntityState<T>\n  ) => Record<string, any>,\n  persistOptions?: PersistOptions<EntityState<T>>\n) {\n  const initialState: EntityState<T> = {\n    entities: [],\n    loading: false,\n    error: null,\n    initialized: false,\n  };\n\n  const storeCreator: StateCreator<EntityStore<T>> = (set, get) => ({\n    ...initialState,\n    ...createSelectors<T>('entities')(get),\n    ...createActions<T>('entities')(set, get),\n    ...(customActions ? customActions(set, get) : {}),\n    ...(customSelectors ? customSelectors(get) : {}),\n  });\n\n  if (persistOptions) {\n    return create<EntityStore<T>>()(\n      persist(storeCreator, {\n        name: `${entityName}-store`,\n        ...persistOptions,\n      })\n    );\n  }\n\n  return create<EntityStore<T>>()(storeCreator);\n}\n\n/**\n * UI Store interface for common UI state management\n */\nexport interface UIState {\n  // Loading states\n  loading: boolean;\n  loadingStates: Record<string, boolean>;\n  \n  // Error states\n  error: string | null;\n  errors: Record<string, string | null>;\n  \n  // Modal states\n  modals: Record<string, boolean>;\n  \n  // Form states\n  forms: Record<string, any>;\n  \n  // Filter states\n  filters: Record<string, any>;\n  \n  // Notification states\n  notifications: Array<{\n    id: string;\n    type: 'success' | 'error' | 'warning' | 'info';\n    message: string;\n    timestamp: number;\n  }>;\n  \n  // General UI states\n  sidebarOpen: boolean;\n  theme: 'light' | 'dark' | 'system';\n  initialized: boolean;\n}\n\n/**\n * UI Store actions\n */\nexport interface UIActions {\n  // Loading actions\n  setLoading: (loading: boolean) => void;\n  setLoadingState: (key: string, loading: boolean) => void;\n  getLoadingState: (key?: string) => boolean;\n  \n  // Error actions\n  setError: (error: string | null) => void;\n  setErrorState: (key: string, error: string | null) => void;\n  getErrorState: (key?: string) => string | null;\n  clearErrors: () => void;\n  \n  // Modal actions\n  openModal: (modalName: string) => void;\n  closeModal: (modalName: string) => void;\n  toggleModal: (modalName: string) => void;\n  isModalOpen: (modalName: string) => boolean;\n  closeAllModals: () => void;\n  \n  // Form actions\n  setFormData: (formName: string, data: any) => void;\n  getFormData: (formName: string) => any;\n  clearFormData: (formName: string) => void;\n  clearAllForms: () => void;\n  \n  // Filter actions\n  setFilter: (filterName: string, value: any) => void;\n  getFilter: (filterName: string) => any;\n  clearFilter: (filterName: string) => void;\n  clearAllFilters: () => void;\n  \n  // Notification actions\n  addNotification: (notification: Omit<UIState['notifications'][0], 'id' | 'timestamp'>) => void;\n  removeNotification: (id: string) => void;\n  clearNotifications: () => void;\n  \n  // General UI actions\n  setSidebarOpen: (open: boolean) => void;\n  toggleSidebar: () => void;\n  setTheme: (theme: UIState['theme']) => void;\n  setInitialized: (initialized: boolean) => void;\n  \n  // Reset\n  reset: () => void;\n}\n\n/**\n * Complete UI store interface\n */\nexport interface UIStore extends UIState, UIActions {}\n\n/**\n * Create a standardized UI store\n */\nexport function createUIStore(\n  customActions?: (\n    set: (partial: Partial<UIState>) => void,\n    get: () => UIState\n  ) => Record<string, any>,\n  persistOptions?: PersistOptions<UIState>\n) {\n  const initialState: UIState = {\n    loading: false,\n    loadingStates: {},\n    error: null,\n    errors: {},\n    modals: {},\n    forms: {},\n    filters: {},\n    notifications: [],\n    sidebarOpen: false,\n    theme: 'system',\n    initialized: false,\n  };\n\n  const storeCreator: StateCreator<UIStore> = (set, get) => ({\n    ...initialState,\n    \n    // Loading actions\n    setLoading: (loading: boolean) => set({ loading }),\n    setLoadingState: (key: string, loading: boolean) => {\n      const state = get();\n      set({ loadingStates: { ...state.loadingStates, [key]: loading } });\n    },\n    getLoadingState: (key?: string) => {\n      const state = get();\n      return key ? state.loadingStates[key] || false : state.loading;\n    },\n    \n    // Error actions\n    setError: (error: string | null) => set({ error }),\n    setErrorState: (key: string, error: string | null) => {\n      const state = get();\n      set({ errors: { ...state.errors, [key]: error } });\n    },\n    getErrorState: (key?: string) => {\n      const state = get();\n      return key ? state.errors[key] || null : state.error;\n    },\n    clearErrors: () => set({ error: null, errors: {} }),\n    \n    // Modal actions\n    openModal: (modalName: string) => {\n      const state = get();\n      set({ modals: { ...state.modals, [modalName]: true } });\n    },\n    closeModal: (modalName: string) => {\n      const state = get();\n      set({ modals: { ...state.modals, [modalName]: false } });\n    },\n    toggleModal: (modalName: string) => {\n      const state = get();\n      const isOpen = state.modals[modalName] || false;\n      set({ modals: { ...state.modals, [modalName]: !isOpen } });\n    },\n    isModalOpen: (modalName: string) => {\n      const state = get();\n      return state.modals[modalName] || false;\n    },\n    closeAllModals: () => set({ modals: {} }),\n    \n    // Form actions\n    setFormData: (formName: string, data: any) => {\n      const state = get();\n      set({ forms: { ...state.forms, [formName]: data } });\n    },\n    getFormData: (formName: string) => {\n      const state = get();\n      return state.forms[formName];\n    },\n    clearFormData: (formName: string) => {\n      const state = get();\n      const { [formName]: _, ...rest } = state.forms;\n      set({ forms: rest });\n    },\n    clearAllForms: () => set({ forms: {} }),\n    \n    // Filter actions\n    setFilter: (filterName: string, value: any) => {\n      const state = get();\n      set({ filters: { ...state.filters, [filterName]: value } });\n    },\n    getFilter: (filterName: string) => {\n      const state = get();\n      return state.filters[filterName];\n    },\n    clearFilter: (filterName: string) => {\n      const state = get();\n      const { [filterName]: _, ...rest } = state.filters;\n      set({ filters: rest });\n    },\n    clearAllFilters: () => set({ filters: {} }),\n    \n    // Notification actions\n    addNotification: (notification) => {\n      const state = get();\n      const newNotification = {\n        ...notification,\n        id: `notification_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        timestamp: Date.now(),\n      };\n      set({ notifications: [...state.notifications, newNotification] });\n    },\n    removeNotification: (id: string) => {\n      const state = get();\n      set({ notifications: state.notifications.filter(n => n.id !== id) });\n    },\n    clearNotifications: () => set({ notifications: [] }),\n    \n    // General UI actions\n    setSidebarOpen: (open: boolean) => set({ sidebarOpen: open }),\n    toggleSidebar: () => {\n      const state = get();\n      set({ sidebarOpen: !state.sidebarOpen });\n    },\n    setTheme: (theme: UIState['theme']) => set({ theme }),\n    setInitialized: (initialized: boolean) => set({ initialized }),\n    \n    // Reset\n    reset: () => set(initialState),\n    \n    // Custom actions\n    ...(customActions ? customActions(set, get) : {}),\n  });\n\n  if (persistOptions) {\n    return create<UIStore>()(\n      persist(storeCreator, {\n        name: 'ui-store',\n        ...persistOptions,\n      })\n    );\n  }\n\n  return create<UIStore>()(storeCreator);\n}\n\n/**\n * Specialized store creators for common patterns\n */\n\n/**\n * Create a CRUD store for entities with standard CRUD operations\n */\nexport function createCRUDStore<T extends { id: string | number; created_at?: string }>(\n  entityName: string,\n  persistOptions?: PersistOptions<EntityState<T>>\n) {\n  return createEntityStore<T>(\n    entityName,\n    (set, get) => ({\n      // Add CRUD-specific actions here if needed\n      bulkUpdate: (updates: Array<{ id: string | number; data: Partial<T> }>) => {\n        const state = get();\n        const updatedEntities = state.entities.map(entity => {\n          const update = updates.find(u => u.id === entity.id);\n          return update ? { ...entity, ...update.data } : entity;\n        });\n        set({ entities: updatedEntities });\n      },\n      \n      bulkDelete: (ids: (string | number)[]) => {\n        const state = get();\n        const filteredEntities = state.entities.filter(entity => !ids.includes(entity.id));\n        set({ entities: filteredEntities });\n      },\n    }),\n    undefined,\n    persistOptions\n  );\n}\n\n/**\n * Create a paginated store for entities with pagination support\n */\nexport interface PaginatedState<T> extends EntityState<T> {\n  currentPage: number;\n  perPage: number;\n  totalPages: number;\n  totalCount: number;\n}\n\nexport function createPaginatedStore<T extends { id: string | number; created_at?: string }>(\n  entityName: string,\n  defaultPerPage = 10,\n  persistOptions?: PersistOptions<PaginatedState<T>>\n) {\n  const initialState: PaginatedState<T> = {\n    entities: [],\n    loading: false,\n    error: null,\n    initialized: false,\n    currentPage: 1,\n    perPage: defaultPerPage,\n    totalPages: 0,\n    totalCount: 0,\n  };\n\n  const storeCreator: StateCreator<PaginatedState<T> & EntityActions<T> & {\n    setPage: (page: number) => void;\n    setPerPage: (perPage: number) => void;\n    setPaginationData: (data: { totalPages: number; totalCount: number }) => void;\n    getPaginatedEntities: () => T[];\n    hasNextPage: () => boolean;\n    hasPreviousPage: () => boolean;\n  }> = (set, get) => ({\n    ...initialState,\n    ...createActions<T>('entities')(set as any, get as any),\n    \n    setPage: (page: number) => set({ currentPage: page }),\n    setPerPage: (perPage: number) => set({ perPage, currentPage: 1 }),\n    setPaginationData: (data: { totalPages: number; totalCount: number }) => set(data),\n    \n    getPaginatedEntities: () => {\n      const state = get();\n      const startIndex = (state.currentPage - 1) * state.perPage;\n      const endIndex = startIndex + state.perPage;\n      return state.entities.slice(startIndex, endIndex);\n    },\n    \n    hasNextPage: () => {\n      const state = get();\n      return state.currentPage < state.totalPages;\n    },\n    \n    hasPreviousPage: () => {\n      const state = get();\n      return state.currentPage > 1;\n    },\n  });\n\n  if (persistOptions) {\n    return create()(\n      persist(storeCreator, {\n        name: `${entityName}-paginated-store`,\n        ...persistOptions,\n      })\n    );\n  }\n\n  return create()(storeCreator);\n}\n\n/**\n * Export commonly used store types\n */\nexport type { EntityState, EntitySelectors, EntityActions, EntityStore, UIState, UIActions, UIStore };\n"],"mappings":"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","names":["min","max","sum","min","max","formatDate","format","React","jsx","React","jsx","Slot","cva","jsx","Slot","jsx","jsx","jsx","clsx","twMerge","cn","jsx","cn","jsx","cn","jsx","jsx","useState","useMemo","jsx","jsxs","Table","TableHeader","TableBody","TableRow","TableHead","TableCell","Button","useState","useMemo","table","React","jsx","jsxs","React","error","jsx","jsxs","ThemeSwitch","Button","createContext","useContext","useState","useEffect","jsx","error","session","jsx","jsxs","jsx","jsxs","useMemo","useState","useEffect","jsx","jsxs","useMemo","useState","useRef","showError","showWarning","showInfo","useState","useRef","showWarning","showError","options","showInfo","useEffect","useEffect","useQuery","useMutation","useQueryClient","useCallback","useMemo","useQueryClient","format","useState","useCallback","useMemo","useQuery","useMutation","useQueryClient","useCallback","useMemo","first","jsx","jsxs","useMemo","useState","useCallback","jsx","jsx","jsxs","Fragment","jsx","jsxs","useState","useCallback","React","useCallback","useState","LogOut","Settings","User","LoaderCircle","RotateCw","jsx","jsxs","React","LoaderCircle","RotateCw","useState","useCallback","LogOut","SafeLink","User","Settings","useState","jsx","jsxs","useState","React","Children","useCallback","useState","LogOut","Settings","User","LoaderCircle","RotateCw","Menu","jsx","jsxs","UserMenuContext","React","useUserMenu","RefreshButton","LoaderCircle","RotateCw","UserMenu","useState","useCallback","Children","LogOut","UsersMenu","User","ConfigurationMenu","Settings","Menu","ERROR_TYPES","range","safeAsync","handleSupabaseError","sortBy","create"]}